{"meta":{"title":"留学生Computer Science编程作业代写","subtitle":"专业 高效 原创","description":null,"author":"csyoyo","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2016-09-06T11:13:18.000Z","updated":"2016-09-06T12:21:41.289Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2016-08-27T05:37:39.600Z","updated":"2016-08-27T05:37:39.536Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"留学生Computer Science编程作业代写","slug":"mainpage","date":"2111-01-11T07:55:30.000Z","updated":"2016-09-19T09:59:54.153Z","comments":true,"path":"2111/01/11/mainpage/","link":"","permalink":"http://yoursite.com/2111/01/11/mainpage/","excerpt":"","text":"团队介绍 Team很小，运转高效，我们不是代写机构，而是一个高效协作的团队，团队成员有的擅长java，有的擅长python，有的擅长数据结构，有的擅长机器学习， 有的擅长C/C++，有的擅长ios/android。通过自己设计的任务分发系统，我们可以在15分钟内迅速准确评估时间和难度，完成之后还有互相之间的code review。 相比与代写机构的黑心，个人代写的不规范(我们也是个人代写发展而来)，我们团队经过不断的调整进步，具备了代写机构规范的流程优势， 并且价格合理，具备了个人代写的一对一，并且熟练了解代写流程规范。 服务内容 代写美国、加拿大、英国、澳洲或者其他国家的Computer Science编程作业，范围包括Assignment、Homework、Lab、Project、Final甚至App。 我不会给你看不懂的高逼格code，我的编程风格都是模仿你的slides和notes，为你量身打造，绝无超纲代码。 特别擅长各种疑难作业，做过大量Game Design、Operating System、Database System, Web Design，得分几乎全A(90%)。 擅长范围 我们擅长范围包括但不限于： C C++ Java Python Php Android Ios Js Jsp Qt MFC J2ee Sql Matlab Ssh Assignment/Project/Lab/作业/编程/辅导 Data structure/数据结构/机器学习/定制/制作 Linux/Windows/Mac socket Algorithom/算法 网站设计 Web开发 Operating system/操作系统 Computer Science Everything/程序设计/app/ 质量保证 开发之前会详细问你的开发语言、系统环境、软件版本、测试方式(本地测试、服务器自动测试)、是否需要documention、deadline(精确到小时) 沟通好时间后，我们不会临着deadline给你code。一般都是提前足够的时间给客户反馈一个版本的code，如果有问题需要反馈修改也有充足的时间。 除了code会免费提供给客户一个运行说明word，即使客户不知道如何运行，根据说明word也可以运行验证code。 带checker/tester的必全过，带得分点的必全做，能顺手做掉的bonus也帮你做。 小作业24小时内完成，大作业24-72小时，绝不浪费你的slip day。 代码肯定是手写原创，不违反honor code，我给你的代码属于reference。 免费提供售后服务，包括代码运行，讲解答疑。 价格优势 价格通常在$100 USD以上，只有部分Lab可能低于这个价格。 真正的无中介费用，绝不漫天要价，欢迎你货比三家，支持PayPal/支付宝/微信支付。 通常先收取一半定金，写好之后验收code之后付尾款。 我给你的不止是一个答案，还有我作为工程师的经验，编程方法和技巧。 联系方式 邮箱 : cscoderman@gmail.com (请附带作业要求) 微信 : cscoderman 联系时，请简单或详细地说明你的要求+微信昵称(如大二，Algorithm and Data Structure)，便于我们快速报价与沟通。","categories":[],"tags":[]},{"title":"代写c++ Application Development using C++  1","slug":"page17","date":"2016-10-23T04:16:44.000Z","updated":"2016-11-01T11:55:48.713Z","comments":true,"path":"2016/10/23/page17/","link":"","permalink":"http://yoursite.com/2016/10/23/page17/","excerpt":"","text":"Introduction根据题目需求完成一个名字叫PIG的小游戏，用到了c++的类的封装等操作，分为玩家与玩家和电脑与电脑这2种方法，使用到了数据结构list, 电脑玩家需要自己涉及最少2种以上的智能策略。最后需要总结分析，写一份相关的报高文档Requirement2016/17 ELEC362 - Application Development using C++ 1Assignment 1Program a multiplayer console game of ‘Pig’Game Rules: (according to Wikipedia)Each turn, a player repeatedly rolls a dice until either a 1 is rolled or the player decides to“hold”:• If the player rolls a 1, they score nothing and it becomes the next player’s turn.• If the player rolls any other number, it is added to their turn total and the player’s turncontinues.• If a player chooses to “hold”, their turn total is added to their score, and it becomesthe next player’s turn.The first player to score 100 or more points wins.For example, the first player, Ann, begins a turn with a roll of 5. Ann could hold and score 5points, but chooses to roll again. Ann rolls a 2, and could hold with a turn total of 7 points, butchooses to roll again. Ann rolls a 1, and must end her turn without scoring. The next player,Bob, rolls the sequence 4-5-3-5-5, after which he chooses to hold, and adds his turn total of 22points to his score.The implementation should exercise the object-oriented design aspects and goodpractices for design and implementation.entities that must be realised as C++ classes.attributes for each of these entities.Identify the methods that may be useful for each of these entities.• By carefully considering the rules of the game, implement the classes for your entities.Pay special attention to the interaction between classes and annotate yourimplementation using useful comments.• Design you classes to be reusable for part 1 and part 2Part one of assignmentProgram a multi-player version of the game that allows a number of players to competeagainst each other.Part two of assignment(Reusing the classes from the multiplayer game)Develop automated players that use at least two strategies (e.g. hold after a fixed number ofthrows, hold after a fixed gain of points)Write a code that automatically runs the automated players against each other and usestatistics to compare the strategies.2016/17 ELEC362 - Application Development using C++ 2SubmissionPlease submit your report and the source code (zipped project for both parts) on VITAL.In the report you will outline your design process by describing what classes you use, whatattributes and methods they contain and give an overview how they intact.Please copy your source code at the end of the report. (When pasting code in Word choose‘Past Options/Keep Source formatting’ to keep the colour coded formatting used in VisualStudio.)","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"代写C++ Project for C++","slug":"page16","date":"2016-10-22T06:23:32.000Z","updated":"2016-11-01T11:51:02.486Z","comments":true,"path":"2016/10/22/page16/","link":"","permalink":"http://yoursite.com/2016/10/22/page16/","excerpt":"","text":"Introduction写一个c++的项目，该项目主要练习c++的基础知识和对类的封装，需要实现2个类，然后对这2个类进行扩展要求，属于c++的初级用法RequirementProject for C++• Create an application containing thefollowing:2+ user defined classes4+ data members per class(including at least one use of an array)4+ methods per class (access and manipulation)2+ if / if-else statements2+ while loops2+ for loops1 or more nested loopsFile IO for reading and writing dataCSCI 1300 Fall 2016Project for C++For this project, you will submit:• A description of what your program does and how to use it (1-2 pages).• Screenshots showing the program working.• Your code.• Zip all files together and submit them to Moodle. Name the zip file_Project1.zip.• FAQs:• Do I have to design my own project, or can I work with a friend to design aproject?– You can work with a friend to come up with a project concept and you can help eachother work through coding issues, but each of you needs to submit individual work.• How will projects be graded?– All projects will be interview graded to give you the opportunity to brag about your workand also discuss parts of your project that might not be working quite the way youwant them to.CSCI 1300 Fall 2016Project ContestAs an incentive for this project, we will select the best project in three categories:Best Novice ProjectAs there are students that have had prior programming experience, this award islimited to students who had no experience in programming before this class.Best GameGames are a common theme in projects. This award will recognize who submitsthe best game.Best Public Service ProjectProviding the public with programs to aid or support a special cause cansignificantly improve our world. This award will recognize who submits the bestproject for a public cause.Each TA will submit the best project from their recitations for each category. All the TA’s and theInstructor will vote to determine the winners. (The judging criteria will be on the codecorrectness and style, creativity of idea, and clarity of the written explanation.)The students of the winning projects will receive a 2 point bonus in their final grade.CSCI 1300 Fall 2016","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写JavaScript Assignment 1","slug":"page15","date":"2016-10-20T03:13:42.000Z","updated":"2016-10-27T12:15:52.974Z","comments":true,"path":"2016/10/20/page15/","link":"","permalink":"http://yoursite.com/2016/10/20/page15/","excerpt":"","text":"Introduction题目分析如下：1.图书积分规则: 如果客户购买0本书，他们赚0分 如果客户购买1本书，他们可获得4分 如果客户购买2本书，他们可获得8分 如果客户购买3本书，他们可获得16分 如果客户购买的书超过3本,超过3本的部分按照每本16分的基础上在加7分2.非图书积分规则: 每消费$10便可获得4分:例如–消费$12获得4分Requirement1CS 170 ‐ Computer Applications for BusinessFall 2016 ‐ Assignment 7JavaScript Event-Driven ProgrammingDue Date Before 11:00 PM - Friday, October 28 th , 2016Accept Until Before 11:00 PM - Friday, November 4 th , 2016Evaluation 15 pointsSubmit to Sakai Assignment7_answers.html fileTo get credit for this assignment:Upload and submit the Assignment7_answers.html file through Sakai.Learning Objectives:This assignment is designed to practice:1. Understand the basic input and output mechanisms of dynamic web applications fromthe code perspective2. Implement JavaScript code which will handle user events3. Display feedback of said processed interactions back to the user4. Practice your understanding of basic JavaScript from the prior Assignmenta variables, including;i The declaration, initialization and assignment processesb Use of the conditional if statementsc Use of arithmetic and logic operatorsd Use of commentsDirections:You are provided an HTML program. Your responsibility is to insert the HTML tags with theappropriate JavaScript statements that will solve the problem discussed below, and tocomment the html file with the requested information per the requirements. The problemdescription and HTML program provided are slightly different from Assignment 6. Be sure tostart fresh.2Problem to solve:The Serendipity Booksellers has a book club that awards points to its customers based on thenumber of books purchased each month. The points are awarded as follows: If a customer purchases 0 books, they earn 0 points If a customer purchases 1 book, they earn 4 points If a customer purchases 2 books, they earn 8 points If a customer purchases 3 books, they earn 16 points If a customer purchases more than 3 books, they earn an additional 7 points on top ofthe 16 points for each book above 3.Serendipity Booksellers also awards points based on the dollar value spent on non-bookmerchandise. Four (4) points are awarded for every $10 spent. Partial awards are not provided.For example, 4 points will be awarded for spending $10.00 up to $10.99. No points are awardedfor less than $10.Preferred Customers receive a bonus of double award points.The Serendipity Booksellers website needs to be updated to ask the customer to enter thenumber of books purchased last month, the dollars spent on non-book merchandise, confirm ifthey are a Preferred Customer, and then calculate and display the number of award pointsearned.Requirements:For this assignment;1. Your program will calculate the award points as described above.2. You will generate HTML comments to add your name, section and TA name. Each on aseparate line within the tags. This will (should) NOT be visible in the documenton the web browser).3. Utilize a tag4. You will then add the HTML tags with the proper JavaScript code to produce:a. A textbox to solicit the number of books purchasedb. A textbox to solicit the dollars of non-book merchandisec. Grouped radio buttons to determine Preferred Customer membershipd. A button to calculate the number of points awardede. A readonly textbox to display the result the calculation5. Utilize JavaScript comments to explain the steps you are preforming within your code. AJavaScript comment’s form is:/ Place your comment between the stars /36. Variable names should be descriptive. For example, if a program is calculating the totalcharge for a bill at a restaurant, it may have a variable named tipAmount.7. Utilize at least one if/else statement. Consider using the if/else in determining thebonus points.A sample of what your webpage could look like:Additional Information:Since the contents of a textbox, is going to be used in mathematical operations. Textboxessometimes treat input as Strings. Use the function parseInt() to convert the String text to anumber. Otherwise your calculation operations will not perform as expected.JavaScript provides several math utilities. The Math.floor() method rounds a numberDOWNWARDS to the nearest integer, and returns the result.References:Fluency 6 - Chapter 17 - Fundamental Concepts Expressed in JavaScript- Chapter 18 – A JavaScript Programw3schools.com - http://www.w3schools.com/js/default.aspFirefox Tools - https://developer.mozilla.org/en-US/docs/Tools/DebuggerLectures’ slides and examplesRecitation Week 6Recitation Week 7","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"代写Java Assignment 1","slug":"page14","date":"2016-10-19T05:12:42.000Z","updated":"2016-10-27T10:10:29.671Z","comments":true,"path":"2016/10/19/page14/","link":"","permalink":"http://yoursite.com/2016/10/19/page14/","excerpt":"","text":"Introduction写一个购票管理系统，涉及到增，删，改，查等操作，是JAVA的入门级别基础知识，主要考察对java的级别操作，I/O读写等知识点RequirementITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 1 of 9Assignment 1OverviewThis is an individual assignment that requires you to design, develop and test a small procedural Javaprogram.Timelines and ExpectationsPercentage Value of Task: 20%Due: 16:00 Friday 21 st October 2016 (week 7)Minimum time expectation: 10 hoursLearning Outcomes AssessedThe following course learning outcomes are assessed by completing this assessment: Identify and use the correct syntax of a common programming language Recall and use typical programming constructs to design and implement simple softwaresolutions Reproduce and adapt commonly used basic algorithms Utilise pseudocode and/or algorithms as a major program design technique Write and implement a solution algorithm using basic programming constructs Demonstrate debugging and testing skills whilst writing code Develop self-reliance and judgement in adapting algorithms to diverse contexts Design and write program solutions to identified problems using accepted design constructsITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 2 of 9Assessment DetailsThe Federation University Australia Olympic Games are about to commence! The games have beenscheduled to begin on Saturday 3rd December 2016, competitors are busy training and now it’s timeto prepare to sell spectator tickets.Your task is to design, develop and test a small application for recording ticket sales to this event.Stage 1: DesignThis stage requires you to prepare documentation that describes the function of the program and howit is to be tested. There is no coding or code testing involved in this stage. A document template hasbeen provided for your use.Requirements:1) Read through Stage 2: Program Development to obtain details of the requirements of thisprogram.2) Write an algorithm that describes how the program will operate.a. All program requirements – base, standard and advanced – must be included, even if youdo not end up including all these requirements in your program code.b. The algorithm must be structured logically so that the program would function correctly.3) Prepare and document test cases that can be used to check that the program works correctly,once it has been coded. You do NOT need to actually run the test cases in this stage; this willoccur in Stage 3: Testing.a. All program requirements – base, standard and advanced, must be included, even if youdo not end up including all these requirements in your program code.b. Make sure the test cases include checking of data entered by the user to make sure thatonly valid data is accepted. If the user enters invalid data, the user should be informed ofthis and given another chance to enter the data. NB: As we have not covered exceptionhandling, you may assume that the user will always enter an integer.c. Test cases should be documented using a template like the one below. You may includeextra information if you wish. At this stage, the Actual Result column will be left blank.Test Case Expected Result Actual ResultThe user selects to purchase Tier 1tickets.The user is prompted toenter the number oftickets to purchase.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 3 of 9Stage 2: Program DevelopmentUsing the Design Documentation to assist you, develop a Java program that records spectator ticketsales at the gate for the Federation University Australia Olympic Games, implementing therequirements outlined in this section. These requirements have been broken into three groups: Base Functionality includes the minimal level of requirements to achieve the essentialcomponents of this assignment. This group of requirements focuses on getting the code towork and on using the programming constructs we cover in class. You can expect to useconstants, variables, loops, conditional statements and arithmetic operators for theserequirements and you should look for opportunities to use these wherever you can. You will notreceive full marks for implementing a requirement, even if it works, if you have not used theappropriate programming construct to do so.At this level, you can decide if it is easier for you to code everything within a single method, orto modularize it straight away. Standard Functionality ensures the code is modularized, and that method calls are used toensure the program flows correctly. It allows data to pass from one method to another asparameters. It also includes providing a running total of tickets within an order, which is notessential for getting the program to work, but is useful information for the user to see. Advanced Functionality provides a challenge task, and is best left until all the other requirementshave been addressed. It requires looking at a Java API to find out how to use a class we havenot covered in the course, and using this to provide a countdown of days remaining until thegames commence.All three groups require that you follow coding conventions, such as proper layout of code, usingnaming conventions and writing meaningful comments throughout your program.Base Functionality:1. Display a welcome message when the program starts The welcome message should have a row of asterisks at the top and the bottom, just longenough to extend over the text. Hint: Use a For loop for this. The first line of the message should read “FEDERATION UNIVERSITY AUSTRALIAOLYMPICS” and be approximately centred in the row of asterisks by printing white spacefirst. Hint: Can you modify the For loop from the previous step to print the white spaces? A second line of the message should be blank. The third line should read “Developed by” followed by your name and a comma, then “student ID ”, then your student id, then finally “ for ITECH1000 Sem 2 2016”. The fourth line should be blank.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 4 of 92. Provide a menu from which the user can select to Purchase Tickets, View Ticket Sales or Exit.This menu should be repeated each time after the user has chosen and completed an option untilthe user chooses to Exit. The user selects an option by entering the number next to it. If aninvalid number is selected, the user is advised and shown the menu again to make anotherselection.3. When the user selects the Purchase Tickets option, provide another menu from which the usercan select Tier 1 Tickets, Tier 2 Tickets, Finalise Order or Cancel Order. The user selects anoption by entering the number next to it. If an invalid number is selected, the user is advised andshown the menu again to make another selection.a. Should the user select Tier 1 Tickets or Tier 2 Tickets, they are prompted to enter theNumber of Tickets required. After entering the number of tickets required, they arereturned to the Ticket Purchasing Menu so that they may choose to purchase additionaltickets. The user may not choose to purchase a negative number of tickets, but apurchase of 0 tickets is permitted.b. Should the user select Finalise Order:i. The sale is processed by displaying the number of each type of ticket purchasedand the total cost of the tickets in this order. A Tier 1 ticket costs $18.50; a Tier 2ticket costs $11.25.ii. A record is kept of the total cost of tickets sold, the total number of Tier 1 ticketssold and the total number of Tier 2 tickets sold. This is a combined total from allorders; there is no need to keep a record of the number of tickets in eachindividual order.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 5 of 9iii. The user is returned to the menu from Step 2.c. Should the user select Cancel Order:i. The order is cancelled and a message displayed to confirm this to the user.ii. The user is returned to the menu from Step 2.4. When the user selects the View Ticket Sales option, display the total value of ticket sales and boththe total number of Tier 1 tickets and the total number of Tier 2 tickets sold across ALL orders.Highlight this message display with a row of 50 asterisks before and after the message. After thefinal row of asterisks, redisplay the menu from Step 2.5. When the user selects Exit System, quit the program with a message to the user.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 6 of 9Standard Functionality:6. Update the Ticket Purchasing Menu so that a running total of tickets included in an order isdisplayed until the order is finalized7. Modularize the code, correctly using method calls and passing data between methods asparameters.Advanced Functionality:8. Update the Welcome Message to include a countdown of the number of days to go until thegames begin.a. Use the GregorianCalendar class to manage your dates. You will need to importjava.util.GregorianCalendar to use this library.b. The countdown must be calculated based on the number of days between the time theprogram runs, and Saturday 3rd December 2016. It should also be possible to just updatethe date within the code and have the countdown automatically recalculate the number ofdays until the games commence.c. There is no pre-defined method for finding the difference between two dates in this library.You will need to develop your own, using the features of the GregorianCalendar class.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 7 of 9Stage 3: TestingUsing a copy of the test cases developed in Stage 1: Design, test the program you have developed inStage 2: Program Development. Document your results, including both failed and successful tests.Note: Please do not leave out any failed tests. If your testing highlights that your program has notworked correctly, then the failed tests help to demonstrate that you have been testing your programproperly.To show that you have tested your program, include small (but readable) screen captures in yourActual Results as well as any explanatory comments. Microsoft Windows includes a Snipping Toolthat is useful for taking captures of the relevant parts of the screen.You may test your program in phases if you wish. Stage 2: Program Development provides threeseparate groups of functionality in the requirements, working from the minimal level of requirementsthrough to more advanced concepts. Each of these groups can be tested individually.Base Functionality:This phase requires you to check that the base functions (displaying welcome message when theprogram starts, showing a menu of options until the user chooses to exit, purchasing tickets, viewingticket sales and exiting the system) have been implemented.Standard Functionality:In addition to the Base Functionality, this section includes displaying a running total of tickets that havebeen added to an order until such time as the order has been finalized. This new functionality mustalso be tested.If you originally wrote and tested the Base Functionality by including all the code in a single method,this phase also requires that you modularize your code, and use method calls and pass data betweenmethods to ensure your program still runs correctly. This means all your code will need to be re-tested to ensure that all the previous functionality still works.Advanced Functionality:This phase requires testing the code that calculates and displays the number of days until the gamescomments in the welcoming message shown when the program starts.SubmissionYour program code and testing documentation should be zipped into a single file and loaded into theAssignment Box provided in Moodle by the due date and time.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 8 of 9Marking Criteria/RubricTaskAvailableMarksStudentMarkStage 1: Design DocumentationDevelopment of an algorithm describing how the program should function All requirements from the Assessment Details section included 1 Logical structure 1Documented test cases to validate program All requirements from the Assessment Details section included 1 Data is validated to ensure user entries are appropriate and incorrect user entriesare handled smoothly1Stage 2: Program DevelopmentA Java program addressing the requirements outlined in the Assignment Details section,including appropriate use of loops, conditional statements, constants and variables:Use of coding conventions throughout entire program, including readable and clear layout,following naming conventions and including meaningful and appropriate comments.1Base Functionality: Display of a welcome message when the program starts 1 Menu displayed until user chooses to exit 1 Purchase Tickets option to select and order a user-selected combination of Tier 1and Tier 2 tickets2 View Ticket Sales to display the total value of ticket sales and both the total numberof Tier 1 tickets and the total number of Tier 2 tickets sold1 Exit System to quit the program with a message to the user 1Standard Functionality: Running total of tickets included in an order displayed in the Purchase Tickets menuuntil the order is finalised1 Code modularized, correctly using method calls and passing data between methods 2Advanced Functionality: Countdown of days to go until the games commence included in the welcomemessage3Stage 3: TestingDocumented test results clearly showing all the testing that has been conducted and theresults of this testing. Testing of base functionality1 Testing of standard functionality1 Testing of advanced functionality1Total 20CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 9 of 9FeedbackAssignments will be marked within 2 weeks of submission. Marks will be loaded in fdlGrades, and acompleted marking sheet will be available via Moodle.Plagiarism:Plagiarism is the presentation of the expressed thought or work of another person as though it is one’sown without properly acknowledging that person. You must not allow other students to copy your workand must take care to safeguard against this happening. More information about the plagiarism policyand procedure for the university can be found at http://federation.edu.au/students/learning-and-study/online-help-with/plagiarism.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"}]},{"title":"代写c++ Programming Assignment 2","slug":"page12","date":"2016-10-17T20:22:46.000Z","updated":"2016-10-26T12:03:06.907Z","comments":true,"path":"2016/10/18/page12/","link":"","permalink":"http://yoursite.com/2016/10/18/page12/","excerpt":"","text":"Introduction用c++实现简单的机器学习，统计词频，情感分析等等，此处用到的数据结构算法是哈希表，需要先对数据进行清理操作，然后分词，最后统计词频，根据公式情感分析等等，此题目比较新颖，通过c++来讲述数据挖潜和机器学习的原理知识，对数据结构哈希表也考的很到位，点赞RequirementAssignment 2Due:​​ Oct 14th (Friday) before 11:59 PM1. Learning GoalsLearn how to1. use associative containers like ​std::unordered_set​ and ​std::unordered_map2. use iterators to iterate through associative containers3. use ​algorithms​ that are available in the C++ Standard Library4. pass command line arguments to a C++ program5. partition a C++ program in header files (.hpp) and source files (.cpp)6. read, understand, and use code written by other people2. DescriptionIn this assignment you’ll be doing the following:1. Read a raw text file containing movie reviews and ratings.2. Remove the punctuations and stopwords (e.g. is, and, the, etc.) from the reviews andwrite the contents to a clean review file.3. Associate a value for all words found in the clean reviews based on the average rating ofthe word.4. Using the map between the words and their associated values, rate reviews fromanother file that doesn’t have any rating already.5. Write the ratings of the reviews to an output file.2.1. Clean the dataThe raw data with the reviews and the rating will be present in a file namedrawReviewRatings.txt​. Every review is given a rating between 0 - 4 (both inclusive). Thefollowing are interpretation of the rating values:● 0 = Negative● 1 = Somewhat Negative● 2 = Neutral● 3 = Somewhat Positive● 4 = PositiveEach line of review follows the following format: Example:4 The Jungle Book is awesome!CS 368 (C++) - Fall 2016Adalbert ​Gerald​​ Soosai Rajwhere 4 is the rating and the text “The Jungle Book is awesome!” is the review.Now, your first task is to read the contents of this file and ​clean the data!The following steps needs to be performed in the same order for cleaning the data:1. Read the raw reviews from an input file. e.g. ​rawReviewRatings.txt2. Replace the hyphens in every line of text with spaces.e.g. If the review contains the word “awe-inspiring”, then it should be split into 2 wordsnamely “awe” and “inspiring”3. Split each line of text into multiple words using the space character as the delimiter.e.g. “The Jungle Book is awesome!” becomes | “The” | “Jungle” | “Book” | “is” |“awesome!” |4. Remove the punctuation marks from the words.e.g. “awesome!” becomes “awesome” and “!” becomes “”5. If there are any trailing/leading whitespaces, then remove them. Remember that thespace character (‘ ’), tab (‘\\t’), newline (‘\\n’), etc. are considered as whitespaces. For acomplete list of whitespace characters ​this​.e.g. “zootopia ” becomes “zootopia”, “hello\\t” becomes “hello”, and “world\\n” becomes“world”6. Remove the empty words. i.e. words with length == 0.7. Remove single lettered words. i.e. words with length == 1.8. Remove stopwords. e.g. is, and, the, etc. The list of stopwords can be found in the filestopwords.txt9. Write the contents of the clean data to a file named ​cleanReviewRatings.txt​.2.2. Fill the dictionaryUsing the ​cleanReviewRatings.txt file, create a map/dictionary for every word that is found inthis file. The dictionary is of type​std::unordered_map","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"},{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"}]},{"title":"代写python Programming Assignment 4","slug":"page13","date":"2016-10-17T20:22:46.000Z","updated":"2016-10-26T12:08:20.437Z","comments":true,"path":"2016/10/18/page13/","link":"","permalink":"http://yoursite.com/2016/10/18/page13/","excerpt":"","text":"IntroductionTASK 1:主要工作量如下:1.读取数据和标签，设置函数为：load_data2.归一化数据，使用sklearn的函数sklearn.preprocessing.normalize3.使用sklearn的函数sklearn.cross_validation.train_test_split进行数据拆分，按照70%，15%，15%拆分训练集，验证集，测试集4.使用np.savetxt保存相关集合TASK 2:朴素贝叶斯使用算法为：sklearn.naive_bayes.BernoulliNB验证准确率为：(‘valid accuracy score:’, 0.62646869836607311)测试准确率为：(‘test accuracy score:’, 0.62184459335413989)混淆矩阵为：[[14118 16819 136 0 30 36 819] [ 6262 33060 2466 12 159 207 147] [ 0 225 4832 72 33 180 0] [ 0 0 199 170 0 44 0] [ 146 983 173 0 100 6 0] [ 31 299 1962 29 112 205 0] [ 925 434 11 0 0 0 1710]]剩下的不一一列举…Requirement1.OverviewThe aim of this assignment is to compare alternative techniques for predicting forest cover types from cartographic variables. You will be using the sklearn machine learning library to perform this study. The dataset is based on four wilderness areas in the Roosevelt National Forest, located in the Front Range of northern Colorado. Cover type data came from US Forest Service inventory information, while the cartographic variables used to predict cover type consisted of elevation, aspect, and other information derived from standard digital spatial data processed in a geographic information system (GIS).Data Set Information:The prediction of forest cover type is from cartographic variables only (no remotely sensed data). The actual forest cover type for a given observation (30 x 30 meter cell) was determined from US Forest Service (USFS) Resource Information System (RIS) data. Independent variables were derived from data originally obtained from US Geological Survey (USGS) and USFS data. Data is in raw form (not scaled) and contains binary (0 or 1) columns of data for qualitative independent variables (wilderness areas and soil types).This study area includes four wilderness areas located in the Roosevelt National Forest of northern Colorado. These areas represent forests with minimal human-caused disturbances, so that existing forest cover types are more a result of ecological processes rather than forest management practices.Some background information for these four wilderness areas: Neota (area 2)probably has the highest mean elevational value of the 4 wilderness areas. Rawah (area 1) and Comanche Peak (area 3) would have a lower mean elevational value, while Cache la Poudre (area 4) would have the lowest mean elevational value.As for primary major tree species in these areas, Neota would have spruce/fir (type 1), while Rawah and Comanche Peak would probably have lodgepole pine (type 2) as their primary species, followed by spruce/fir and aspen (type 5). Cache la Poudre would tend to have Ponderosa pine (type 3), Douglas-fir (type 6), and cottonwood/willow (type 4).The Rawah and Comanche Peak areas would tend to be more typical of the overall dataset than either the Neota or Cache la Poudre, due to their assortment of tree species and range of predictive variable values (elevation, etc.) Cache la Poudre would probably be more unique than the others, due to its relatively low elevation range and species composition.Attribute Information:Given is the attribute name, attribute type, the measurement unit and a brief description. The forest cover type is the classification problem. The order of this listing corresponds to the order of entries along the vectors of the database.Name / Data Type / Measurement / DescriptionElevation / quantitative /meters / Elevation in metersAspect / quantitative / azimuth / Aspect in degrees azimuthSlope / quantitative / degrees / Slope in degreesHorizontal_Distance_To_Hydrology / quantitative / meters / Horz Dist to nearest surface water featuresVertical_Distance_To_Hydrology / quantitative / meters / Vert Dist to nearest surface water featuresHorizontal_Distance_To_Roadways / quantitative / meters / Horz Dist to nearest roadwayHillshade_9am / quantitative / 0 to 255 index / Hillshade index at 9am, summer solsticeHillshade_Noon / quantitative / 0 to 255 index / Hillshade index at noon, summer solticeHillshade_3pm / quantitative / 0 to 255 index / Hillshade index at 3pm, summer solsticeHorizontal_Distance_To_Fire_Points / quantitative / meters / Horz Dist to nearest wildfire ignition pointsWilderness_Area (4 binary columns) / qualitative / 0 (absence) or 1 (presence) / Wilderness area designationSoil_Type (40 binary columns) / qualitative / 0 (absence) or 1 (presence) / Soil Type designationCover_Type (7 types) / integer / 1 to 7 / Forest Cover Type designationYour tasksPreprocessing (5 marks)Write a Python script (with the file named task_1.py), thatloads the dataset shuffles the datadeals with any missing value (if any)performs normalization of the datacreates numpy arrays train_data, validation_data and test_data which contain respectively 70%, 15% and 15% of the shuffled data.saves these preprocessed arraysWhenever applicable use the validation set to select the architecturalparameters needed to build the following classifiers;Naive Bayes (5 marks)Write a Python script (with the file named task_2.py), thatbuilds naïve Bayes classifiersevaluates the prediction errorsreports these errors with a confusing matrixDecision Trees (5 marks)Write a Python script (with the file named task_3.py), thatbuilds decision tree classifiersevaluates the classifiersNearest Neighbours (5 marks)Write a Python script (with the file named task_4.py), thatbuilds kNN classifiersevaluates the classifiersSupport Vector Machines (5 marks)Write a Python script (with the file named task_5.py), thatbuilds SVM classifiersevaluates the classifiersDeliverablesYou should submit via Blackboard a zip file containingA report in pdf format limited to 10 pages of text (be concise!)describing the design of your experimentsreporting on the performance of your classifiersa statement of completeness (concise description of what you have implemented, what works, what doesn’t).All your Python script files with proper commenting. Good code documentation is critical.","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"代写C CS352 Programming Assignment 1","slug":"page11","date":"2016-10-17T15:22:43.000Z","updated":"2016-10-26T11:50:43.755Z","comments":true,"path":"2016/10/17/page11/","link":"","permalink":"http://yoursite.com/2016/10/17/page11/","excerpt":"","text":"Introductionlinux下的c语言入门级别的3个小题，第一个是控制格式的打印和输出，第二题是对比表达式是否是相同的表达式，需要解析表达式，对运算符进行分析，第三题是分解一个数，获取质数的和。RequirementECE15: Homework 5In all homeworks, the dialogue boxes show the system prompt in ( ˜ )$, the user input in red, and thecomputer output in black. Unless otherwise indicated, assume that the user will always enter a validinput.Problem0. Read the following Zybooks sections and solve the problems there in.Sections 7.1 to 7.4 by 8pm Tuesday October 25th.Sections 7.5 to 7.8 by 8pm Thursday October 27th.Problem1. A histogram represents a sequence of values as vertical rectangles of proportionalheights. Write a program histogram.c that asks the user for a sequence of space-separated positiveintegers followed by zero, and draws a “sideways” histogram representing each positive integer n asn spaces followed by a vertical bar, and separating these lines by a line of “-” whose width is themaximum width of its adjacent rectangles.( ˜ )$ a.outPositive widths followed by 0: 6 2 1 3 4 0——|——|–|—|—-|—-( ˜ )$ a.outPositive widths followed by 0: 3 2 1 0—|—|–|-( ˜ )$ a.outPositive widths followed by 0: 3 0—|—( ˜ )$ a.outPositive widths followed by 0: 0( ˜ )$Problem2. Lines in the plane are often represented by linear equations, for example 2x+5y=3,or 10y+4x=6, that represents the same line. To standardize the representation one can express y as afunction of x, for the line above, y=-0.4x+0.6 where -0.4 is called the slope, and 0.6 is the intercept.Two lines are parallel if they have the same slope (with the same or different intercepts), and called thesame if they have the same slope and intercept.Write a program line.c that asks the user for equations of straight lines in the plane and printswhether the lines are all same, are all parallel but not all the same, or not all parallel. Note that for anyset of lines, only one of these description holds. If no equations are entered, a corresponding messagegets printed.The equations can be entered as ax ± by = c or ay ± bx = c, where a,b,c are doubles. The programasks the user for lines until the they decide to stop. Since floating-point numbers are stored withsmall rounding errors, consider two slopes, or two intercepts, to be equal if the absolute value of theirdifference is ≤ 10 − 10 .( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 6x+7.5y=1.5Enter another equation? [y/n]: yEquation: 6x+7.5y=1.5Enter another equation? [y/n]: yEquation: 9.1x+0.8y=2Enter another equation? [y/n]: nNot all lines parallel.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 2.5x+3.2y=4.1Enter another equation? [y/n]: yEquation: 3.2y+2.5x=1.6Enter another equation? [y/n]: nAll lines parallel but not all same.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 2x-3y=4Enter another equation? [y/n]: yEquation: -3y+2x=4Enter another equation? [y/n]: nAll lines same.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: -3y+2x=4Enter another equation? [y/n]: nAll lines same.( ˜ )$ a.outEnter another equation? [y/n]: nNo equations!( ˜ )$2Problem3. Write a program prime.c that asks the user for an integer n ≥ 2 and prints n as asum of prime numbers: p 1 + p 2 + … + p k .Typically, there may be several ways to write n as a sum of primes. Print the sum where p 1 is thelargest prime ≤ n that is not n − 1; p 2 is the largest prime ≤ n − p 1 that is not n − p 1 − 1, and so on.( ˜ )$ a.outInteger: 4Prime sum: 2 + 2( ˜ )$ a.outInteger: 9Prime sum: 7 + 2( ˜ )$ a.outInteger: 148Prime sum: 139 + 7 + 2( ˜ )$ a.outInteger: 2Prime sum: 2( ˜ )$3","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C CS37 Programming Assignment 3","slug":"page10","date":"2016-10-16T14:52:53.000Z","updated":"2016-10-16T16:24:52.098Z","comments":true,"path":"2016/10/16/page10/","link":"","permalink":"http://yoursite.com/2016/10/16/page10/","excerpt":"","text":"Introductionlinux下的c语言os方面课程，多线程归并排序统计加速比测试，测试1,2,4,8,16,32个线程的情况下加速比。代码不算难，但是要进行大量测试和统计操作。并且需要对linux下的多线程原理足够清楚RequirementProject 3Due date: Oct 17, 2016 (No late submissions)The goal of this project is to evaluate Amdahl’s law in the context of the sorting problem. The details of your implementation are as follows:1.Implementation detailsa.Your executable should be called PROG4b.You will invoke PROG4 asi.PROG4 ii.Assume that is a multiple of 32iii.Assume that the number of threads is 1, 2, 4, 8, 16 or 32iv.Example invocation:PROG4 3200 162.When you execute the program, the following should happena.First, you will fill the array with strictly decreasing numbers. For example, if the array is of size 320, you can initialize it to 320, 319, 318 etc.b.You will partition the array into 32 parts. You will sort each part using BUBBLESORT so that they are in increasing order. Finally, all 32 sorted parts will be merged to obtain the final sorted array. To achieve this with K threads, you will proceed as follows:i.When you have K threads, each thread will handle 32/K parts and sort them. Now, you have 32 sorted parts of original array A.ii.You will merge the sorted parts to generate array B that will represent the sorted array A.c.You will verify that the array is actually sorted and contains the correct data. For example, in the above scenario, you should see numbers from 1..320.3.Important observations:a.You are partitioning the array into 32 parts independent of the number of threads you have. This is critical. This ensures that the actual work done is independent of the number of threads.b.Normally, when you use multiple threads, this can increase the total work done. But we are trying to avoid the problemc.We initialize the array to be in a decreasing order and use bubblesort to get it into increasing order.d.The number 32 is chosen because cse410.cse.msu.edu has 32 processors.4.As an illustration of this, for sake of discussion, assume that array A has 3200 elements. We partition array A into 32 parts, from [0..99], [100..199], … [3100..3199].a.Consider the case where number of threads=1. In this case, you have only one thread. Hence, it will sort all 32 parts separately one after another. Then, it will merge it. This will correspond to the time required to sort the array with just one thread. This time will be split into two parts: the part that can be parallelized (namely the sorting of individual parts) and the part that cannot be parallelized (namely the merging part). Use this time to evaluate the value of f, the part that is sequential. As an illustration, if the time required for sorting individual parts was 200 and the time required for merging was 25 then f = 25/(200+25).i.Some smart people will realize that the merging itself could be parallielized. But we will not do that in this project. The merging will always be sequential.ii.Note that Amdahl’s law only considers the case where some part can be parallelized by n threads and the remaining part must be run on only one thread. It does not consider the case where you have some part where you can utilize more than one thread but cannot utilize all n.iii.In fact, the merging part will be independent of the number of threads you have.b.Consider the case where K=2. In this case, each thread will sort 16 parts. Each thread will sort the parts assigned to it independently (in parallel). Then, you will merge it to get the sorted array. Recall that the merging must be done sequentially. It is expected that the merging time will remain unchanged in this process.5.What to turn ina.Your .cpp files, .h files and makefile that will generate PROG4b.A report (pdf) describing your experience with Amdahl’s lawi.You should consider five different array sizes from 320 to 32,000,000.ii.The sizes you choose should be such that total time to run with 1 thread is at least 1 second and no more than 10 minutes.iii.For chosen sizes, run your program with 1, 2, 4, 8, 16 and 32 threads.iv.Run each experiment 3 times and use the average.v.Identify the sequential fraction based on your experiment with 1 thread. Observe that sorting 32 parts can be parallelized. Merging cannot be.vi.Compare the results you have with that predicated by Amdahl’s law.vii.Explain the difference, if any.viii.(Note that the verification time should not be included in the time you report.)6. A few things that will helpa.You saw that you can provide each thread with a threadIDb.You can make assignments of the parts to be sorted based on threadIDc.For example, if you have 4 threads, thread 0 is responsible for first 8 parts and so on.d.You can create partitions in-place7.Some more thingsa.Your sorting or merging should not assume that the array is provided in a sorted fashion. It should work for arbitrary array. The reason I have specified the initial array in the given fashion is so that you can validate correctness of your program. For example, merging cannot be simply put the parts in reverse order.b.Merging would essentially occur in the main() after all threads are joined.c.You are provided with 2 files pth.cpp – that does things somewhat incorrectly (discussed in class) and pth.cpp that does things in the right fashion.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C++ CS37 Programming Assignment 1","slug":"page9","date":"2016-10-15T13:42:55.000Z","updated":"2016-10-15T17:34:05.800Z","comments":true,"path":"2016/10/15/page9/","link":"","permalink":"http://yoursite.com/2016/10/15/page9/","excerpt":"","text":"Introduction一个简单的c++程序，计算BMI指数，重点在于注意细节，c++的标准I/O的输入输出格式输出RequirementTotal Point: 12 Due Date: 09/12/2016, MondayAssignment Description:Write a program that calculate the Body Mass Index (BMI). Your program shouldperform the following tasks:1. Prompt the user to enter the following data for each person: ID (four digit integer), Name 20 character string, Weight in pounds (floating-point with 1 digit after decimal point), Height in inches (floating-point with 1 digit after decimal point).2. Compute the BMI using the following formula:BMI = (weightInPounds 703) / (heightInInches heightInInches)3. Save (Write) the input data (id, name, weight, height) and the calculated BMI(floating-point with 2 digits after decimal point) into a text file (e.g. bmifile.txt).4. Repeat steps 1-3 to compute the BMIs for three persons, then close the text file.5. Now, read all the BMI records from the text file, one person each time, and print outa summary like the following:Program Requirements:1. The program must use streams, cout and cin objects to perform the IOs withconsole, printer, and file, and use IO manipulators to format the output.2. The program should include the following information as comment on top of sourcecode: Programming assignment number Author of the program Date of programming (or due date) Brief description on what the program will doGrading:Create and run your program using IDE of your choice (CodeBlock or Visual C++).Print the source code, program output and a snapshot of the text file (to show thefile content) and turn in all three items for grading. The turn in documents must belegible. Extremely tiny font or light/blur inks used in printing make it impossibleto read and grade your assignments.Also save the source code and output in your computer or portable storage device (USBdevice for example) so that they can be turned in for validation if asked to do so.","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写JAVA COSC1290","slug":"page8","date":"2016-10-14T13:12:35.000Z","updated":"2016-10-15T16:38:24.713Z","comments":true,"path":"2016/10/14/page8/","link":"","permalink":"http://yoursite.com/2016/10/14/page8/","excerpt":"","text":"Introduction写基于JavaFX的GUI界面，在assignment1的command功能基础上加上sqlite数据库和文件存储操作，同时把command的功能用JavaFX实现。实现的时候通过参数的形式区分文件存储和数据库存储。由于assignment1的逻辑比较复杂，实现JavaFX界面的时候，工作量略大。JavaFX还有内置的WebView，能通过其调Javascript，功能更强大，界面更好看，如果熟练之后，开发起来比swing更方便Requirement IntroductionYou are required to implement a basic Java program using Java SE 8.0 and JavaFX.This assignment is designed to help you:1. Enhance your ability to build a Graphical User Interface using JavaFX;2. Practise implementation of various GUI event handlers;3. Practise application of using file input and output processing;4. Practise the use of command-line arguments.This is an individual assignment and worth 10% towards your final grade. Academic Integrity (more)The submitted assignment must be your own work. No marks will be awarded for any partswhich are not created by you—this includes use of 3 rd -party GUI components.Plagiarism is treated very seriously at RMIT. Plagiarism includes copying code directly fromother students, internet or other resources without proper reference. Sometimes, studentsstudy and work on assignments together and submit similar files; this may be regarded asplagiarism. You should always create your own assignment even if you have similar ideas.Plagiarism-detection tools will be used for all submissions. Severe penalties may be appliedin cases of plagiarism, including loss of all marks or, in repeat cases, expulsion from thecourse. General Implementation Details• Initial data should be read from an input text file. A Save option should beimplemented that writes out to a text file.• All menu/interactive input should be via a graphical user interface, implemented inJavaFX. All information displayed to the user should be via the same GUI.• Sample GUI layouts will be put on Blackboard: you are free to have differentlayouts as long as your GUI layouts are clear (marks may be deducted for verypoor design).• Any incorrectly formatted input should be checked by the GUI implementation.• You are to use packages: all your new code should be in packages called:o guio fileioCode not in either of these packages will not be considered for marking.• You must not use 3 rd -party GUI components (i.e., not built by you).• Marks will be allocated to proper documentation and coding layout and style. Yourcoding style should be consistent with standard coding conventions (as in Assignment1).• Your programs will be marked on CSIT machines using Java SE 8.0. You should testyour program on these machines before you submit. Task SpecificationYou are to build a Graphical User Interface (GUI) for the MyTi system of Assignment 1. Youwill also make running of the MyTi system more configurable by reading initial Card, Userand TravelPass information from input files and write updated information to an output file.You do not need to add any other new functionality to the MyTi system of Assignment 1. What if my Assignment 1 did not work properly?• If you did not get TravelPass purchasing and Journey-taking working fully in Assignment1 then you are allowed to just purchase a TravelPass (as in the first Sample Run). Part A: Packages and Organisation of Code (0.5 marks)You should organise your code into 3 packages. A package called myti should be used forcode from Assignment 1. Packages called gui and fileio should contain all new code forAssignment 2 (you can put some of your existing code into these packages, if necessary). Part B: Command-Line Arguments (0.5 mark)You are to use command-line arguments to provide the name of your input and output files.For example, if your main() program is in the class Assign3 and you read input frominput.txt and your output is output.txt, then you would run your program as followsfrom the command-line on a unix machine:&gt; java Assign2 input.txt output.txtIf you use eclipse, then you specify the arguments under Run &gt; Run Configurations;however, as always, your program will be marked by running it from the command-line. Part C: File Input and Output (1.5 marks)Put initial TravelPass prices and Card andUser information in a text file (the name of this fileis the first command-line argument); your program should read this file at start-up andinitialise prices and create Users with the appropriate values. A sample input file will beprovided on Blackboard: you must follow that format precisely, though you are welcome toinclude more information than in that sample.Your program will be tested with different values (but with the same format) so makesure you can handle reading the file properly.When the SAVE option is selected on the GUI, you should write an output (text) file. Theoutput file must use the identical format to input file format below. You should write out thesame information as you read in with the updated values. Part D: Graphical User Interface (6 marks)Add a GUI for at least the following functionalities from Assignment 1. (You can implementa GUI that covers your complete Assignment 1 functionality but there’s no extra marks in it.)• The GUI should begin with a single window for purchasing Travel Passes and takingJourneys. Buttons for “Managing Cards and Users” and for “Display Reports” may openup new windows. See the sample GUI on Blackboard;• The Take a Journey window should include:o a list for selecting a Card id (i.e., Take a Journey on this Card);o lists to select 2 stations;o a list to select the day of travel, and an input box to enter the time;o a message box where error messages or other output is displayed;o CANCEL and PURCHASE buttons;• The Manage Passes and Users screen should include:o a list of Card IDs and associated User names;o when a Card is selected, User details and remaining credit is displayed;o an input box and an ADD CREDIT button for adding credit for the selected Card:when this is performed, credit for that Card is displayed / updated;o a message box where error messages or other output is displayed;o an Add a User panel that obtains the required information for a new user and addsthem. When a User is created, there should be an option to register a Card to thatUser;• The Display Reports screen should include:o a single Display All Journeys button;o a scrollable text box that contains the list of Journeys.o Note, if in Assignment 1 your function just displayed the Journeys for a Card, thenyou can do this here: you’ll need a drop-down box to select the Card to display;• SAVE and QUIT (without saving) buttons should always be available (ideally, outsidethe JTabbedPane).• Each window will need buttons to open the other window options: for full marks, if awindow is already open then it just shows it on top of the others, not generate a new one.Obvious GUI errors should be checked—for example, if the user tries to ADD CREDITwithout first selecting a Card from the menu.Sample screens will be added to Blackboard. You do NOT have to follow these designs; theyare simply a suggestion and you are free to design your own screens, as long as your GUIfunctionality is completely clear.• GUI Demo: 1 / 0.5 marks of the GUI functionality will be for a demo in Week 10 / 11;this can be of “click” functionality that isn’t fully connected to the MyTi system. Part E: Other (1.5 marks)As always, marks will be awarded for coding style, documentation/comments, code layoutand clarity, meaningful error and other messages, proper error handling, choice of datastructures and other design decisions. You are encouraged to discuss such issues with yourtutors and lab assistants, or with the coding mentors. Bonus Task (1 mark)Instead of reading/writing from files, read/write from a database using JDBC.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"sqlite","slug":"sqlite","permalink":"http://yoursite.com/tags/sqlite/"}]},{"title":"代写C   IP1  lab1","slug":"page7","date":"2016-10-13T14:13:33.000Z","updated":"2016-10-13T14:19:47.064Z","comments":true,"path":"2016/10/13/page7/","link":"","permalink":"http://yoursite.com/2016/10/13/page7/","excerpt":"","text":"Introduction实现一个Wumpus的teriminal端的游戏（println），输出一个44的表格，有玩家、恶魔、陷阱、金币，玩家遇到恶魔或者陷阱就游戏Lose，捡完所有的金币就游戏Win，同时玩家可以感知恶魔 陷阱 金币的提示。这个作业 时间是12小时，然后比较麻烦的是需求给的不太清楚，需要结合网上的Wumpus游戏和作业需求综合理解，设计一个简易的Wumpus游戏，画出UML图，然后code。RequirementWumpus!Wumpus is a text-based game, where a player moves through a cave system searchingfor gold and trying to avoid bottomless pits and a feared Wumpus. The cave system isa 4 x 4 grid. Each grid element can hold one GameItem. A GameItem is one of: Gold,Pit, Wumpus or ClearGround.The player can move forward, backward, left or right one grid element at a time. Thecave system wraps around so, for example, moving left from position [3][0] causesthe player to appear in position [3][3].The player can sense, but not see, what is in the immediate grid elements around theplayer. A pit will be sensed as a breeze, gold as a faint glitter and the Wumpus as avile smell. In this assignment, the grid will be displayed, but in a real game thisfeature would be disabled.If the player moves onto a pit or the Wumpus, the player dies and the game ends.If the player moves onto gold, the game score increases by one and the gold isreplaced by ClearGround.Implementation:You should write a Game class, which has a 2D array of size 4 x 4 of GameItem calledboard for implementing the Wumpus game described above.Classes Gold, Pit, Wumpus and ClearGround are extensions of class GameItem.GameItem should provide a public method, display(), for use when displaying theboard and a private instance variable for specifying the displayed character. Gold isdisplayed as ‘g’, a Pit as ‘p’, the Wumpus as ‘W’, clear ground as ‘.’ . GameItemprovides a constructor GameItem(char c) for specifying the displayed character.It should not be possible to instantiate an object of GameItem. The player is notimplemented as an object, instead just being represented by Game as private row &amp;column coordinates. The position of the player is displayed by a ‘‘.The items should be positioned randomly over board. There is exactly one Wumpus,at least one, and up to three pieces of gold (chosen randomly) and exactly three pits.The player is positioned over a ClearGround position.Game should provide:? a private method setBoard(), which instantiates objects on the board? a private method display() which will display the board.? a private method senseNearby(), which displays text about what theplayer can sense from the board elements immediately surroundingthe player.? a private method menu() which will provide a menu asking the user tomake a choice from the following and obtain the user input:=====Wumpus====1. Move player left2. Move player right3. Move player up4. Move player down 5Quit? a public method runGame() that will display the board, print out whatthe player can sense, present the menu and process the user’s decisionaccording to the game play described above.The World class only instantiates an object myGame of class Game, and callsmyGame.runGame()You need to show the Pit , Wumpus and Gold when the game is being played and alsoshow the SenseNearby() field as this is testing your ability to utilize polymorphism to callmethod of different classes.GameItem display() method is used to display each game item.Game display() method is used to loop through GameItem array to display the board.You may find the class Random, available in java.util.* useful.For example the following will assign integer variable guess a value from 0..4inclusive.Random randomGenerator = new Random();guess = randomGenerator.nextInt(5);.Submission:? Due date: 9am 10th Oct 2016. Representing 30% of course assessment? This is a group assignment of maximum 3 students (prefer not solo)? You will need to submit 7 electronic files, (Game.java, GameItem.java, Gold.java, Pit.java,Wumpus.java, ClearGround.java and World. Please note these must be Java source files (e.g.World.java), not class files (i.e not World.class). We will not mark a class file.? This assignment needs to be well designed. Please draw the Class diagram of your finalcoding design Please screenshot a full set of successful executions. Save the class diagramand screenshots of executions in a PDF file called Design.pdf.? Weblearn is used for submission. Please zip all source files and Design.pdf into one forsubmission (7z, rar, zipx or other compression format will be penalized).? Remember to include all team members’ names, student IDs and contribution % of eachperson in you submission of Design.pdf in the first page. One submission one group andmultiple submission will be penalized or at your own risk of getting wrong marks.Standard warning:This assignment must be your own work. Any submission found in whole or in part tobe plagiarized will be given zero marks and will not count towards your assessment. Ifan award of zero marks means that you do not pass the assignment hurdle then you willfail the course.Frequent Asked QuestionsQuestion: I was just wondering if the Wumpus will be moving around the board aswell? Or will it be stationary like the position of the pits?Answer: The Wumpus position is randomly generated. In each session, it will not bemove around. It will be stationary like the position of the pits.Question: Is there only 1 pit, 1 gold and 1 Wumpus in the game?Answer: There is exactly one Wumpus, at least one, and up to three pieces of gold(chosen randomly) and exactly three pits. The player is positioned over a ClearGroundpositionQuestion: Hey I’m hoping to submit and wanted to know if the tutor name isimportant, I’m not sure who my tutor is.Answer: The tutor’s name is not important. You can just submit to the default one.Yes, all files need to be zipped into one file. The zip file name is not important asweblearn will auto rename it.Question: Is it like after generate Wumpus, pit and gold, the position of these objectsare settled, no matter where the player moves on the board, these objects are notmoving? Or, each time player moves a step, the position of W,P and G changesrandomly? If player is surrounded by more than one objects, senseNearby() shouldoutput all information of themAnswer: After randomly generate W, P, G in the beginning of the game, these objectsare settled in position. Only replaced by “.” if player walks into it, like gold.Yes, senseNearby() should output all information of up, down, left and right.Question: At starting do I need to display 4X4 Grid along with GameItems like ( 1Wumpus, 3 Pit and 3 Gold).I meant player basically see all gameItems position in thegrid (not like real game) at the beginning of the game.Answer: Yes, you do need to display 4x4 grid along with GameItems at the startingpoint.Question: After each user selection from Menu do I need to display grid along withgameItems position again.Answer: Yes that is why you call display() method in the Game class.Marking Guide:OO Components 12 marksFunctional correct 12 marksDocumentation, Coding Style, Submission requirement, Error checking 8 marks","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C代写  CMPUT 201","slug":"page5","date":"2016-10-09T06:23:32.000Z","updated":"2016-10-11T02:49:06.314Z","comments":true,"path":"2016/10/09/page5/","link":"","permalink":"http://yoursite.com/2016/10/09/page5/","excerpt":"","text":"Introduction主要是对文件操作、命令行操作等，输入参数错误处理，细节较多，难度的话不大。用到的知识点主要是：argc、fscanf/fprintf、loop、printf、array.RequirementThe following content is from a file named “instance10 001.txt”:#instance10_001.txt#area [0, MAX_X] x [0, MAX_Y]100 100#number of points NUM_PT10#coordinates0 00 9070 100100 5030 3030 7070 7070 3050 5045 0#end of instanceThis file describes 10 points in the two-dimensional plane, within the rectangular area [0,MAX X] ×[0,MAX Y]. Every line starting with a symbol # is a comment; the first non-comment line contains the integer values for MAX X and MAX Y, which are 100 and 100 in this file; the second non-comment line contains the number of points NUM PT, which is 10 in this file; the other non-comment lines present the integer x- and y-coordinates for the points, one in a line (in a non-specific order).In all three assignments, the input files all follow such a file format, except that the values of thevariables can be different and the comment lines can be missing. Each file is called an instance, and the file name convention is to start with “instance”, followed by the number of points in the instance, then an underscore, the index of instance having the same number of points, and lastly the file suffix “.txt”.That is, “instanceXXX YYY.txt” is the YYY-th (may or may not be left-patched with 0’s) instance having XXX points; for example, the above “instance10 001.txt” is the first instance having 10 points.The following list contains the specifications for Assignment #1 (10 marks in total):1. Write a single program with multiple functions, using the command-line options. Suppose yourprogram name is “myprogram”. If a command-line is incorrect, your program prints out the followingand then quits (function #1):&gt;myprogram [-i inputfile [-o outputfile]]2. One function (function #2) of your program is to read in the content of an instance file. To read inthe file “instance10 001.txt” you will execute the command:&gt;myprogram -i instance10 001.txtHere “-i” is the command-line option that indicates the succeeding argument is the input filename.3. Your program will check the correctness of the file content (function #3) during reading. That is, to check that the first non-comment line contains two integer values for MAX X and MAX Y, the second non-comment line contains an integer value for the number of points NUM PT (this number also appears in the filename; your program does not need to validate this, but to always use the number read in from the file), and there are exactly NUM PT more lines, each contains two integer values for the x-and y-coordinates of a point. Your program also makes sure that no coordinate is out of the specified rectangular area, neither there can be duplicate points in the instance.If your program encounters an error, then reports what the error is and quits; otherwise, continue to the next item.4. With the correctness been checked, your program will print (function #4) out the non-comment lines of the input file to the screen, when using the command:&gt;myprogram -i instance10 001.txtIf an output filename is specified, using either of the following commands:&gt;myprogram -i instance10 001.txt -o output.txt&gt;myprogram -o output.txt -i instance10 001.txtwhere “-o” is the command-line option that indicates the succeeding argument is the output filename,then instead of printing to the screen all the non-comment lines of the input file are written into the file “output.txt”.5. If your program is not fed with an input file, that is, by executing the following command:&gt;myprogramthen your program will generate several instances (function #5) through a user interface as follows:Generating random instances …Enter the circuit board size MAX_X MAX_Y:Enter the number of points NUM_PT:Enter the number of random instances to be generated:Assume the user inputs areGenerating random instances …Enter the circuit board size MAX_X MAX_Y: 100 200Enter the number of points NUM_PT: 10Enter the number of random instances to be generated: 7your program will generate in total 7 instances, written into 7 separate files “instance10 j.txt”,for j = 1, 2, …, 7. Each instance has the rectangular area [0,100] × [0,200], and has 10 points.The coordinates of a point is generated uniformly randomly within the rectangular area. And yourprogram makes sure there are no duplicate points within each instance. If it is impossible for yourprogram to generate these files, prints out what an error is and quits. All these files are saved in thecurrent directory executing the command, and your program prints to the screen:instance10_1.txt generatedinstance10_2.txt generatedinstance10_3.txt generatedinstance10_4.txt generatedinstance10_5.txt generatedinstance10_6.txt generatedinstance10_7.txt generated … done!","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Autotest","slug":"Autotest","permalink":"http://yoursite.com/tags/Autotest/"}]},{"title":"代写C   IP1  lab1","slug":"page6","date":"2016-10-09T06:23:32.000Z","updated":"2016-10-11T15:47:45.631Z","comments":true,"path":"2016/10/09/page6/","link":"","permalink":"http://yoursite.com/2016/10/09/page6/","excerpt":"","text":"Introduction是电路和C语言的结合，电阻串联并联，然后用欧姆定律求总的电流。 实现了三个function，一个欧姆定律function，一个串联function，一个并联function。RequirementAs electrical engineering students, you are familiar with Ohm’s Law (V = IR) and calculating the value of resistors in series (R = R1+R2) and parallel (1/R = 1/R1 + 1/R2). Consider the following circuit:Write a program to calculate the overall current in this circuit.You must use 3 functions: ohm_law(…), series(…), and parallel(…). A 4th function parallel_three(…) is optional. Do not write functions like sum_r1_r2(…).Calculate the current for:int r1=100, r2=200, r3=300, r4=400, r5=500, r6=600, r7=700;(you may copy&amp;paste this into your .c file)The answer should be 124.6 mA.Calculate the current for:int r1=123, r2=234, r3=345, r4=456, r5=567, r6=678, r7=789;The answer should be 107.6 mA.You may find it helpful to use intermediate variables, and to print debugging information.(optional: you can call functions as inputs to other functions, i.e.z = f( g(x,y), h(x,y) );Using this, calculate the current from voltage and Rx values in a single line.)","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写  Intermediate & Object-Oriented Application Development","slug":"page4","date":"2016-10-05T04:21:31.000Z","updated":"2016-10-05T15:40:09.795Z","comments":true,"path":"2016/10/05/page4/","link":"","permalink":"http://yoursite.com/2016/10/05/page4/","excerpt":"","text":"IntroductionJava的基础题目，根据输入分数数据处理统计，格式化输出RequirementThis project is designed to help you practice File Input/Output using Java. It is to be completed and handed in by Thursday, October 6, 2016.Design and write an application to provide a report on student exam scores. The input is provided in the file scores.txt. This file can be found at the course Angel web site. Do not modify the input file in any way.The data layout is a follows:ScoreLast NameFirst NameThe data on the file is comma delimited.The report output should appear as:To receive full credit, you must do the following:1. Use proper File Input/Output techniques.2. Generate a properly formatted report containing a report header with date. The detail lines must include the student name, letter grade, and score. The summary should include the total number of exams, a breakdown of grade distribution, and the average exam score. The output report file name should be report.txt.3. When assigning letter grades, use the following scale: 90 to 100 – A, 80 to 89 – B, 70 to 79 – C, 60 to 69 – D, below 60 - F.Hand in:1. A printed copy of your report.2. A printed copy of your java code3. a written algorithm4. Either email your .java files in a compressed file (.zip)","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Python代写  Assignment 2 COMP9021, Session 2, 2016","slug":"page3","date":"2016-10-01T19:51:31.000Z","updated":"2016-10-02T15:56:56.291Z","comments":true,"path":"2016/10/02/page3/","link":"","permalink":"http://yoursite.com/2016/10/02/page3/","excerpt":"","text":"Introductionpython的比较有难度的作业，需要实现题目的要求的迷宫算法，然后将迷宫算法图形化，生成图像，最后转为PDF格式Requirement1 AimsThe main purpose of the assignment is to let you practice the following programming techniques:• work with command line arguments, read from and write to files;• perform operations on lists of lists, execute tests and repetitions;• organise a program into well defined functions;• design recursive procedures;• gain a first acquaintance with backtracking.2 General presentationYou will design and implement a program that will• analyse the various characteristics of a maze, represented by a particular coding of its basic con-stituents into numbers stored in a file whose contents is read, and• – either display those characteristics– or output some Latex code, to be saved in a file, from which a pictorial representation of themaze can be produced.The representation of the maze is based on a coding with the four digits 0, 1, 2 and 3 such that• 0 codes points that are connected to neither their right nor below neighbours• 1 codes points that are connected to their right neighbours but not to their below ones:• 2 codes points that are connected to their below neighbours but not to their right ones:• 3 codes points that are connected to both their right and below neighbours:A point that is connected to none of their left, right, above and below neighbours represents a pillar:Analysing the maze will allow you to also represent:• cul-de-sacs:• certain kinds of paths:13 Examples3.1 First exampleGiven a file named maze1.txt whose contents is1 0 2 2 1 2 3 03 2 2 1 2 0 2 23 0 1 1 3 1 0 02 0 3 0 0 1 2 03 2 2 0 1 2 3 21 0 0 1 1 0 0 0your program when run as python3 maze.py –file maze1.txt should outputThe maze has 12 gates.The maze has 8 sets of walls that are all connected.The maze has 2 inaccessible inner points.The maze has 4 accessible areas.The maze has 3 sets of accessible cul-de-sacs that areall connected.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.and when run as python3 maze.py -print –file maze1.txt should produce some output saved in afile named maze1.tex, which can be given as argument to pdflatex to produce a file named maze1.pdfthat views as follows.23.2 Second exampleGiven a file named maze2.txt whose contents is022302120222222223111032301322130302312322232330001000100000your program when run as python3 maze.py –file maze2.txt should outputThe maze has 20 gates.The maze has 4 sets of walls that are all connected.The maze has 4 inaccessible inner points.The maze has 13 accessible areas.The maze has 11 sets of accessible cul-de-sacs that are all connected.The maze has 5 entry-exit paths with no intersections not to cul-de-sacs.and when run as python3 maze.py -print –file maze2.txt should produce some output saved in afile named maze2.tex, which can be given as argument to pdflatex to produce a file named maze2.pdfthat views as follows.33.3 Third exampleGiven a file named labyrinth1.txt whose contents is3111111113221122131202330230221122031021312231011120202212302301123022303130203122121212222031103222211031100211111101110your program when run as python3 maze.py –file labyrinth1.txt should outputThe maze has 2 gates.The maze has 2 sets of walls that are all connected.The maze has no inaccessible inner point.The maze has a unique accessible area.The maze has 8 sets of accessible cul-de-sacs that are all connected.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.and when run as python3 maze.py -print –file labyrinth1.txt should produce some output savedin a file named labyrinth1.tex, which can be given as argument to pdflatex to produce a file namedlabyrinth1.pdf that views as follows.4 Detailed description4.1 InputThe input is expected to consist of y dim lines of x dim members of {0,1,2,3}, where x dim and y dim are atleast equal to 2 and at most equal to 31 and 41, respectively, with possibly lines consisting of spaces onlythat will be ignored and with possibly spaces anywhere on the lines with digits. If n is the x th digit ofthe y th line with digits, with 0 ≤ x &lt; x dim and 0 ≤ y &lt; y dim , then• n is to be associated with a point situated x × 0.5 cm to the right and y × 0.5 cm below an origin,• n is to be connected to the point 0.5 cm to its right just in case n = 1 or n = 3, and• n is to be connected to the point 0.5 cm below itself just in case n = 2 or n = 3.The last digit on every line with digits cannot be equal to 1 or 3, and the digits on the last line withdigits cannot be equal to 2 or 3, which ensures that the input encodes a maze, that is, a grid of width(x dim −1)×0.5 cm and of height (y dim −1)×0.5 cm (hence of maximum width 15 cm and of maximumheight 20 cm), with possibly gaps on the sides and inside. A point not connected to any of its neighboursis thought of as a pillar; a point connected to at least one of its neighbours is thought of as part of a wall.We talk about inner point to refer to a point that lies (x+0.5)×0.5 cm to the right of and (y+0.5)×0.5cm below the origin with 0 ≤ x &lt; x dim − 1 and 0 ≤ y &lt; y dim − 1.4.2 OutputIf not run as either python3 maze.py –file filename.txt or as python3 maze.py -print –filefilename.txt (where filename.txt is the name of a file that stores the input) then the program shouldprint out a single line that readsI expect –file followed by filename and possibly -print as command line arguments.and immediately exit. Otherwise, if the input is incorrect, that is, does not satisfy the conditions spelledout in the previous section, then the program should print out a single line that readsIncorrect input.and immediately exit.4.2.1 When the program is run without -print as command-line argumentIf the input is correct and the program is run as python3 maze.py –file filename.txt (wherefilename.txt is the name of a file that stores the input) then the program should output a first linethat reads one ofThe maze has no gate.The maze has a single gate.The maze has N gates.5with N an appropriate integer at least equal to 2, a second line that reads one ofThe maze has no wall.The maze has a single wall that are all connected.The maze has N sets of walls that are all connected.with N an appropriate integer at least equal to 2, a third line that reads one ofThe maze has no inaccessible inner point.The maze has a unique inaccessible inner point.The maze has N inaccessible inner points.with N an appropriate integer at least equal to 2, a fourth line that reads one ofThe maze has no accessible area.The maze has a unique accessible area.The maze has N accessible areas.with N an appropriate integer at least equal to 2, a fifth line that reads one ofThe maze has no accessible cul-de-sac.The maze has accessible cul-de-sacs that are all connected.The maze has N sets of accessible cul-de-sacs that are all connected.with N an appropriate integer at least equal to 2, and a sixth line that reads one ofThe maze has no entry-exit path with no intersection not to cul-de-sacs.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.The maze has N entry-exit paths with no intersections not to cul-de-sacs.with N an appropriate integer at least equal to 2.• A gate is any pair of consecutive points on one of the four sides of the maze that are not connected.• An inaccessible inner point is an inner point that cannot be reached from any gate.• An accessible area is a maximal set of inner points that can all be accessed from the same gate (sothe number of accessible inner points is at most equal to the number of gates).• A set of accessible cul-de-sacs that are all connected is a maximal set S of connected inner pointsthat can all be accessed from the same gate g and such that for all points p in S, if p has beenaccessed from g for the first time, then either p is in a dead end or moving on without ever gettingback leads into a dead end.• An entry-exit path with no intersections not to cul-de-sacs is a maximal set S of connected innerpoints that go from a gate to another (necessarily different) gate and such that for all points p inS, there is only one way to move on from p without getting back and without entering a cul-de-sac.6Pay attention to the expected format, including spaces. Note that your program should output no blankline. For a given test, the output of your program will be compared with the expected output; yourprogram will pass the test if and only if both outputs are absolutely identical, character for character,including spaces. For the provided examples, the expected outputs are available in files that end in_output.txt. To check that the output of your program on those examples is correct, you can redirectit to a file and compare the contents of that file with the contents of the appropriate _output.txt fileusing the diff command. If diff silently exits then your program passes the test; otherwise it fails it.For instance, runpython3 maze.py –file maze1.txt &gt;maze1_my_output.txtand thendiff maze1_my_output.txt maze1_output.txtto check whether your program succeeds on the first provided example.4.3 When the program is run with -print as command-line argumentIf the input is correct and the program is run as If the input is correct and the program is run aspython3 maze.py -print –file filename.txt (where filename.txt is the name of a file that storesthe input) then the program should output some lines saved in a file named filename.tex, that can begiven as an argument to pdflatex to produce a file named filename.pdf that depicts the maze. Theprovided examples will show you what filename.tex should contain.• Walls are drawn in blue. There is a command for every longest segment that is part of a wall.Horizontal segments are drawn starting with the topmost leftmost segment and finishing withthe bottommost rightmost segment. Then vertical segments are drawn starting with the topmostleftmost segment and finishing with the bottommost rightmost segment.• Pillars are drawn as green circles.• Inner points in accessible cul-de-sacs are drawn as red crosses.• The paths with no intersection not to cul-de-sacs are drawn as dashed yellow lines. There is acommand for every longest segment on such a path. Horizontal segments are drawn starting withthe topmost leftmost segment and finishing with the bottommost rightmost segment, with thosesegments that end at a gate sticking out by 0.25 cm. Then vertical segments are drawn startingwith the topmost leftmost segment and finishing with the bottommost rightmost segment, withthose segments that end at a gate sticking out by 0.25 cm.Pay attention to the expected format, including spaces and blank lines. Lines that start with % arecomments; there are 4 such lines, that have to be present even when there is no item to be displayed ofthe kind described by the comment. The output of your program redirected to a file will be comparedwith the expected output saved in a file (of a different name of course) using the diff command. Foryour program to pass the associated test, diff should silently exit, which requires that the contents ofboth files be absolutely identical, character for character, including spaces and blank lines. Check yourprogram on the provided examples using the associated .tex files. For instance, run7python3 maze.py -print –file maze1.txtand thendiff maze1.tex maze1_expected.texto check whether your program succeeds on the first provided example.5 Submission and assessment5.1 SubmissionYour program will be stored in a file named maze.py. After you have developed and tested your program,upload your files using WebCMS. Assignments can be submitted more than once: the last version ismarked. Your assignment is due by October 2, 11:59pm.5.2 AssessmentUp to 8 marks will reward correctness of solutions by automatically testing your program on some tests,all different to the provided examples. Read carefully the part on program output to maximise yourchances of not failing some tests for stupid reasons. For each test, the automarking script will let yourprogram run for 30 seconds. Still you should not take advantage of this and strive for a solution thatgives an immediate output for any input.Up to 2 marks will reward good comments, good choice of names for identifiers and functions, readabilityof code, simplicity of statements, compactness of functions. This will be determined manually.Late assignments will be penalised: the mark for a late submission will be the minimum of the awardedmark and 10 minus the number of full and partial days that have elapsed from the due date.The outputs of your programs should be exactly as indicated.5.3 Reminder on plagiarism policyYou are permitted, indeed encouraged, to discuss ways to solve the assignment with other people. Suchdiscussions must be in terms of algorithms, not code. But you must implement the solution on yourown. Submissions are routinely scanned for similarities that occur when students copy and modify otherpeople’s work, or work very closely together on a single implementation. Severe penalties apply to asubmission that is not the original work of the person submitting it.","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"代写java COSE60507  Algorithmics","slug":"page2","date":"2016-09-30T17:52:31.000Z","updated":"2016-10-02T15:51:22.652Z","comments":true,"path":"2016/10/01/page2/","link":"","permalink":"http://yoursite.com/2016/10/01/page2/","excerpt":"","text":"Introduction实现binary sequence search tree（BSST）以及实现其升级版本AVL Tree，评分点比较详细，需要做对比分析以及实现，代码实现不能使用library，最终提交code和report，应客户要求，分别用Java、C#、C、C++四种语言进行了实现。RequirementScenario: GlobalQuiz is a popular mobile multiplayer quiz game. Each registered player has a unique numerical id. The GlobalQuiz server maintains a list in memory of the players currently playing the game. This list can be considered a data dictionary, where the numerical id is the key, and the player details is the data.The data dictionary adt implements the following operations: proc insert ( int key) ;pointer fun find( int key ) ;proc delete( int key );Currently the player list is stored as list in an array, ordered by key. When a player logs on to the game, their details are added to the back of the list and sifted to the correct position using one pass of an insertion sort. When the server needs to access a player’s details, it conducts a binary search. When a player leaves the game, their details are deleted from the list, and the remaining entries are moved down to fill the gap.GlobalQuiz has become very popular, with thousands of players connected at once. Its makers would like to explore whether there is a more efficient way of storing the player details. They would like to use a tree-like structure, and are considering a binary sequence search tree (BSST).Task: Original List Implementation: Write a program implementing the list, as described above, in a language of your choice from Java, C#, C++ or C. Your program should contain one class implementing the ADT, and a main method or GUI which allows each method to be tested. Your implementation simply needs to store a list of integers – the keys. [15 marks]State and justify the big-O efficiency of each method in the original list implementation. [5 marks]BSST proposal Describe and discuss, using diagrams, high-level pseudocode and a big-O analysis of each method, the advantages and disadvantages of using a Binary Sequence Search Tree (BSST) to implement the ADT. [15 marks]A better tree implementation Choose either the Order 2 B-Tree or an AVL Tree, and explain, using diagrams, high-level pseudocode, and big-O analysis, how it could be implemented and its advantages and disadvantages compared to the BSST proposal. [15 marks] Write a program implementing your chosen data structure in the language of your choice. [20 marks]Conclusion Summarise your analysis in a table, showing the big-O efficiencies of each of the three operations (insert, find and delete) for each of the 3 implementations. Which implementation do you recommend for the GlobalQuiz scenario and why? Would the recommendation be different for different usage scenarios? [10 marks]Further Discussion Research and describe further implementations (such as other types of tree) that GlobalQuiz could consider. What are their advantages and disadvantages? [15 marks]Referencing and readability of report [5 marks]","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"}]},{"title":"JAVA代写 CS302 program 1","slug":"page1","date":"2016-09-30T07:55:30.000Z","updated":"2016-10-02T15:51:01.939Z","comments":true,"path":"2016/09/30/page1/","link":"","permalink":"http://yoursite.com/2016/09/30/page1/","excerpt":"","text":"Introduction 此java项目是在week1和2的基础上完成week3，功能不难，不过内容很繁琐时间急，包括了详细的测试，最后提交到网站服务器测试，比较麻烦的是每次提交后得一个小时之后才能继续提交，客户要求时间为6小时，最后开发时间为5小时，其中coding了2小时、服务器测试提交了3次，满分。RequirementP1: Review QuizFor this assignment, you will create a program that will ultimately allow its users to submit and answer multiple choice review questions in preparation for the CS302 Exams. This assignment is organized into three weekly milestones (Week1, Week2, and Week3). At the end of each milestone, you will submit code and receive feedback on your progress through zyLabs. Your learning goals for this assignment include:Incrementally develop a complete Java application from a high-level specification.Design algorithms that account for basic computer input, output, memory, and processing.Iteratively test and debug code throughout the development process.Document code with comments and appropriate styling according to the guides.Build expressions using basic operators: logical, arithmetic, and string-based.Distinguish different types of data, and identify the most appropriate types for all variables.Utilize conditional and looping flow control, both in isolation and in nested structures.Utilize the print and println methods in System.out, to display formatted output.Utilize a single Scanner object to read input from the console.Perform input validation on the user’s input.Your grade for this program includes:Weekly Milestone Progress36% Program compiles and passes the weekly automated tests in zyLabs. Each weekly milestone is includes three automated tests, and each of these tests are each worth 4% of your total program grade.Final Program Functionality44% Program compiles and passes additional automated tests for both functionality and conformance to the program specification. For example, your program should avoid using features that have not yet been covered in previous zyBooks chapters including: Arrays, User-Defined Methods, Additional Classes, Exception Handling, Packages (outside the default), Etc.Style and Structure10% Program uses appropriate variable names, spacing, and control structures in conformance with the CS302 Style Guide, and to make code easier to read.Documentation10% Program is appropriately commented in a way that is meaningful for readers who understand Java, but are not familiar with the logic or purpose of your code. These comments should conform to the CS302 Commenting Guide.Each CS302 student is expected to individually complete this assignment (this is NOT a team assignment). While you are encouraged to discuss general algorithms, and the behavior or syntax for specific java programming constructs, you are NOT allowed to share code for this assignment in any form. All of the code that you submit with this assignment should either be conceived-of and manually typed into the computer by you, or it should be provided for you through this website. AVOID leaving any code in widely accessible places, like: on an unsecured computer or on a widely accessible (non-password protected) website. Remember, all piazza posts that include assignment code or fragments must be marked as private so they are only visible to the poster and the course’s instructional staff.Week1 – Ask Me One QuestionCreate a new Java Project in Eclipse. You can name this project whatever you want, but Program1 is a sensible name. Next download theReviewQuiz.java and P1.jar files (try right-clicking to “Save Link As…” these files). Copy this .java file into the src folder within your new Java project’s folder, and copy this .jar file into your project folder itself (outside of the src folder). You may need to select Refresh from the File menu (or press F5), if you cannot immediately see these files in the Package Explorer within Eclipse. In order to use the provided P1.jar file, you’ll need to right-click on this file within the Package Explorer and select “Add to Build Path…” from the “Build Path” sub menu. Your entire program for this assignment should be implemented within the main method of this ReviewQuiz.java file. Remember to follow the course Style Guide and Commenting Guide as you develop this program. Also remember to regularly test (compile and run) your program as you develop it.As soon as your program begins, it should display the following welcome message:Welcome to the CS302 Review Quiz!And just before your program ends, it should display the following closing message (both of these messages should include the demonstrated row of equals symbols):Thank you for using the CS302 Review Quiz!After displaying the welcome message, your program should ask the user to enter their email address to identify them as a particular user:Please enter your email address: jane.doe@wisc.eduNote that the orange text above indicate text that was entered by the user. Although your program will not use this information until the next milestone, your program should read in this email address and store it for later use.Before asking the user a question, you will solicit advice on which sections the user is interested in reviewing. The P1.getSections() method evaluates to a String that includes a list of numbered section names. For example:1 String sectionText P1.getSections();After printing out this list, your code should prompt the user for their choice, read in their integer response, and store it for later use. Note that if adding this P1.getSections() instruction to your code produces an error stating that P1 cannot be resolved, it is likely that the P1.jar file was not correctly added to your project, and you should double check that you correctly followed the instructions in step 0. If all is well, this part of your program should look like the following when it is run:SECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1Note: Your program should only use a single Scanner object to read all user input. Creating and using multiple “new Scanner(System.in)” objects produces behavior that is not defined in the Java specification, could cause trouble for some auto grading tools, and is likely to lose you points on this assignment. So don’t do it :).Next we’ll present the user with their first question. The P1.getQuestion() method should evaluate to a String containing a question for the user. But if you try to retrieve this string before choosing a section that there are questions within, you will see the following error message. Try this out now!Exception in thread “main” java.lang.RuntimeException: No questions were available for the selected sections.This P1.getQuestion() method is stateful, which means that it may evaluate to different String values depending on what code ran before it. In order to get a question from the user’s chosen section, we must first call P1.toggleSection( 1 ); This will cause P1.getQuestion() to resolve as a String containing a question from section 1. You should replace this 1, with an expression that evaluates to the section that was chosen by the user, so they instead see a question from the section that they have chosen. When the user chooses a section that there are no questions for, your program will crash showing the above message (this will be fixed in the last milestone). Otherwise, they should see a question from the section that they previously selected. Note that the provided questions (you will eventually be able to add more questions of your own) are within sections 1 and 2.Update 9/13: The P1.toggleSection method should be called immedaitely after reading in the user’s section choice. If you print anything out to the screen between reading in the user’s choice and calling P1.toggleSection, your code will run into problems with one of the automated milestone1 tests.Now it is time to read in the user’s answer to the previous multiple choice question. This question should always be a letter: usually A, B, C, … but T, F and other single letter answers are possible. After they answer this question, they should see the correct answer displayed on the screen. You can retrieve the correct answer by using the method P1.getAnswer() which returns this answer as a single char. Here is what a complete run of this program might look like at this point (note the expected vertical whitespace in this example):Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1[T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: TThe correct answer is: TThank you for using the CS302 Review Quiz!Review the code that you have written so far, and after you are satisfied that it conforms to the above specifications, submit a copy of your working ReviewQuiz.java code along with this P1.java placeholder file (since we cannot updload jar files) to zyBooks. Note that there should not be any need to add this P1.java to your Eclipse project, and that doing so is likely to create name conflicts with the P1.jar file that you are already using. If the automated tests detect any errors with your code, you can fix your code and resubmit it as many times as you’d like (however, you’ll have to wait 60 minutes between submissions). You will be awarded points based on your submission that earns the most points prior to the due date: 8:00am on Thursday, September 15th.Week2 – As You WishStart by extending your program from Milestone1 to ask the user to enter a new review problem after they answer the question and before the program’s closing message is displayed. Here’s an example of what these new prompts and user-input should look like:Enter a multiple choice question (in one line of text):[T]rue or [F]alse, statements in Java end with a semicolon.Enter the correct answer for this question (one letter): TSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 1There are just a couple more steps before this question that the user has answered is added to their local database. First, your code should give the user a chance to proof read their question and either confirm or deny that it should be added.Please proofread your problem and confirm you would like to submit it (Y/N): YThank you for submitting this new problem.A response of Y should result in the feedback demonstrated above, and a call to the method P1.submitProblem() which takes four arguments between the parentheses:1 P1.submitProblem( q, a, s, e );The “q” above should be replaced with the String question entered by the use, the “a” with their char answer as an upper-case letter, the “s” with their int section number, and the “e” with their String email address. After this method is called, the final step required to commit this new question to the local database is to call the method P1.done(). You can call this method once at the end of your program, after the closing message is displayed. It may be helpful to leave this line commented out as you work, to avoid adding extra questions to the database. Otherwise you may find it helpful to occasionally delete the file within your project folder that is named “db” to refresh your local question database to contain only the default provided questions.When the user enters anything other than the letter ‘Y’ (either upper-case or lower-case) in response to the confirmation prompt above, your program should NOT call P1.submitProblem() and instead of displaying the “Thank you for submitting this new problem” response demonstrated above, it should display the following:Problem was NOT submitted.Update 9/16: Note that the zyBooks tests will expect that you have converted the answer letter that was entered by the user into upper-case (if it was entered in lower-case) before calling the P1.submitProblem() method.Next we’ll revisit our question and answer code to provide different feedback based on whether the user’s answer is correct. When they enter the correct answer, your program should print out the following response:That’s correct!!!and when the enter an incorrect answer your program should display the correct answer:The correct answer is: TNote that this is only what the prompt should look like when the correct answer is T, and the user has answered something other than T. Both lower-case and upper-case letter T inputs should be treated as correct.Now let’s give the user a chance to rate the difficulty of the question that they just answered, and to see how difficult others have found this questions. The prompts and user-input for this should look as follows (and should be presented to the user after they have seen whether their answer was correct or not):Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.25Of course the specific values entered and displayed here may vary. And as you may have guessed by now, there are a couple of provided methods that you can use to submit and check these user ratings: P1.submitRating(2) to submit a rating of 2 (or change this 2 to match the user’s input) and P1.getRating() to retrieve the current question’s average rating (which was 2.25 in the example above).As the final step in this milestone, we’ll add some menu options for the user to choose whether they would like to 1) Answer a Question, 2) Submit a Problem, or 3) Quit the program. The user will enter A, S, or Q to choose between these options, and then only answer a question or submit a new question before seeing the final closing message. When the user chooses to Quit, they should immediately see the closing message. And when the user enters anything other than an A, S, or Q (or a, s, or q), they should see a message stating the following before the program’s closing message and end:Sorry, but that menu choice was not recognized.Here are a couple of sample runs of the program at this point to see everything working together, and also to demonstrate the required spacing (notice that each main menu option is indented by four spaces):Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: aSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1[T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: FThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.2Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: SEnter a multiple choice question (in one line of text):This is a pretty silly example: A) wrong, B) incorrect, C) correct, D) bad answerEnter the correct answer for this question (one letter): CSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 2Please proofread your problem and confirm you would like to submit it (Y/N): yThank you for submitting this new problem.Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: WSorry, but that menu choice was not recognized.Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: qThank you for using the CS302 Review Quiz!After reviewing your code and convincing yourself that it conforms to the above specifications, submit your ReviewQuiz.java file along with this placeholder P1.java file to zyBooks P1 Milestone2. If the automated tests report any errors, attempt to debug your code and submit it again. You are allowed one feedback submission per hour. Your results on these tests will be recorded for points at 8:00am on Thursday, September 22nd.Notice that we have not added very much code to handle unexpected user input. Giving the user another chance to enter a number instead of crashing when the user types in two to select section 2 would be nice. It might also be nice to ensure that they only select section numbers that are within the correct range. Another possibility would be ensure that the email address entered by the user actually conforms to the format of a proper email address. For this programming assignment, we will not be testing your program against these kinds of erroneous inputs. However we certainly encourage you to think about how you could change you code to better deal with these kinds of potential problems. If you would like to try implementing some of these types of changes, please make a separate copy of your work to experiment with. This should help us avoid unanticipated problems that our automated grading tools might encounter with these kinds of customizations.Week3 – More, More, MoreOur Milestone2 ReviewQuiz.java program currently only presents the user with one question when it is run, so we’ll start this section by extending that functionality to present the user with multiple questions. Replace the “[A]nswer a Question” option in your program’s main menu with these two new options: [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers)After selecting either of these options, the user will be asked to choose a section to be asked questions from, and will then be repeatedly: presented with a question, given feedback on it’s correct answer, and then prompted to rate that question and be shown it’s current rating (based on the code you wrote in milestone2).The “[R]andom Sample Quiz” option will ask the user a fixed number of questions. This number is specified by the user in response to the following prompt, which should be displayed after the section selection, and before the first question is asked:Enter the number of problems to review: 3The “[P]roficiency Quiz” option will instead ask the user as many questions as it takes for them to answer a specific number of those questions correctly. The number of correct answers that will end the program will be input using the following prompt (again, between the section selection and first question):Enter the number of correct answers needed to stop: 2Note that every time you call the P1.getQuestion(), P1.getAnswer(), and P1.getRating() methods, you retrieve the current question, answer, and rating. Each time you call the method P1.gotoNextProblem(), these other methods will retrieve the question, answer, and rating for a different problem, so it will be helpful to call this between questions.You should also display an increasing problem number in front of each question, so that the output of your program matches the following:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: rSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a question from: 1Enter the number of problems to review: 31. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: fThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.16666666666666652. What characters sequence denotes the start of a comment: A) # B) // C) ; D) Enter your answer: bThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 3.53. What value does the following expression evaluate to: 3 / 2. A) 1 B) 1.5 C) 2Enter your answer: CThe correct answer is: APlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 4The average rating for this question has been: 3.75Thank you for using the CS302 Review Quiz!Now that our user is answering multiple questions, we’d like to allow them to select multiple sections to draw those questions from. Update the section selection code to present the user with multiple prompts until they enter -1 and have selected sections with at least one question in the database. There is a method called P1.questionsAvailable() that evaluates to true when the selected sections contain at least one question. Only call this method when the user enters -1 to determine whether that input should end the section selection loop. Also notice that the P1.getSections() methods already displays selected sections with square brackets around them. Here’s an example of the prompts and inputs:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: pSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 1SECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 2SECTIONS: [1.The Basics], [2.Conditionals], 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 3SECTIONS: [1.The Basics], [2.Conditionals], [3.Loops], 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): -1Enter the number of correct answers needed to stop: 11. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: TThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 2.142857142857143Thank you for using the CS302 Review Quiz!Update 9/22: Note that this ability to select multiple sections should be availabe through both the Random Sample Quiz and Proficiency Quiz options.Next we’ll allow the user to enter multi-line questions when they submit a new question. We’ll rely on the convention that the user enters the word END on a line by itself to indicate that the previous lines contain their entire question. Here is an example of this functionality with prompts:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: sEnter a multiple choice question (including the answer options):Type END on a line by itself to finish question.What does the following code print out to the screen when it is run? if( false || true ) System.out.println(“A”); else System.out.println(“B”); System.out.println(“C”); A) A B) B C) C D) AB E) AC F) BC G) ABCENDEnter the correct answer for this question (one letter): ESECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 2Please proofread your problem and confirm you would like to submit it (Y/N): yThank you for submitting this new problem.Thank you for using the CS302 Review Quiz!As the final step in this milestone you will change this program to present the user with a new menu after processing any menu choice except [Q]uit. This will allow the user to take as many quizzes and submit as many problems as they’d like within a single execution of the program. Note that when multiple quizzes are taken in a single execution, the default section selection from one quiz will persist as the default selection for the next quiz. Thisis the expected behavior for your program, so you don’t need to worry about tracking or clearing these old selections. Here is a final example to demonstrate this functionality with prompts and user input:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: GSorry, but that menu choice was not recognized.MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: PSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 1SECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): -1Enter the number of correct answers needed to stop: 11. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: FThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 2.02. What characters sequence denotes the start of a comment: A) # B) // C) ; D) Enter your answer: bThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 4The average rating for this question has been: 2.6666666666666665MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: sEnter a multiple choice question (including the answer options):Type END on a line by itself to finish question.Oops, I don’t really want to submit this…ENDEnter the correct answer for this question (one letter): NSECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 1Please proofread your problem and confirm you would like to submit it (Y/N): nProblem was NOT submitted.MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: qThank you for using the CS302 Review Quiz!Congratulations on completing Program 1 for CS302! As with the previous milestones, you should submit your final ReviewQuiz.java file along with this placeholder P1.java file via zyBooks for feedback on the Week3 Milestone features. If the automated tests report any errors, attempt to debug your code and submit it again.After this program has been completed, we’ll release a replacement for the P1.jar file that you have been using up to this point. Instead of storing and retrieving problems locally from your computer, it will store and retrieve problems from the cloud so that you can share these review materials with your classmates.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Autotest","slug":"Autotest","permalink":"http://yoursite.com/tags/Autotest/"}]}]}