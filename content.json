{"meta":{"title":"留学生Computer Science编程作业代写","subtitle":"专业 高效 原创","description":null,"author":"csyoyo","url":"http://yoursite.com"},"pages":[{"title":"","date":"2016-08-27T05:37:39.600Z","updated":"2016-08-27T05:37:39.536Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2016-09-06T11:13:18.000Z","updated":"2016-09-06T12:21:41.289Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"留学生Computer Science编程作业代写","slug":"mainpage","date":"2111-01-11T07:55:30.000Z","updated":"2016-09-19T09:59:54.153Z","comments":true,"path":"2111/01/11/mainpage/","link":"","permalink":"http://yoursite.com/2111/01/11/mainpage/","excerpt":"","text":"团队介绍 Team很小，运转高效，我们不是代写机构，而是一个高效协作的团队，团队成员有的擅长java，有的擅长python，有的擅长数据结构，有的擅长机器学习， 有的擅长C/C++，有的擅长ios/android。通过自己设计的任务分发系统，我们可以在15分钟内迅速准确评估时间和难度，完成之后还有互相之间的code review。 相比与代写机构的黑心，个人代写的不规范(我们也是个人代写发展而来)，我们团队经过不断的调整进步，具备了代写机构规范的流程优势， 并且价格合理，具备了个人代写的一对一，并且熟练了解代写流程规范。 服务内容 代写美国、加拿大、英国、澳洲或者其他国家的Computer Science编程作业，范围包括Assignment、Homework、Lab、Project、Final甚至App。 我不会给你看不懂的高逼格code，我的编程风格都是模仿你的slides和notes，为你量身打造，绝无超纲代码。 特别擅长各种疑难作业，做过大量Game Design、Operating System、Database System, Web Design，得分几乎全A(90%)。 擅长范围 我们擅长范围包括但不限于： C C++ Java Python Php Android Ios Js Jsp Qt MFC J2ee Sql Matlab Ssh Assignment/Project/Lab/作业/编程/辅导 Data structure/数据结构/机器学习/定制/制作 Linux/Windows/Mac socket Algorithom/算法 网站设计 Web开发 Operating system/操作系统 Computer Science Everything/程序设计/app/ 质量保证 开发之前会详细问你的开发语言、系统环境、软件版本、测试方式(本地测试、服务器自动测试)、是否需要documention、deadline(精确到小时) 沟通好时间后，我们不会临着deadline给你code。一般都是提前足够的时间给客户反馈一个版本的code，如果有问题需要反馈修改也有充足的时间。 除了code会免费提供给客户一个运行说明word，即使客户不知道如何运行，根据说明word也可以运行验证code。 带checker/tester的必全过，带得分点的必全做，能顺手做掉的bonus也帮你做。 小作业24小时内完成，大作业24-72小时，绝不浪费你的slip day。 代码肯定是手写原创，不违反honor code，我给你的代码属于reference。 免费提供售后服务，包括代码运行，讲解答疑。 价格优势 价格通常在$100 USD以上，只有部分Lab可能低于这个价格。 真正的无中介费用，绝不漫天要价，欢迎你货比三家，支持PayPal/支付宝/微信支付。 通常先收取一半定金，写好之后验收code之后付尾款。 我给你的不止是一个答案，还有我作为工程师的经验，编程方法和技巧。 联系方式 邮箱 : cscoderman@gmail.com (请附带作业要求) 微信 : cscoderman 联系时，请简单或详细地说明你的要求+微信昵称(如大二，Algorithm and Data Structure)，便于我们快速报价与沟通。","categories":[],"tags":[]},{"title":"C代写 EE20084 C Programming Coursework 2016","slug":"page97","date":"2017-01-16T13:12:34.000Z","updated":"2017-01-17T01:46:44.909Z","comments":true,"path":"2017/01/16/page97/","link":"","permalink":"http://yoursite.com/2017/01/16/page97/","excerpt":"","text":"Introduction算法使用BFS为了提高运行速度，使用fscanf来读取迷宫运行方式是命令行下: 程序名 [-d] 输入文件 输出文件-d可加可不加，加入-d表示屏幕输出迷宫RequirementEE20084 Coursework 2016Page | 1EE20084: C Programming Coursework 2016S.R. Pennock &amp; B. W. MetcalfeIntroductionThis programming coursework is designed to allow you to develop your C programingskills. The main objective of the coursework is to write a program that should solve amaze puzzle, as described below. There are a number of extensions possible that willallow you to gain additional marks. There are two all day laboratory sessions for thisunit, and you are expected to split your work into two distinct tasks as described below.Automated tests will be used on your code to assess a mark and so it is very importantthat you ensure that your code complies with the syntax and file formats described inthis document.The ChallengeYour program should perform the following tasks:1. Read a maze from a file.2. Work out a route from the start point to the end point of the maze.3. If selected by the user, display the maze on the screen.4. Write the solution to the maze to a file.You may extend the work in any way that you wish, so long as it is obvious and doesnot interfere with completion of the automated tests: Your code could print out amessage pointing out the extension.Formats and syntaxThe files read and written by your software are described here. Your software shouldbe as tolerant as possible of format errors in the input files and as precise as possiblein the format of the output files.The Maze File1) The file that describes the maze is a text file. The file contains whitespace (space,tab or newline) separated integers. The first three lines of the file contain twointegers each.2) The first line gives the number of rows and columns (in that order) in the maze.3) The second line gives the start location for the maze solver as a row numberfollowed by a column number. These values are zero based and location (0,0) inthe maze is the top left.4) The third line gives the end location for the maze solver in the same format as thestart point.EE20084 Coursework 2016Page | 25) All subsequent lines (one for each row as stated in the first line) contain a set ofintegers (one for each column stated in the first line). The integer is a sum ofvariables that indicate the presence or absence of a wall: If the location has a wall above it the variable has 8 added to it. If the location has a wall to the left of it the variable has 4 added to it. If the location has a wall below it the variable has 2 added to it. If the location has a wall to the right of it the variable has 1 added to it.Here is an example of the contents of a maze file:5 42 24 014 9 12 914 2 3 513 12 8 35 5 6 96 2 11 7This is the maze it describes:ColumnRow0123012Start34EndThe Solution fileYour program should output a text file with two lines: The first line should be the number of moves required to get from the startlocation to the end location.EE20084 Coursework 2016Page | 3 The second line should be a list of moves that will trace a path from the startposition to the end position without going through any walls. Each move isrepresented by a single letter U, D, L or R for Up, Down, Left or Rightrespectively.Here is an example of the contents of a solution file for the maze given earlier:4LDDLProgram syntaxYour program should conform to the following syntax so that it can be auto-tested:ExecutableName [-d] MazeFileName SolutionFileNameWhere: ExecutableName is the name of your compiled program (perhaps“my_great_solver.exe”), “-d” text is present if the maze is to be displayed. The [ ] around the “-d”means that is it optional. Your program must work whether it is there or not. MazeFileName is the name of the maze file that should be read. SolutionFileName is the name of the file in which the solution should bestored.WorkplanLab 1: I/ODuring the first laboratory session you should attempt to create the I/O framework foryour program. At the end of this session you should have a program that is able to readand write files and display the maze correctly. You should include in your program, adummy solver function that produces a dummy solution for the I/O framework tooutput. The first lab session is also an opportunity to discuss how your solver will work.Tutorial SessionsThere is a tutorial session each Monday at 14:15. In the tutorial sessions up to week 8there will be stand-alone tasks designed to help you understand the lectures. The tutorialsessions from week 9 to 11 in are left clear for you to do exploratory work on yoursolver.Lab 2: The SolverIn the second laboratory session you should try to implement the solver algorithm itself.EE20084 Coursework 2016Page | 4AssessmentThere are three assessments for the coursework in this unit:1. Design Document: A maze solver design document should be submitted viaMoodle by 4pm on the 21 st of November. This document should describeyour design for your maze solver. It does not need to describe the I/Oframework but it should include: A description of the format in which data will be passed to and from themain solver function and the syntax of the function call itself. Adescription of how your solver will solve the maze. A description of every function you plan to implement as a part of yoursolver, and how this is to be tested. A description of every data structure, array and enumerated variable youplan to implement as a part of your solver.2. Maze solver program: A maze solver program executable for the automatedtest mark. This is due in via Moodle by 4pm on the 9 th of January 2017. Youwill need to submit an executable (.exe) file that will be auto tested and a zipfile of your code (.h and .c files only). Do NOT submit your whole projectdirectory (marks will be deducted if you do this). The source code is to allowrecompilation of your code if needed. Make sure that your program runs asexpected on the computers in the undergraduate labs.3. Final Report: A report covering the description of how the finished codeoperates, documentation of the code, and the testing used on components ofthe code and on the complete code should also be submitted via Moodle by4pm on the 9 th of January 2017.Opportunities for feedbackVarious opportunities for feedback exist during the unit. There are tutorial sessions andlaboratory sessions where you can gain feedback from lecturers and demonstrators. Inaddition the will be feedback on the maze solver design document that you submit viaMoodle.Labs/tutorials: At the end of the lab/tutorial session, consider whether you havesuccessfully completed the tasks for that session or not: Struggling: “The code didn’t work and I don’t know why”. Basic: “The code compiled and sort of worked”. Advanced: “I was able to spot out algorithmic and syntax errors beforecompilation. I tested the code in detail and it always works the way that itshould”.Software: We will provide feedback on software submitted (both the executable andthe source code)EE20084 Coursework 2016Page | 5Marking1. Design Document: This should cover the analysis of the problem, the outlinecode structure you are proposing and an outline of the testing to be used. 20%of the marks will be awarded for this.2. The Maze Solver Code. This will run through a set of automated tests on yoursubmission the results will form part of your marks. The automated tests willbe run on the executable you submit. The source code will be recompiled ifneed be, for example if the source code and executable do not match. Sourcecode will be inspected for good readability, commenting and coding standardsaccording to the EE20084 coding standards document (available on Moodle).40% of the marks will be awarded for this.3. Final Report will be assessed on how well the code and its use are explained,how well the testing strategies are explained and recorded and how well thedocument is presented. 40% of the marks will be awarded for this.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Python代写 FIT1045 Algorithmic Problem Solving","slug":"page96","date":"2017-01-15T13:15:12.000Z","updated":"2017-01-15T14:18:37.553Z","comments":true,"path":"2017/01/15/page96/","link":"","permalink":"http://yoursite.com/2017/01/15/page96/","excerpt":"","text":"Introduction低级难度本次作业的目标是，利用python中实现三道题，主要考验对数据结构，算法的理解。完成本次程序设计需要理解简单算法，以及文件处理等等。步骤：1、读取对应的数据，利用简单的算法获得对应的值2、需要实现回文字符串的计算3、需要实现good string求解RequirementFIT1045 Algorithmic Problem Solving – Assignment (15%).Due: Midnight, Friday 23rd September, 2016.ObjectivesThe objectives of this assignment are:• To demonstrate the ability to implement algorithms using basic data structures and operations on them.• To gain experience in designing an algorithm for a given problem description and implementing thatalgorithm in Python.Submission Procedure1. Put you name and student ID as a comment on each file.2. Save your files into a single folder and create a zip file of this folder called yourFirstName yourLastName.zip3. Submit your zip file containing your solution to Moodle. Make sure that your assignment is not in “Draft”mode. You need to click “Submit” to successfully submit the assignment.4. Your assignment will not be accepted unless it is a readable zip file.Important Notes:1. Please ensure that you have read and understood the university’s policies on plagiarism and collusionavailable at http://www.monash.edu.au/students/policies/academic-integrity.html. You will berequired to agree to these policies when you submit your assignment. The assignments will be checked forplagiarism using an advanced plagiarism detector.2. You must not use the built-in functions to sort (e.g., sort() or sorted()), search (e.g., x in list) orto find the maximum/minimum element in the list (e.g., max() or min()): please write your own Pythoncode for these if required. You are not allowed to import any Python library or module.3. Your program will be checked against a number of test cases. Do not forget to include comments in yourcode explaining your algorithm. If your implementations have bugs, you may still get some marks basedon how close your algorithm is to the correct algorithm.4. For each task, you need to write a program that properly decomposes the problem. You will learn functionsand decomposition in Week 6.Marks: This assignment has a total of 30 marks and contributes to 15% of your final mark. Late submissionwill have 10% off the total assignment marks per day (including weekends) deducted from your assignmentmark, i.e., 3 marks per day. So, if you are 1 day late, you will lose 3 marks. Assignments submitted 7 daysafter the due date will normally not be accepted.Marking Guide:Task 1: 8 marks(a) Code readability (Non-trivial comments where necessary and meaningful variable names) – 1 mark(b) Code decomposition – 1 mark(c) Correctly determining the minimum and maximum score given by a judge to a participant – 2 marks(d) Final scores correctly computed for each contestant – 2 marks(e) Creating the “Scoreboard” table and displaying the final score for each participant – 2 marks1Task 2: 10 marks(a) Code readability (Non-trivial comments where necessary and meaningful variable names) – 1 marks(b) Code decomposition – 1 mark(c) Correctly determining if a palindrome can be formed using all letters or not – 2 marks(d) Correctly determining the lexicographically smallest palindrome – 6 marksTask 3: 12 marks(a) Code readability (Non-trivial comments where necessary and meaningful variable names) – 1 mark(b) Proper decomposition of the problem – 1 mark(c) Correctly writing isGood(s1,s2) function – 2 marks(d) Correctly writing isAlmostGood(s1,s2) function – 6 marks(e) Correctly determining if the string is a bad string using – 2 marksTask 1: Australian Idol 8 MarksYou are hired by Australian Idol to write a program to create a scoreboard for them. Each participant isjudged by 5 different judges where each judge gives a score between 0 to 10. You are given an input file namedraw scores.txt which contains 10 lines (one for each participant). Each line contains 6 strings separated byspaces. The first string in each line is the name of the participant. The remaining 5 strings record the scoresgiven by the 5 judges to the participant. Below is an example showing scores for three participants Mark, Aliceand Alan.Mark 1 10 0 2 9Alice 8 10 8 0 10Alan 10 10 10 10 10The final score of each participant is computed as follows. To handle potentially biased judges, the highestscore and lowest score received for the participant are ignored and the average of remaining three scores isthe final score. E.g., for Mark, the highest score 10 and the lowest score 0 are ignored and his final score is1+2+93= 4. Alice’s final score is8+8+103= 8.67 (ignoring lowest score 0 and one of the two 10 scores) andAlan’s final score is10+10+103= 10 (ignoring the lowest score 10 and the highest score 10). Note that the finalscore is rounded to two decimal points (e.g., Alice’s score is rounded to 8.67). You can use round() functionhttps://docs.python.org/3/library/functions.html#round.Your program should read the raw scores.txt file and compute the final score for each participant. Theresults must be stored in a table called “Scoreboard” that consists of two columns recording the names of theparticipants and their final scores. Your program must also print the final score for each participant. Below isa sample output for the above input.Mark: 4Alice: 8.67Alan: 10Important: Your program will be checked on an input file that will contain data different than the dataprovided in raw scores.txt file. Therefore, do not tweak your program to work only for the provided file (e.g.,by manually computing scores). However, you can assume that the input file will contain exactly 10 participantsand each participant will be judged by exactly 5 judges. You can also assume that the name of the input filewill be the same, i.e., raw scores.txt.Task 2: Palindromes 10 MarksYou are given a sequence of letters (all lowercase). Your goal is to rearrange the letters to form a palindrome.The palindrome must contain all the given letters. The palindrome does not need to be an English word, i.e.,it is any sequence of letters that is the same when reversed. If there is more than one palindromes that canbe formed using all of the given letters, your program must output the lexicographically smallest palindromestring (i.e., the palindrome that appears first in the alphabetical order https://en.wikipedia.org/wiki/2Alphabetical_order). For example, if the input sequence of letters is x y x z y, then xyzyx and yxzxy bothare palindrome strings formed using all the letters in the sequence. However, xyzyx is the lexicographicallysmallest. Thus, the output must be xyzyx. If no palindrome can be formed by the letters in the input sequencethen you must output impossible. For example, if the input sequence is a l g o r i t h m, your programmust output impossible.Your program must read from the input file named letters.txt that contains a single line containing asequence of letters separated by spaces. Below is a sample input file.x y x z yThere may be up to 1000 letters in the input line. Your program must create a list containing all theseletters. Then, the program must print the lexicographically smallest palindrome that can be formed by theletters in the list. If no palindrome can be formed using all these letters, your program must output impossibleTask 3: (Almost) Good Strings 12 MarksSuppose you are given two strings named s1 and s2 (containing only lowercase letters). The string s1 is calleda “good” string if it contains s2, i.e., s2 is a substring of s1. For example, if s1 is smart and s2 is art, thens1 is a good string because smart contains art. The string s1 is called “almost good” if it is not a “good”string but inserting one character into it would make it a “good” string. For example, if s1 is smart and s2is mark, then s1 is not a good string because mark is not a substring of smart. But s1 is an “almost good”string because inserting the letter k in s1 (between r and t) makes it smarkt which is a “good” string becauseit contains mark. The string s1 is called a “bad” string if it is neither a “good” nor an ”almost good” string.You need to write two functions called isGood(s1, s2) and isAlmostGood(s1, s2) that return true ifand only if s1 is “good” and “almost good”, respectively.Your program must ask the user to enter two input strings: first input string will be s1 and the second inputstring will be s2. Both strings must be converted to lowercase letters. Then, the program must call the twofunctions to determine whether s1 is a “good”, “almost good” or “bad” string. The result must be printed.3","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Prof Jeff Johnson   CS 110","slug":"page95","date":"2017-01-14T14:25:14.000Z","updated":"2017-01-15T14:16:53.007Z","comments":true,"path":"2017/01/14/page95/","link":"","permalink":"http://yoursite.com/2017/01/14/page95/","excerpt":"","text":"Introduction中级难度本次作业的目标是，利用python中的class，list，dict等等数据结构，来实现二分法求解排序各种对象。完成本次程序设计需要理解二分法的实现，class的初始化等等。步骤：1、首先需要实现各种动物的class，比如fish，dog等等。实现构造函数，重载str等等。2、需要实现二分法搜索函数3、需要实现主函数来运行整个程序RequirementProf Jeff Johnson CS 110Project 4: Pet Finder (100 points)Objectives• Learn to use classes in Python• Familiarize yourself with Binary Search• Learn about sorting algorithmsIntroductionIn this project, you will write a python program that reads a file containing data aboutseveral pets. The data will be read into separate objects depending on the type of pet. Forexample, data about a dog will be stored in a dog object. All of the objects will be added toone list and searching and sorting operations will be performed on that list. The steps:• Define a Dog class with the attributes: name, birthdate (store as string), breed, color.• Define a Cat class with the attributes: name, birthdate (store as string), breed, color.• Define a Fish class with the attributes: name, birthdate (store as string), type, color.• Define a Bird class with the attributes: name, birthdate (store as string), type, color.• Each class must have init(), accessors/mutators, and str() methods.• Write a python program petfinder.py that imports the four classes defined above.• Read the pets.csv file into your program. Each line contains information about a singlepet with its individual attributes separated by commas. Here is a sample data file, inCSV (comma separated values) format. You can create your own pets.csv file.Fish, Nemo, April 2nd, GoldFish, Orange,Cat, Shadow, July 3rd, American Bobtail, White,Dog, Dug, August 1st, Golden Retriever, Brown,Bird, Nigel, January 15th, Pelican, Brown,• For every line in the data file, read in all fields for a single pet and create a new objectfor that pet depending on its type (the first string in each line).• Create a list containing the objects and add every new object to the list as it is created.• When the list of pet objects has been created, its size should equal the number of pets inthe data file. Hint: Use this to check if your code is working so far, before continuing.• Display the following menu to users:1. Show pet names: displays only the names of all the pets2. Show pets of a certain type: Asks users what kind of pet (dog/cat/fish/bird). Showonly pets that match the user input.3. Search for pet. Call your own binary search function to search for the first petname that matches the user-entered string. If a pet is found in the list, then print allthe details for that pet and the index in the list where it was found. If the pet is not inthe list, then print a message informing the user that the pet is not in the list.Prof Jeff Johnson CS 1104. Sort list based on pet name: After sorting the list, display the sorted list. (For thisand the next sort option you can use either selection sort or insertion sort.)5. Sort list based on pet color: After sorting the list, display the sorted list.6. Exit the program.Make sure to include input validation wherever you get input from the user and includelots of comments in your code so others can understand it.Submitting the projectUsing CyberDuck or your favorite file transfer program, create a directory for project4 inyour submit directory. Please submit the following:• README: text file explaining the parts of your program and how it works• petfinder.py: the main program• dog.py, cat.py, fish.py, bird.py: the class definitions","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Extra Credit Homework Implementing Sudoku","slug":"page94","date":"2017-01-13T06:52:11.000Z","updated":"2017-01-15T14:13:49.434Z","comments":true,"path":"2017/01/13/page94/","link":"","permalink":"http://yoursite.com/2017/01/13/page94/","excerpt":"","text":"Introduction中级难度本次作业的目标是，利用python实现数独的答案求解。完成本次程序设计，需要灵活使用file，字典，list，Z3库等等知识。步骤：1、导入Z3库，Z3库的详细资料需要自己上网获得2、稍微简单点的是，文档中给了一些api的示例，但是更深入的需要自己去读源码3、根据交集，并集，bool型，等等来填写方框数据，并求解。RequirementExtra Credit Homework: Implementing Sudokuand KenKen Solvers Using Z3October 11, 20161 ProblemYou will be implementing a Sudoku solver which can solve a 2x2, 3x3 and 4x4puzzle (really an NxN puzzle for N≥2). Using techniques similar to solvingSudoku you will also implement a solver for the KenKen puzzle. Both imple-mentations will use the Z3 solver to actually solve the problem and Python willbe used to interact with Z3.2 Introduction to Z3Z3 is an SMT solver which means it is able to determine whether a logicalstatement is true or false (within certain limitations).Here are some examples of using Z3 from within Python:Proving DeMorgan’s Law:1 from z3 import ∗2 s = Solver () # Z3 solver instance3 a = Bool ( ’a ’ ) # Z3 boolean variable a4 b = Bool ( ’b ’ ) # Z3 boolean variable b5 a or b = Or(a ,b) # a or b means a or b is true6 nna and nb = Not(And(Not(a) , Not(b) ) )7 # nna and nb means not ( not (a) and not (b) )8 # is true9 s . add( a or b != nna and nb ) # Here we are asserting to Z310 # (a or b) is not equivalent to11 # ˜(˜a and ˜b)12 s . check () # Here we ask Z3 i f our statement is13 # s a t i s f i a b l e or unsatisfiableWhen running this in python interactive mode, Z3 reports unsat which meansthat our assertion that(a ∨ b) 6= ¬(¬a ∧ ¬b)is false. This means that it’s negation (DeMorgan’s Law) is true.1Finding Pythagorean triples, e.g., integers x,y,z such that x 2 + y 2 = z 2 :1 from z3 import ∗2 s = Solver () # Z3 solver instance3 x = Int ( ’x ’ ) # Z3 Integer variable x4 y = Int ( ’y ’ ) # Z3 Integer variable y5 z = Int ( ’z ’ ) # Z3 Integer variable z6 s . add(And(x &gt; 0 , y &gt; 0 , z &gt; 0) ) # Assert x , y and z are all7 # positive8 s . add(x∗x + y∗y == z∗z) # Assert xˆ2 + yˆ2 = zˆ29 s . check () # Query Z3 to see i f it can find an answer10 s . model () # Get the satisfying assignment for x , y and z11 s . add(x != 12) # Disallow the solution where x = 1212 s . check () # Check i f Z3 can s t i l l find an answer13 s . model () # Get the satisfying assignmentIn this example, Int() creates an integer variable in Z3. 1 On line 6 a constraintwas added to the solver, e.g., we constrained the values of x,y and z to bepositive. On line 8 an additional constraint is added which states that we areinterested only in integers that solve the equation x 2 + y 2 = z 2 . On line 9 weask Z3 if the added constraints can be solved, which in this case is true. Online 10 we ask Z3 for the assignment and get: x = 12, y = 9 and z = 15 (youranswer may vary). On line 11 we assert that x cannot be equal to 12 (this makesZ3’s previous answer illegal). On lines 12 and 13 we check for satisfiability andretrieve the solution which in this case is: x = 8, y = 6 and z = 10.3 Introducing PythonA good tutorial to learn Python (this is the free version, you can’t watch videosand might get pop ups):http://learnpythonthehardway.org/book/Read this to learn how to do list comprehensions in Python:http://www.secnetix.de/olli/Python/list comprehensions.hawkMore examples of using Python with Z3:http://cpl0.net/ argp/papers/z3py-guide.pdfDocumentation of the Z3 Python API:http://research.microsoft.com/en-us/um/redmond/projects/z3/namespacez3py.html1 There is an important distinction between Int variables in Z3 and int variables in otherprogramming languages: In Z3, this declaration is akin to saying that, x for instance, x isan element of the integers in a mathematical sense. In other programming languages, an intsimply allocates some amount of space which represents a value in a finite range of integers.24 Useful Python and Z3 CommandsSolver() - Creates a solver for Z3.s.add(constraint) - Adds a constraint to a Solver s.s.check() - Returns sat if the current constraints are satisfiable, and unsat ifthe constraints are unsatisfiable.s.model() - Gets the satisfying instance from the solver. Note: this functionshould only be called if s.check() returned sat.Int(“name”) - Declares an integer variable in Z3.The following functions can take either multiple arguments, e.g., Or(a, b, c)or a list Or(my list).And() - Asserts that all arguments given are true.Or() - Asserts at least one argument given is true.Distinct() - Asserts that all given variables are distinct.Sum() - Creates a variable which is equal to the sum of the arguments.Product() - Creates a variable equal to the product of the arguments.Z3 also interacts with Python’s comparison and arithmetic operators:1 from z3 import ∗2 s = Solver ()3 x = Int ( ’x ’ )4 y = Int ( ’y ’ )5 z = Int ( ’z ’ )6 a = Int ( ’a ’ )7 s . add(x != y) # Z3 variables x and y are asserted to be different8 s . add(x == 3) # Z3 variable x is now equal to 3. This is different9 # from assignment10 s . add(z &gt;= y) # Z3 variable z is asserted to be greater than or11 # equal to y12 s . add(y &gt; 7) # y is asserted to be greater than 713 s . add(a == x + y) # a is now equal to x + y14 s . add(x∗y &gt; 7)# The product of x and y is greater than 735 Sudoku SolverThe rules for Sudoku may be found here:Sudoku - WikipediaFor dimension 2, there will be 4 2x2 sub-grids, all squares will contain numbersfrom 1 to 4 and the row/column/grid uniqueness rule remains.For dimension 4, there will be 16 4x4 subgrids, all squares will contain numbersfrom 1 to 16 and the row/column/grid uniqueness rule remains.Part A: Modify sudoku base.py to accept puzzles which have dimensions otherthan 3. You should not modify the input processing code and you should definethe limits in loops and constraints in terms of of the variable n. The variable nis the length of the sub-grids in the puzzle. This is an easy exercise meant toencourage you to study the implementation.Part B: In the final if statement, after printing the solution add constraintswhich assert that the solution is not valid. What this means is that there is asolution where at least one of the blank squares in the puzzle can have a valuedifferent from the same square in the solution. After adding this constraint,you should check if there is a solution and print ”Solution is unique” if s.check()does not return sat and print ”Solution is not unique” otherwise.6 KenKen SolverPlease read KenKen - Wikipedia for an description of the KenKen puzzle.It is recommended to start with your sudoku solution as a base because it willable to accept different dimensions. Remove the section that adds the sub-gridconstraints. Also remove the code which detects non-unique solutions – this isnot required for this exercise.The puzzle list contains lists representing the cages in the puzzle. puzzle[i][0]holds the goal for the operation, puzzle[i][1] contains the operation to be usedfor the cage. The operations will be ’+’, ’-’, ’’, ’/’ and ’g’ which denote addi-tion, subtraction, multiplication, division and given respectively. Here ”given”means that the goal is the value of the indicated square. For cages using divi-sion or subtraction, you may assume that the cage has two squares in it. Sincethese operations are not commutative you will have to assert for squares a andb a/b == goal or b/a == goal is true.Finally, for a cage list cage cage[2i] holds the row of the grid and cage[2*i+1]holds the column of the grid where i is in the interval [1, len(cage)). These twovalues indicate the coordinate of a square in the grid.An example of a cage:cage = [11, ’+’, 0, 0, 1, 0, 1, 1]This means that the goal is 11, the operation is addition and the cage is on thesquares (0,0), (1,0) and (1,1).4Your solution should replace the code to enter the Sudoku puzzle in orderto encode these constraints into Z3.7 GradingFor both parts you will not be graded on detecting invalid input (you shouldnot change the input or output code), nor the performance of your solution(solutions which take more than 2 minutes on large tests will not be accepted).It is recommended you test your solutions using the provided test files, e.g.,sudoku testn.txt and kenken testn.txt. The reference results are in README.txt.If you pass the provided tests, it is highly likely that you will receive full crediton the assignment.8 Set Up and Technical IssuesIf you are using Windows:Choose one of the MSI packages for Windows fromhttps://www.python.org/downloads/release/python-278/Use 64-bit if you are able.Follow the instructions to install Z3py (precompiled) at:http://z3.codeplex.com/wikipage?title=Z3Py%20on%20WindowsMake sure you set your path. Search for how to do this.On Linux:Download the Z3 source fromhttp://download-codeplex.sec.s-msft.com/Download/SourceControlFileDownload.ashx?ProjectName=z3&amp;changeSetId=89c1785b73225a1b363c0e485f854613121b70a7Follow the instructions at:http://z3.codeplex.com/SourceControl/latest#READMEEverything should work after this. You may need to install additional software.Your terminal will likely give you commands to install the software.On Mac OS X the easiest way is to install brew:http://brew.sh/And issuingbrew tap homebrew/sciencebrew install z3This should install everything you need including Z3. You will need to set yourPYTHONPATH variable: in a terminal typeexport PYTHONPATH=”/usr/local/Cellar/z3/4.3.1/lib/python2.7/site-packages:${PYTHONPATH}”You can also append this to your .bash profile or .bashrc file to have this settingapplied when you log in.Note: Z3 currently works only with the Python 2.x series.5","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 CS1210 Computer Science I Foundations","slug":"page93","date":"2017-01-12T10:12:11.000Z","updated":"2017-01-15T14:08:50.287Z","comments":true,"path":"2017/01/12/page93/","link":"","permalink":"http://yoursite.com/2017/01/12/page93/","excerpt":"","text":"Introduction中级难度本次作业的目标是，利用python实现数据读取，数据分析，以及数据分析后的展示。完成本次程序设计，需要灵活使用file，字典，list，csv读取，matplotlib等等知识。步骤：1、导入csv2、解析数据，寻找合适的数据结构来存储CountryCODE等信息3、利用matplt库来画直方图RequirementCS1210 Computer Science I: FoundationsProject 1: Educational DataPart 1 due Friday, November 18 at 11:59PMImportantCSI projects represent individual work; there are no partnerships. Everyone is responsible for their ownwork. Under no circumstances should you turn in the work of someone else (including any code ormaterial you may find on the Internet) as your own, nor should you share your own work with others.You may discuss general concepts with your classmates as long as these discussions do not lead to theactual exchange of code fragments or written solutions.You hav e several sources for help. Your first recourse should always be to post your question on the ICONdiscussion board. This is the fastest place to go for clarifications or disambiguation, or for help withPython in general (remember, don’t post your solution or any part of your solution). Second, if you mustshare a portion of your code, you can always attend a TA help session (see the announcement on ICONentitled General TA Office Hours start Thursday, September 1 for times and locations). You may alsoattend my office hours Tuesdays from 1:30 to 3:30 in my office (14 MLH). Finally, you may email yourcode with a specific question to me or to your TA, but please be sure that you include CS1210 on thesubject line (also, this is the slowest way of getting help, due to the volume of mail we are likely toreceive).IntroductionFor this two-part project you will be working with a medium-size dataset (about 800K records) ofeducation statistical indicators obtained from the World Bank. The dataset consists of two file:f308b71c-00be-4519-9b0c-0d3100b75092_Data.csvf308b71c-00be-4519-9b0c-0d3100b75092_Definition and Source.csvboth in csv or comma-separated value format. The first file contains the data, with each record having fivefields, described in the first line of this file as:Co u n t ry,Co u n t ry Cod e , Se r i es Cod e , 2015 [YR 2015 ]The next 762,000 lines contain records of this form, while the last five lines look like:, , , ,, , , ,, , , ,Da t a f rom da t aba s e : Edu ca t i on St a t i s t i cs - Al l Ind i ca t or s , , , ,La s t Upd a t ed : 10 / 04 / 2016 , , , ,and can safely be ignored (these lines are either blank — hence the rows of commas — or contain dataprovenance information).The second file contains information about the data contained in the first file. Each line is a recordconsisting of four fields, described in the first line of this file as:Co de , Ind i ca t or Name ,Lo n g defin i t i on , So ur ceEach of these lines can be quite long, especially (and not surprisingly) the field called ‘‘Long definition.’’Using the elipsis (‘‘…’’) to shorten the line, a sample field (the 10th line of the file to be precise) lookslike:UI S .NERA. 3 , “Ad j us t ed . . . “ , “To t a l . . . “ ,UN ESCO Ins t i t u t e for St a t i s t i cs1 Revised November 14, 2016Aside from the textual descriptions, the most interesting field here is the first, which by design containsinteresting information about the type of data represented, and which is also appears as the third field inthe data file. The key idea is that records in the data file that share the same ‘‘Series Code’’ (or simply‘‘Code’’ as its called in the definitions file file) are by definition directly comparable. So, for example, if Iam interested in the adjusted net enrollment rate for females in primary school (SE.PRM.TENR.FE)across different countries or populations, I could compare all the records from the data file with this‘‘Series Code’’ (there are 254 of these).Reading DataYour first task is to read these data into Python and construct an appropriate representation of theserecords. You will write two functions to achieve this end.First, write a functionde f r eadDe fin i t i ons (fil ename ) :which opens file filename of the second type described above, that is:Co de , Ind i ca t or Name ,Lo n g defin i t i on , So ur ceand returns a dictionary D with entries of the form:Co de : [ Ind i ca t or Name , Long defin i t i on , Sou r ce ]Reading csv files can be tricky, because it is quite possible that some fields may contain explicit commasembedded in a single field (see, e.g., the ‘‘Long definition’’ field). In such cases, these extraneous commasare protected by enclosing the field in quotes. For example, consider the following line taken from ahypothetical csv file representing Olympic gold medalists:Fe n c i ng , “Ga roz zo , Dan i e l e” , ITA , 2016Here, the correct interpretation is a single record (or line) containing four fields (and not five) because thecomma in the gold medalist’s name is not semantically equivalent to the other three commas in the line.Fortunately, because this is such a common issue, Python provides a library for reading csv files whilehonoring the semantics of commas embedded in quoted fields. To use the library, you must first:impo r t csvYou will need to read up on how to use the csv library: more information can be found here:h t t ps : / / do cs . py t hon . org / 3 . 5 / l i br a ry / csv . h tmlImportant: do not attempt to split() the line, as I can guarantee this will fail. To be successful, you willneed to use the csv library. Also, be wary of the first line in the csv file, which is a ‘‘header’’ and shouldnot be included in the dictionary as data.The second function you should write:de f r eadDa t a (fi l ename ) :should open a file filename of the first type above, that is:Co u n t ry,Co u n t ry Cod e , Se r i es Cod e , 2015 [YR 2015 ]and return a tuple of two dictionaries, C and V. The first dictionary, C, should have entries of the form:Co u n t ry Cod e : Coun t ryand therefore should look like, e.g.,2 Revised November 14, 2016{ ’US A’ : ’Un i t ed St a t es ’ , ’ ITA ’ : ’ I t a l y’ , ’PRT ’ : ’Po r t uga l ’ , . . . }while the second dictionary, V, in the tuple should have entries of the form:Se r i es Cod e : { Co u n t ry Cod e : 2015 [YR 2015 ] , . . . }and thus look like, e.g.,{ ’UI S .LR.AG15T9 9 .GPI ’ : { ’ARE ’ : ’1 . 02945005893707 ’ , . . . } , . . . }Again, be wary of the fact that the first line in this csv file is also a ‘‘header’’ and should not be include inthe dictionary as data, but nor should the last five lines of this file, which represent summary informationand not real data.In constructing the readData() function, it is important not to include entries where the correspondingvalue is missing (missing values in this data file are indicated by a string, ’..’); there will be many fewervalues than the 762000 rows in the data file might imply. To get to the heart of the matter, you will writea third function:de f ma keP rofi l es (C, V) :which will return a dictionary, P, indexed by country code with values consisting of the number ofdatapoints present in V for that particular country. Thus part of P produced by your first implementationof makeProfiles() might look like:{ ’MA R’ : 307 , ’ IBT ’ : 0 , ’WS M’ : 293 , ’URY ’ : 269 , . . . }Indicating that there is no data about ’IBT’ present in this dataset. You will note that ’IBT’ is defined inC as ’IDA &amp; IBRD total’ rather than some country name; IDA and IBRD stand for InternationalDevelopment Association and International Bank for Reconstruction and Development, respectively, twobranches of the World Bank from which these data were obtained. Given that no data is provided, yourcomplete version of makeProfiles() should alter C to remove the entry for IBT and any other similar codethat has no data associated with it. Thus the value of P produced by your final version of makeProfiles()might look like:{ ’SMR’ : 14 , ’UMC ’ : 28 , ’ARG ’ : 263 , . . . }should not contain any entries with 0 values, and should also modify C to remove those entries. If yourcode is like mine, final versions of both P and C should contain 241 entries.Finally, you will implement a plotting function:de f p l o tPr ofil e (P) :that will reproduce the figure shown here below.Note how all of the country codes are arranged alphabetically along the x axis, with the y valuescorresponding to the number of datapoints for that particular country code. You will need to study thematplotlib pyplot documentation:3 Revised November 14, 2016h t t p : / /ma t p l o t l i b. org / ap i / pyp l o t _ap i . h tmlto learn how to make your code work.Once this code is complete, we’ll turn our attention to a more interesting analysis of the data.4 Revised November 14, 2016","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Assignment 2 Files, Dictionaries and Objects","slug":"page92","date":"2017-01-11T05:34:12.000Z","updated":"2017-01-15T14:06:28.234Z","comments":true,"path":"2017/01/11/page92/","link":"","permalink":"http://yoursite.com/2017/01/11/page92/","excerpt":"","text":"Introduction高级难度本次作业的目标是，利用python实现数据库，以及数据库操作。完成本次程序设计，需要灵活使用class，file，字典，对象，等等知识。不仅如此，还需要对数据库有一定的了解。步骤：1、实现Table和database对象。用来存储数据。2、实现文件操作，读取数据，存入对应的对象中。3、实现查询，合并，输入接口。Requirement1/9Assignment 2: Files, Dictionaries and ObjectsDue: Electronically, by 11:55 PM on December 1, 2016IntroductionWe’ve covered many important Python concepts by this point, including lists, files, dictionaries and (basic)OOP. In this assignment, we apply most of these concepts to write a program that can combine and transformtables of data in order to answer questions about that data. The program you will write is called SQuEaL. Itstands for Simplified Query Engine and Language, but more importantly it’s the noise that Dan Zingaro (atUTM) made when he came up with what he thinks is a super-cool idea for this assignment. We’ll see!Querying DataThe quantity and variety of data generated today requires that we have ways to organize that data and extractpieces of data that are currently of interest. For example, you might have thousands of emails in your inboxright now, but you have ways of searching and filtering that data to find messages from certain people, withspecific keywords, or sent on specific dates.Nowhere is the importance of data more evident in our daily lives than when we interact with online retailers.Consider the typical interaction with a website like Amazon. Perhaps you’re looking for a new CS book toread over the holidays. You might search for Computer Science in the search box. Among the millions ofproducts available, Amazon returns only those products of relevance in the search results.When you purchase a book, you are required to create a customer account. Amazon stores your accountinformation along with this order and all orders you make in the future. Later, you can check on your orderhistory to see exactly what you’ve purchased. Of course, millions of other customers have purchased stufftoo, so Amazon has to maintain all of this data and make sure that you see only your data and another personsees only theirs. Amazon will also want to use this data for internal purposes to see how much they’ve sold,what products are most popular, what kinds of ads to serve to you, etc. Data is used to answer a wide varietyof questions such as these:What are the Computer Science books available right now?Does the current user have a customer account?What is the order history for the current customer?How many products did Amazon sell this year?What are the top ten most popular books this year?Websites like Amazon use databases to store these vast amounts of data. They then make queries on that datain order to retrieve data for a variety of purposes. One sample query might be: “give me all of the ComputerScience books”; another might be: “give me this customer’s order history, from oldest order to most recentorder”. There are languages used to make such queries on databases. The most popular of these languages isSQL (Structured Query Language), and if you take CSCC43 you’ll learn a lot more SQL.In this assignment, you’ll write a program that understands a SQL-like language for making queries of data.Don’t worry: we won’t mention SQL again in this handout, and we expect no outside knowledge of databasesor SQL (OOPS!) or Amazon or anything like that. Everything is in this handout. Warning: if you knowsome SQL, you should be extra careful to do what we are asking and not make assumptions based onwhat you might have learned elsewhere.Tables and Databases11/21/20162/9The first two important terms for us are table and database. From now on, when we use these terms, theymean what is described in this section.Below is a sample table that we will call movies . It contains information on movies; try to understand whatthe table is showing before continuing to the text below.moviesm.year m.title m.studio m.gross1997 Titanic Par. 2186.82003 The Lord of the Rings: The Return of the King NL 1119.92010 Toy Story 3 BV 1063.2The table starts with a header giving the names of each column. The column names are m.year , m.titlem.studio , and m.gross . (Ignore the m. prefix for now; you’ll see why it’s there soon.) Note that the headerisn’t one of the data rows. The data rows are the rows below the header. The table has four columns, and eachrow gives a value in each column. For example, we see that the first movie is Titanic, the year it was madewas 1997, the studio that produced it was Par. (short for Paramount), and the gross revenue (amount themovies made) for the movie was 2186.8. (Yes, that’s given in millions of dollars… anyone who hasn’tdropped CS to enroll in film school, please continue reading.)So that’s a table: a grid where each column has a column name and each row gives a value for each column.Each row corresponds to a single thing/object/entity; in this example, each row corresponds to a movie.A database is a collection of one or more tables. A database might consist of only one table, such as movies .But we can expand our database to include more tables. For example, we can add a second table, oscars , sothat we have two tables in our database:oscarso.year o.category o.title2010 Animated Feature Film Toy Story 32003 Directing The Lord of the Rings: The Return of the King1997 Directing Titanic1997 Best Picture TitanicThis table gives names of movies that won Academy Awards (also knows as “The Oscars”, the year theywon, and the category in which they won. Notice that the names are the same ones as in the movies tableabove. This is no coincidence. Stay tuned.The two tables movies and oscars is another example of a database; this database has two tables.SQuEaL: Operations on TablesIn this section, you’ll learn the operations that can be performed on tables and how these operations arewritten in SQuEaL. Throughout, keep one thing in mind: each operation on a table creates a new table.Selecting ColumnsOne thing we can do on a table is select some or all of its columns. For example, consider the movies table(the first table given in this handout). We might be interested in only the names of the movies, so we mightwant a table with only the m.title column. We could express this in SQuEaL as:select m.title from moviesand this would give us a table with just one column:one column from movies11/21/20163/9m.titleTitanicThe Lord of the Rings: The Return of the KingToy Story 3Or maybe you want only the movie names and year (and not the studio or gross revenue). You’d express thisas:select m.title,m.year from moviesand you’d get a table with two columns, m.title and m.year :two columns from moviesm.year m.title1997 Titanic2003 The Lord of the Rings: The Return of the King2010 Toy Story 3You may have noticed that the columns in this table are in the “wrong” order. However, that doesn’t matter.The order of the columns does not change the data in the table. You will see in the next section that we willuse dictionaries to store columns, so the order of columns is not preserved. This is expected behaviour.Moving on: there are two ways to get all of the columns. You could list them all separated by commas:select m.title,m.studio,m.gross,m.year from moviesor you can use a shorthand; the means “all columns”:select from moviesIn both cases, you get a new table that contains exactly the same information as movies .Multiple TablesSelecting columns from a table is nice, but it doesn’t let us use the full capacity of our data stored in thedatabase. Recall that a database can have multiple tables, and that these tables might be meaningfully related.For example, our movies table contains the name of the movie, but the oscars table contains additionalinformation on awards that movie won (we’ll give you the data to make more related tables, such as ratingsand actors who starred in the various movies).Look back at those two tables. It would be nice to be able to create a single table that joins those two tablesinto one, like this:movies join oscarsm.title m.studio m.gross o.categoryTitanic Par. 2186.8 DirectingTitanic Par. 2186.8 Best PictureThe Lord of the Rings: The Return of the King NL 1119.9 DirectingToy Story 3 BV 1063.2 Animated Feature FilmNotice that, for each row, we have some of the data from the movies and some of the data from oscars( o.category ).You should be able to perform these joins by hand. The column on which we are joining the two tables is thecolumn that contains the common information. In this case, both tables have a title column, so we join onthat. Consider the first row of movies . The title of the film is Titanic, so we’re going to join with all rows ofthe oscars table where the o.title is Titanic. In this case, there are two rows where o.title is Titanic, the11/21/20164/93rd and 4th (best picture and directing for 1997). Joining the first row from movies and that third row fromoscars gives us the first row for our new table:movies join oscarsm.title m.studio m.gross o.categoryTitanic Par. 2186.8 DirectingThe first row of movies would also join with the 4th row of oscars , to produce the 2nd row of our new table.Likewise, the 2nd and 3rd rows of movies would join with the 2nd and 1st rows of oscars respectively, toproduce our final table.Here is the SQuEaL syntax for performing the join described here:select m.title,m.studio,m.gross,o.category from movies,oscars where m.title=o.titleYou should notice two things. First, after from , we now have the names of two tables. In addition, we haveadded the keyword where followed by a condition that must be true in order for a row to appear in the table.m.title=o.title means that a row from the movie table can be joined to a row of the oscar table exactlywhen the title columns are equal. (This is why we have the m. and o. prefixes. We can’t have two columnswith the same name or we wouldn’t have a way to refer uniquely to them!)STOP! Make sure you understand this join stuff before continuing. Be sure you can work through questionslike the following, or you’ll have conceptual trouble later:What if there were an oscar winner from the oscar table that didn’t have a row in the movies table?Would that winner show up in the new table?What if there were a movie in the movies table that didn’t win any awards in the oscars table? Wouldthat movie show up in the new table?spoilerThe answer to both questions is no. For example, in the second case, we’d be looking at a movie in themovies table and trying to connect that row with a row in the oscars table. But since that movie’s title isn’t inoscars , we find no match, and hence can’t add a row to the join table. (believe it or not, making moneydoesn’t mean that a movie is any good -insert your own Twilight/Michael Bay joke here-).Your TasksYour task for this assignment is in three parts. In the first part, you will create objects and methods to allowyou to work with tables and dictionaries, then you will write functions to read a database (one or moretables), finally you will write a program that accepts SQuEaL queries from the keyboard, runs them on adatabase, and outputs the results.Starter CodePlease download the Assignment 2 Starter Files and extract the zip archive. The archive contains starterPython code files and some sample tables that constitute databases (see below).Part 1: Building Table and Database ObjectsFirst, you will write the code to complete the Table and Database classes in database.py . You will have todecide how to implement these classes, including what instance variables and methods they should have. Thetwo methods that we will insist upon both classes having is get_dict , and set_dict , whose DocStrings have11/21/20165/9already been provided, and deal with dictionary representation of tables. These methods will allow us to moreeasily test your code. You should NOT be using these in your own code.A table, is represented as a dictionary where each key is the name of a column and each value is the list ofitems in that column from the top row to the bottom. For example, the movies dictionary would contain fourkey/value pairs. Here is one of them: the key is ‘m.year’ and the value is [‘1997’,’2003’,’2010’] ,another would have the key ‘m.title’ mapped to the value [‘Titanic’,’The Lord of the Rings: TheReturn of the King’,’Toy Story 3’] .A database can be represented as a dictionary where the keys are table names and the values are table objects.Before you spend time building the methods for Table and Database , we suggest that you read the rest of thehandout so you better understand what you’ll have to do with these classes. Building sensible and wellthought-out methods will make your life much easier when completing the next part of the assignment.Part 2: Reading Tables and DatabasesNext, you will write some reading-related functions in reading.py .Write the following functions in reading.py :read_table: (str) -&gt; TableThe parameter is the name of a table file (note: this time, it’s the name of the file, and not the filehandle). A table file is a comma-separated file such as movies.csv . (Do not open csv files in Excel orsome other spreadsheet program. They are text files. Open them in a text editor -OTHER THANNOTEPAD- to see them.) It is your task to understand the structure of this type of file in order to readit properly. The function returns a Table object.read_database: () -&gt; DatabaseThe database on which this function operates consists of all of the table files in the current directory.These files all have an extension of .csv . This function reads each file and returns a Database objectrepresenting the data from all csv files in the current directory. For a file named x.csv , the name of thetable is x ; that is, the .csv is not part of the table name. Note that each column name in the database isguaranteed to be unique. That is, if there is a column called x in one table, then there is guaranteed notto be column x in another table. (This is why we use the m. -style prefixes on column names: so that ourcolumn names are not shared by multiple tables in the database.)How are you to obtain a list of all of the .csv files in the directory? Use glob.glob(‘.csv’) toobtain a list of these filenames. We have included this bit of code to demonstrate this for you, so youare just provided with a list of the names of the files thats you need to process.Note that there should be no input and no print in reading.py . Two functions and that’s all. If yourun reading.py and it prints something or requests user input, something is wrong.Part 3: Running QueriesIn squeal.py , you will write a program that:1. Reads the database in the current directory.2. Reads SQuEaL queries from the keyboard until a blank line is entered. Each query is guaranteed to beof the proper syntax. You do not need to try to verify that the query has the correct syntax; it isguaranteed to be a well-formed query, and it is fine if your program crashes on malformed queries.After running the query, continue with the next input prompt.SQuEaL Syntax11/21/20166/9Here is the syntax of valid SQuEaL queries. When we speak of a token, we mean a piece of the query thatyou get by calling split on the query. In order, the query contains:The token select . This token is required.A comma-separated list of one or more column names. There are no spaces in this list, there are noduplicate column names in this list, and all columns are guaranteed to exist in the table. The specialtoken (instead of a comma-separated list of column names) means “all columns”.The token from . This token is required.A comma-separated list of one or more table names. There are no spaces in this list, there are noduplicate table names in this list, and all tables are guaranteed to exist in the database.The token where . This token is optional. If not present, then the query is finished here and no moretokens will be present. If the token where is present, then it is followed by a where clause that lookslike this:A comma-separated list of one or more constraints. There are no spaces in this list, and eachcolumn mentioned in the constraints is guaranteed to exist. Each constraint is of one of thefollowing four forms: column_name1=column_name2 , column_name1&gt;column_name2 ,column_name1=’value’ , or column_name1&gt;’value’ (you can also implement &lt; if you wish, butwe won’t be testing it). Single quotes are used to indicate that the second operand is a hard-codedvalue rather than the value of another column in the row. Notice that there are no spaces aroundthe operators. Only these two operators are allowed. Also, note that onlycolumn_name1=’value’ and column_name1&gt;’value’ are valid, ‘value’=column_name and‘value’&gt;column_name are not valid constraints (i.e., the value can only come after the operator)A Required Function: run_queryWe’re not specifying much in terms of required functions in squeal.py . It is your responsibility to break thework into meaningful, self-contained functions that perform well-defined and small tasks, and we will bemarking your design. That said, we are requiring that you write two particular functions. The first of whichis:run_query: (Database, str) -&gt; TableThis function takes a Database object, and a query (in the form of a string) as its parameters. Runs the givenquery on the given database, and returns a table representing the resulting table.Another Required Function: cartesian_productThe second function you must write is this:cartesian_product: (Table, Table) -&gt; TableThe Cartesian product of two tables is a new table where each row in the first table is paired with every rowin the second table. For example, the Cartesian product of the movies and oscars tables is the following.cartesian productm.year m.title m.studio m.gross o.year o.category o.title1997 Titanic Par. 2186.8 2010AnimatedFeatureFilmToy Story 31997 Titanic Par. 2186.8 2003 DirectingThe Lord of theRings: The Returnof the King1997 Titanic Par. 2186.8 1997 Directing Titanic1997 Titanic Par. 2186.8 1997BestPictureTitanic2003The Lord of the Rings:The Return of the KingNL 1119.9 2010AnimatedFeatureFilmToy Story 311/21/20167/92003The Lord of the Rings:The Return of the KingNL 1119.9 2003 DirectingThe Lord of theRings: The Returnof the King2003The Lord of the Rings:The Return of the KingNL 1119.9 1997 Directing Titanic2003The Lord of the Rings:The Return of the KingNL 1119.9 1997BestPictureTitanic2010 Toy Story 3 BV 1063.2 2010AnimatedFeatureFilmToy Story 32010 Toy Story 3 BV 1063.2 2003 DirectingThe Lord of theRings: The Returnof the King2010 Toy Story 3 BV 1063.2 1997 Directing Titanic2010 Toy Story 3 BV 1063.2 1997BestPictureTitanicNote that there are three rows in movies and four rows in oscars , so we get 34 = 12 rows in the cartesianproduct table. Of course, most of these 12 rows are probably not what you want, as the titles don’t match. Theway that these nonsense rows get removed is through a suitable where clause that constrains which rows arekept. For example, with a where clause of m.title=o.title , you end up with only four rows, as expected.Although it isn’t very efficient (and certainly isn’t the way things are implemented in a real database system),you must process the SQuEaL query by first using your cartesian_product function to join all the tables inthe query into a huge table and then keep the “good” rows and columns for the query based on the where andselect clauses.You may have noticed in reading the SQuEaL Syntax that one or more tables are allowed in the from part ofthe query. That is, you must support queries that contain one or two or three or more tables. Don’tovercomplicate this. First produce the Cartesian product on the first two tables; that gives you a new table.Then, do the Cartesian product on that new table and the third table in the list of tables; that gives you a newtable again, and so on. You can use imdb.csv or oscar-actors.csv in your starter files if you want to try aquery that involves three tables.What to do with a QuerySo, a user runs squeal.py and types a query, like select from movies or whatever. What does yourprogram have to do to process this query?The first thing you want to do is break the query into tokens by calling split . Remember: the query isguaranteed to have proper syntax!Now, start with the first table after the from ; call that your base table. If there is a second table in the tableslist, compute the Cartesian product of the base table and that second table; that results in another table (call itt2 ). If there is a third table in the tables list, compute the Cartesian product of t2 and that third table. Keepdoing this until you’ve finished with all of the tables. When you’re done, you have a table containing all of thecolumns from all of the tables that are involved in the query.Now, apply any constraints in the where clause. Each constraint from left to right results in a new table thatkeeps only the rows that satisfy the constraint. Processing the first constraint removes 0 or more rows;processing the second constraint takes the result of the first constraint and removes a further 0 or more rows,and so on. We see many opportunities for helper functions here: processing one constraint, processing allconstraints, finding operators, handling values vs. column names, etc.Finally, create a new table where you keep only those columns that were listed after the select . (Anotheropportunity for good design with a helper function!) The resulting table is the result of the query. Be careful:11/21/20168/9even though select is listed first in the query (it is the first token), it is the last thing you do in processing thequery!Once you’ve generated the table for the query, you want to output that table to the screen with commasseparating columns. We have provided a helper function in your starter code that outputs a table in the properformat.When are Tables Equivalent?If two tables have the same rows and the same column names, but the column order is different, then thetables are equivalent.Similarly, if two tables have the same rows and the same column names, but the order of the rows is different,then the tables are equivalent.So, you can take a table, change the order of the columns, change the order of the rows, and it will still be thesame table. What does this mean? It means that the order in which you add rows during a Cartesian productoperation doesn’t matter. As long as you have the correct rows in your table, it is fine.Testing your CodeIt is recommended that you test each function as you write it by creating small files, tables, or queries,depending on the function. This is preferable to doing lots of work, finding a bug, and then having no ideawhere in the code that bug was introduced.We are not asking you to submit your testing code as part of your submission.To help you test, we are also providing a type-checker. It is in your starter code ( typechecker.py ). Thismodule simply tests that the required functions accept the proper number of parameters and return the propertype. Passing the type-checker says nothing of the correctness of your functions, and does not test any helperfunctions that you have written. (We haven’t prescribed how you should write those, so we can’t test theirtype contracts!)More ExamplesLooking for more databases on which to run your code? We’ve provided a bunch of sample .csv files. We’veadded much more detailed movie info, an olympic database, as well as a database of every type of food thatwas mentioned in the tv show Seinfeld (some databases are more practical than others). We may add newfiles to play with as we go, so check back periodically. If you come across some fun .csv files, feel free to letme know.MarkingThese are the aspects of your work that will be marked for Assignment 2:Correctness: Your functions should perform as specified.Formatting style: Make sure that you follow the PEP-8 Python style guidelines, and the generalprogramming rules that we have introduced throughout the term.Programming style: Your variable names should be meaningful and your code as simple and clear aspossible.No magic numbers:: remember this from Assignment 1? You should define constants and use theminstead of magic numbers.Commenting: be sure to include accurate docstrings (that follow the design recipe we have beenusing) and include internal comments.Design: We expect a reasonable choice of functions/methods. Functions/methods should generally beshort – no longer than about 20-30 lines of code. Write helper functions/methods to meet this goal.11/21/20169/9What to SubmitThe very last thing you should do before submitting is to run the type-check module one last time.Otherwise, you could make a small error in your final changes before submitting that causes your code toreceive zero for correctness. Make sure that any print or input statements are hidden behind if(name== “main“) , or else the type-checker (and more importantly the auto-marker) will wait for input when itimports your file, and pause indefinitely.Submit database.py , reading.py and squeal.py . Your files must be named exactly as given here (i.e. nocapital letters, and please don’t change the filenames).","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Turtle Graphics Lab","slug":"page91","date":"2017-01-10T04:33:14.000Z","updated":"2017-01-13T03:14:37.729Z","comments":true,"path":"2017/01/10/page91/","link":"","permalink":"http://yoursite.com/2017/01/10/page91/","excerpt":"","text":"IntroductionTurtle乌龟画图的初级入门作业，总共5个exercise，包括运行python运行，用命令行操作，画图形等等入门功能RequirementCSI 100 Turtle Graphics Lab1 IntroductionWelcome to CSI100! This lab is a head-first introduction to programming. Here are the important thingsto know:• Don’t Panic! The most important thing that this lab is about is managing confusion. There will bea lot of confusion in learning how to program. Try things and ask lots of questions!• In this lab we are going to draw pictures with turtles. It’s a classic exercise for introducing newprogrammers to code, and it can make really cool pictures!• Work in pairs. We’ll do this a lot in this class. The two of you should share a laptop, and share yourideas too. You will be able to upload deliverables to canvas as a group.• There is just one deliverable for this lab, in section 4. Basically, you will draw a cool picture andupload it to canvas.2 Running your first Python programIn this section of the lab, we’ll download and run our first python program. Let’s start by getting the code.Go to canvas and find the files for today’s lab. Save a copy of turtle lab.py to your Downloads folder.Comment 1 Why save your file to the Downloads folder? For this lab, it is just somewhere easy tofind. In the future, feel free to use any location you prefer on your computer. Remember that the lablaptops reset on every reboot, so they probably won’t be there anymore by next class.Comment 2 The lab computers have both OS X and Windows installed. For our labs, we will work inOS X. If your computer boots into Windows, switch operating systems by restarting the computer. Holddown the ‘Option’ key when you see the grey loading screen. Let go when you see startup icons appear,and choose ‘Macintosh HD’The code that you downloaded, turtle lab.py, is just a text file. You can open it in any text editor,like textEdit (mac) or Notepad (windows). Even better, the lab computers come with Sublime and Atom,which are both programmer-oriented text editors. Most importantly, this means that they automaticallyhighlight code to make it easier to read.Exercise 1 Go ahead and open turtle lab.py in a text editor. Some of the lines of code are special:they are comments. Comments don’t contain any instructions for the computer; they just help otherprogrammers understand what is going on.Figure out which lines are comments. How do you think you would add a new comment to theprogram?Now we want to run the program. This means telling python to read through turtle lab.py and executeeach instruction in order. To do this, we need to use the command line. You can open the command line byclicking on the spotlight icon ( ) on the right side of the mac menu bar. Search for and open Terminal,which is the mac command line.Comment 3 We usually interact with computers through a mix of keyboard, mouse, and touchscreens.When we want to give instructions precisely and formally, like in programming, the keyboard is oftenmost helpful. The command line is a text-based interface to the computer. We type commands, pressenter, and then the computer executes them.1 of 4CSI 100 Turtle Graphics LabThe command line is like the Finder: it is always in a folder, and you can move it from one folder toanother. In order to run turtle lab.py, we need to navigate to the Downloads folder where we put the file.The rest of this section will introduce a few command line commands to let you do this.The command line always starts up in your home folder. If you type pwd (which stands for “print workingdirectory”), the command line will tell you what its courent directory is.&gt; pwd/Users/wilsonklComment 4 Your command line probably actually looks more like this:WC-07792:~ student$ pwd/Users/studentThis is normal. The WC-07792:~ student$ part is called the command line prompt. Since it changesso much from one computer to another, when programmers communicate to each other, they usuallyjust write &gt; as a sort of standard prompt, even though no one’s prompt looks exactly like that.You can also see a list of all of the files and folder that are in the current directory using ls (for “list”):&gt; lsApplications Library anacondaDesktop Movies DocumentsMusic Downloads PicturesDropbox Public Google DriveComment 5 Your output may look slightly different depending on what files and folders are in yourhome directory. This is what mine shows.Some of these folders should look familiar, like Desktop and Documents. We want to move to theDownloads folder. To do that, we’ll use the cd command (for “change directory”).&gt; pwd/Users/wilsonkl&gt; cd Downloads&gt; pwd/Users/wilsonkl/Downloads&gt; lsturtle_lab.pyNow that we are here in the Downloads folder where our code is, we can tell python to run it by typing&gt; python turtle_lab.pyExercise 2 Follow the directions above to download a copy of turtle lab.py, open a command line,navigate to the Downloads folder, and run the code.Do you see an image pop up that looks like the following?2 of 4CSI 100 Turtle Graphics LabComment 6 There are many other handy commands for moving around on the command line. Inparticular, cd .. (two dots) moves up one directory, and cd (with nothing after it) takes you back toyour home directory.3 Working with turtlesImagine a small invisible turtle with a pen in its mouth. In turtle graphics, we draw pictures by givinga turtle directions: “go forwards”, “turn left”, “turn right”. The instructions in turtle lab.py have theturtle first go forwards 100 units, then turn left by 45 degrees, and then go forwards another 200 units.t.forward(100)t.left(45)t.forward(200)The three basic turtle commands are forward, left, and right. Using just combinations of these, you canmake the turtle draw some very complicated things.Exercise 3 Which direction is the turtle initially facing, before it starts moving?Exercise 4 Change the code in turtle lab.py to make the turtle draw a square. How would you doan equilateral triangle, or a hexagon?4 Your turnNow it’s your turn to experiment! For some inspiration, here is a cool picture made with turtle graphics:Figure 1: A turtle drawing made by repeatedly moving and turning.Also, here are some other commands that you can give to your turtles:3 of 4CSI 100 Turtle Graphics Labpenup() Tell the turtle to lift up it’s pen. It will still move as usual, but will not leave a mark.pendown() Tell the turtle to put it’s pen down on the paper, so that it leaves a mark. The pen starts downunless you lift it.pencolor(’red’) Change the color of line that the turtle draws. Other colors work too, such as ’black’,’blue’, ’magenta’, and many others.pensize(10) Change the thickness of the line that the turtle draws. The default is 10, so pensize(12)draws a slightly thicker line.Repeating. There is a way to repeat the same commands many times without lots of copying and pasting.Here is an example:for i in range(10):t.forward(20)t.left(20)This will cause turtle t to go forward 20 steps, and the turn left 20 degrees, and to repeat those actions atotal of 10 times. Repeating code like this is called looping.Comment 7 This looping code has one line that is not indented, and then two lines that are. Inden-tation is important in python, and we will talk about what it means in detail later in the course. Fornow, know that indentation should be exactly four spaces, and that only indented lines get repeated bythis loop.Exercise 5 (Turn in) Now it’s your turn! Draw a cool picture with your turtle. Take a screenshotand upload it (as a group) to canvas.4 of 4","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Project 4 Sliding Puzzle Game","slug":"page90","date":"2017-01-09T03:23:54.000Z","updated":"2017-01-13T03:11:21.178Z","comments":true,"path":"2017/01/09/page90/","link":"","permalink":"http://yoursite.com/2017/01/09/page90/","excerpt":"","text":"Introduction用python完成一个Sliding Puzzle Game游戏，功能点细化很很清楚，按照下面task要求一步一步来就好了。PuzzleWindow.update() 10%Task02: PuzzleWindow .get_click_position() 10%Task03: PuzzleWindow .get_random_color() 10%Task04: PuzzleWindow.paint_with_random_colors() 10%Task05: PuzzleWindow.animation() 10%Task06: Board. shuffle_one() 10%Task07: Board.play_click() 10%Task08: Board. play_key() 10%Task09: Board.done() 10%Task10: Cell. get_neighbor_cells() 10%Task11: TopScores.add_score() 10%Task12: TopScores.write_scores() 10%Task13: TopScores. print_scores()最后完成代码之后进行相关的单元测试，保证每个task1都passRequirementProject 4: Sliding Puzzle GameRelease date: November 11Due date: December 9IntroductionIn this project, we make a Sliding Puzzle game. The goal of the sliding puzzle game is that to movetiles to end up with a desired state. We are only allowed to move tiles in certain ways.First, before we start anything, let’s play the game we will build:http://mypuzzle.org/slidingWe use the same graphics library in this game we used in Project 2.The game will be dynamic in terms of size. We will be able to run our game with board sizes of 3x3,4x4, 5x5 etc.Let’s watch the video of the final version of our game:https://youtu.be/m0w2kXKg0LUThe details of the project is given in the project skeleton and in the recitation slides.Turning in Your Work● Submit your completed file (project4_skel.py) on Vocareum.RubricProject 4Task01: PuzzleWindow.update() 10%Task02: PuzzleWindow .get_click_position() 10%Task03: PuzzleWindow .get_random_color() 10%Task04: PuzzleWindow.paint_with_random_colors() 10%Task05: PuzzleWindow.animation() 10%Task06: Board. shuffle_one() 10%Task07: Board.play_click() 10%Task08: Board. play_key() 10%Task09: Board.done() 10%Task10: Cell. get_neighbor_cells() 10%Task11: TopScores.add_score() 10%Task12: TopScores.write_scores() 10%Task13: TopScores. print_scores() 10%TOTAL 130%","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Java代写 CSE105-CW3 Java programming project.","slug":"page89","date":"2017-01-08T01:53:24.000Z","updated":"2017-01-13T03:08:12.464Z","comments":true,"path":"2017/01/08/page89/","link":"","permalink":"http://yoursite.com/2017/01/08/page89/","excerpt":"","text":"Introduction中级难度设计和完成一个小车管理系统，包括增加，售卖，显示，生成小车报告等功能，还有额外功能，将小车信息保存在本地文件中，然后一半的工作量是写report，根据评分标准完成相关功能RequirementCSE105-CW3: Java programming project 1CSE105-CW3: Java programming project.Due date: 11 th Dec 2016 at 6pm. Worth 30% of final mark.Design and code a Used Car System in Java.This will be a menu based Used Car System, using standard input/output.Joe’s Garage buys and sells vehicles. They may buy a used car from a customer that has somedamage, and improve its condition before they sell it. Joe’s garage is a small family business andcan only store 20 cars at any time.The details of operation are flexible and left to your imagination. The main functions are: Add a new car to the system when it is purchased, noting the purchase price and date ofpurchase. A new car can only be purchased if there are currently less than 20 cars for sale. Sell a car to a customer, noting the sale price and date of sale. The car is marked as sold.Its details are kept in the system for use in sales reports. Display a list of all cars for sale sorted by date of purchase. Display a sales report showing all car sales. Show the purchase price, sale price. Show thetotal profit at the end of the report.In addition, the program; Reads a list of cars from a text file at start up. The cars are stored in a suitable datastructure in memory. Saves all cars to a text file just before the program exits.Note, the storage in the text file must be true object persistence. Objects will be read from the fileat the program commencement and stored prior to program termination. All operations on objects(cars) must be done in memory.CSE105-CW3: Java programming project 2It is expected that you will have: At least one Java class to control the operation of the system. At least one Java class to store data as objects.Use a package name of CSE105 for java classes.The expected level of comments in the Java code:Typically, one line of comment to describe each method. Comments are not needed for gettersand setters of data classes. Include your name and student number as a comment at the top ofeach class.You will submit:1. A report in the form of one Word document containing:a. System Design. The detailed design of each class showing attributes and methods.b. Testing. Show the test cases needed to test the system. Show the actual testresults obtained by running the system.2. Implementation (coding):a. 1 file for each class (ie. . java files)b. 1 text file containing the data.You must pack all of your files with WinRAR or WinZIP, using your student ID as the file name andthen upload one rar/zip file to ICE. Each student should also submit a hardcopy of theassignment. The content must be identical to the electronic version.Note, the project must contain English characters only – no Chinese.This assignment is individual work. Plagiarism (e.g. copying materials from other sourceswithout proper acknowledgement) is a serious academic offence. Plagiarism will not be toleratedand will be dealt with in accordance with the University Code of Practice on Assessment.CSE105-CW3: Java programming project 3Marking scheme for CW3 project.Assessment criteria PercentageA design document is provided. Class names, main attributes, andbehaviour are shown. The overall design of the classes and methodswithin are properly presented. OO principles are observed includingencapsulation and appropriate use of static and object methods.Sufficient detail is shown to enable implementation. Do not use Javacode in the design. Pseudocode or equivalent should be used.20Test cases. Test cases are provided to test all functions of thesystem.10Test results are properly presented showing expected and actualresults for all test cases.10Main functions work. 4 functions x 10 marks. 40Data storage in text file. Data retrieval, data storage. 10Menu navigation. It is possible to navigate all functions and also exit. 10Total 100%Deduct 5 marks for each of the following: Compiler errors The use of break or continue (except break within switch). Identifier naming not conforming to commonly accepted Java programming conventions. Insufficient comments in the Java code.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写 CS1210 Programming Assignment 7","slug":"page88","date":"2017-01-06T21:23:34.000Z","updated":"2017-01-13T03:04:45.280Z","comments":true,"path":"2017/01/07/page88/","link":"","permalink":"http://yoursite.com/2017/01/07/page88/","excerpt":"","text":"Introduction中级难度需要完成2个程序，第一个是不带gui界面的，判断字符串是否是回文，判断方法就是首尾循环是否相等，第二个是完成一个旋转车轮的游戏，带gui界面，最后判断谁赢得胜利RequirementProgramming Assignment 7 ( 100 Points )Due: 11:59pm Thursday, November 10thREADME ( 10 points )You are required to provide a text file named README, NOT Readme.txt, README.pdf, orREADME.doc, with your assignment in your pa7 directory. There should be no file extension after the file name“README”. Your README should include the following sections:Program Descriptions ( 5 points ) : Provide a high level description of what each of your programs do andhow you can interact with them. Make this explanation such that your grandpa or uncle or someone you knowwho has no programming experience can understand what these programs do and how to use them. Do notassume your reader is a computer science major.Short Response ( 5 points ) : Answer the following questions:Vim Questions:1. In vim/gvim, what commands will indent N consecutive lines (starting from the cursor line) by one levelwhere the indent level is defined to be two spaces? This will take two vim commands: one to set thenumber of spaces to indent with each indent level (default is 8), and one to actually indent Nconsecutive lines. Likewise what command will shift N lines left (de-indent N lines)?2. In vim/gvim, what command will indent an entire curly-bracket block one level, while the cursor iscurrently on either the open or close curly bracket of the block? Likewise what command will shift anentire curly-bracket block one level left (de-indent block)?3. How do you open a new line below and insert (one keyboard key for both steps)?Unix Question:4. On the Unix command line, how can you capture (redirect) the program’s output into a file named“output”?Java Question:5. How can you create an array of ints in Java and initialize it with the values of all single digit odd positivenumbers (inclusively between 0-9), all in one step/line?STYLE ( 20 points )Please see preview programming assignments; especially PA2’s writeup. You will be specifically graded oncommenting, file headers, class and method headers, meaningful variable names, judicious use of blank lines,not having more than 80 characters on a line, perfect indentation, no magic numbers/hard-coded numbersother than -1, 0, +1, using setters and getters, etc (see the style section of PA2’s writeup).You will lose significant points if you have static methods or static variables for the Spin100 program(except, constants are okay). Instead you should create getters and setters to change the variables for anobject.CORRECTNESS ( 70 points )Start by creating your pa7 directory as usual. Then copy over the starter code from the public folder by doingthe following:$ cp ~/../public/PA7indrome.java ~/pa7$ cp ~/../public/PA7-images/ ~/pa7Program 1: PA7indrome ( 20 Points )You must use recursion and implement the methods listed below or you will lose all 20 points for thisprogram. Also, do not edit the main() method in PA7indrome.java as it will negatively affect your grade.Write a command line application that checks whether an array of strings is a palindrome. A palindrome is aword, phrase, number, or other sequence of characters which reads the same forwards and backwards. Theprogram will take in a file as a command line argument. Each line of the file will be converted into a string,where each string will be placed as an element in an arraylist then converted to an array (this part has alreadybeen written for you in the main() method–do not edit anything in this method). Your task will be to thendetermine if the array of strings is a palindrome or not (non-case sensitive). You will be using two recursivemethods to implement this functionality.public static char[] reverse( char[] toRev ) {…}● Overall goal: reverse the array of characters passed in using recursion.● If the length of the character array passed in is 1, just return the array right away.● Otherwise, swap the first and last characters in the array (#1-3 below)● Copy the middle of the array into a new array and recursively call reverse on this new array (#4 below).● Place the returned array back into the middle of the original array of characters, and return thisreversed array of characters (#5 below).● Hint: you can use System.arraycopy() (look up the javadocs).● This method must use ends-and-middle recursion.public static boolean isPalindrome( String[] words, int lo, int hi ) {…}● Overall goal: determine if the array of strings passed in is a palindrome using recursion.● Determine if the string at the low index in the words array is the reverse of the string at the high index inthe words array. To do so, you must use your reverse() function, after converting the string to a chararray and passing it in. This comparison should be non-case sensitive.● If the string at the low index is indeed the reverse of the string at the high index, recurse on theremaining middle portion of the array by passing modified values of the low and high index in therecursive call. Otherwise, return false.● This method must use ends-and-middle recursion.You must use these methods as they are defined above or you will lose points.We will test for edge cases when grading this assignment, so it is up to you to test your program thoroughly.Similar to previous assignments, your output MUST match exactly to our sample output!Sample Output 1: Not a palindrome (user input in BOLD)For this example, the input file is named notPalindrome. If you open the file in vim, it should look like this:startearlystartoftenThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome notPalindromeInput array of strings:start, early, start, oftenThe file is not a palindrome.[cs11fxyz@ieng6-201]:pa7$Sample Output 2: Odd-length palindrome (user input in BOLD)Input file named oddPalindrome:StArTEaRlYsTaRtoFtEnufotofuNeTfOTrAtSyLrAetRaTsThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome oddPalindromeInput array of strings:StArT, EaRlY, sTaRt, oFtEn, ufotofu, NeTfO, TrAtS, yLrAe, tRaTsThe file is a palindrome.[cs11fxyz@ieng6-201]:pa7$The sequence of characters in the array of Strings generated from the input file reads the same forwards andbackwards (non-case sensitive), so it is a palindrome. Note that because the length of the array is odd, themiddle string must also be a palindrome (in this case the middle string is “ufotofu”, which is a palindrome).Sample Output 3: Even-length palindrome (user input in BOLD)Input file named evenPalindrome:StArTEaRlYsTaRtoFtEnNeTfOTrAtSyLrAetRaTsThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome evenPalindromeInput array of strings:StArT, EaRlY, sTaRt, oFtEn, NeTfO, TrAtS, yLrAe, tRaTsThe file is a palindrome.[cs11fxyz@ieng6-201]:pa7$Sample Output 4: Palindrome with new lines (user input in BOLD)Input file named newLinesPalindrome. Note: New lines will be cut off (ignored) by the scanner.StArTEaRlYsTaRtoFtEnNeTfOTrAtSyLrAetRaTsThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome newLinesPalindromeInput array of strings:StArT, EaRlY, sTaRt, oFtEn, NeTfO, TrAtS, yLrAe, tRaTsThe file is a palindrome.[cs11fxyz@ieng6-201]:pa7$Program 2: Spin100 ( 50 Points )You are to design a game that models itself after the mini game found in the Price is Right.https://www.youtube.com/watch?v=mFJCfNib2nsMain idea of the game:● There are two players: Player 1 and Player 2. Player 1 gets to spin the wheel first. Player 1 gets tospin until they have reached over 100 points or have clicked the “Finish Player 1” button. At that point,it becomes Player 2’s turn. Player 2 then gets to spin until they have reached over 100 points or haveclicked the “Finish Player 2” button.● Once Player 2 goes over 100 points or clicks the “Finish Player 2” button, the game ends.● Whichever player is closer to 100 points wins. Once a player goes over 100 points then they’ve lost. Ifboth players go over 100 points then it’s a tie. If both players have the same score, then it’s a tie.Example scores and their outcomes:Player 1 70 120 20 100 100 95Player 2 90 110 120 100 105 100Winner Player 2 Tie Player 1 Tie Player 1 Player 2Implementation Details:This program will have two Java source files: Spin100Controller.java and Spin100Wheel.java.Spin100Controller.java will be the main controller which extends WindowController and handles the GUIlayout. Spin100Wheel.java will be the actual wheel object that defines what a wheel can do, how it spins, etc.1. Setting up the GUI:Start by first getting the GUI set up in the begin() method of Spin100Controller.java.The top panel will have 3 labels:● “Spin100” - You can customize the font of this label–don’t worry about whether the font is the default ornot! Just make sure your program doesn’t throw errors or have an incorrect layout / text upon start.● “Player 1’s score: “ - followed by player 1’s score (initially 0).● “Player 2’s score: “ - followed by player 2’s score (initially 0).○ Note the space following the ‘:’ for each player’s scoreThe bottom panel will have 5 buttons: (make sure the text matches exactly).● “Click to Spin P1”● “Finish Player 1”● “Restart”● “Click to Spin P2”● “Finish Player 2”The wheels on the center canvas:● The center of the window will have the canvas, similar to PA6. The height and width of the canvasshould be 840 x 660. Note that the canvas will not be resized during testing. On the canvas we willbe displaying two wheels (one for each player). In order to create the wheels, we need to initialize anarray of Image(s), using the images you copied over from the public folder. Make sure your imagesare directly inside your pa7 directory, and not in a subdirectory called PA7-images.● You will want to load the 20 images into an array of Images. To ensure you arrange the images in thecorrect order, we suggest creating the following array. This will ensure you load the images in thecorrect order and will also be helpful for scoring later on. Load the images corresponding to thesescore values in the order in which they appear in the array. The array of images and the array of scorevalues will be parallel arrays.private static final int[] SCORES = { 50, 85, 30, 65, 10, 45, 70, 25, 90, 5,100, 15, 80, 35, 60, 20, 40, 75, 55, 95 };● The wheel should always start with 50 in the center and should spin in a downward direction. Thismeans that when the wheel spins for the first time, the red arrow will first point to 50, then 85, then 30,and so on.● You will want to create each wheel by calling the Spin100Wheel constructor. Some parameters you willprobably want to pass to the constructor are:○ The array of Image(s) corresponding to the SCORES values.○ Location of the wheel (location of the top number). The center of the left wheel should behorizontally aligned with the center of the left half of the canvas. In other words, you need to findthe x-coordinate that will center the left wheel in the center of the left half of the canvas.Similarly, you need to find the x-coordinate that will center the right wheel in the center of theright half of the canvas. The y-coordinate of the top number for both wheels should be 10 (makesure the layout of your wheels matches the screenshots exactly).○ Reference to the Spin100Controller so that controller methods can be called from the wheel(this will be useful for setting the score after the wheel stops spinning each time)○ Reference to the drawing canvas so the wheel can be placed on the canvasThe red arrows on the center canvas:● The arrows are red-filled arcs with start angle = -15, arc angle = 30, height = 150, and width = 150.● Left arrow position: (234.5, 186.0)● Right arrow position: (688.5, 186.0)Messages declaring winner on the center canvas:● Create a hidden text object saying “Tie” at position (444, 5). The text should be blue, bold, and size 16.● Create a hidden text object saying “P1 Winner” at position (20, 5). The text should be green, bold, andsize 16.● Create a hidden text object saying “P2 Winner” at position (808, 5). The text should be green, bold,and size 16.See the screenshot section below to see what all of this looks like.2. Wheel FunctionalityBecause the wheels are animated, the Spin100Wheel class needs to extend ActiveObject (and therefore mustcontain a run() method).Creating a wheel:● Each wheel needs an array of 5 VisibleImages (generated from the array of images passed in as aparameter to the constructor) to store the 5 images that will be visible on the canvas at any given time.● The location passed to the constructor is the location of the topmost VisibleImage. The nextVisibleImage will be 99 pixels below that, and the next 99 pixels below that, and so on.● Each wheel needs a random double generator object to generate random numbers for the amount ofticks to spin when the spin button is clicked (see more details below in the Spinning the wheel section).● Don’t forget to save a reference to the Spin100Controller object to help with scoring.● Set the number of ticks to 0, so the wheel begins stationary.● As with all ActiveObjects, the last statement in the constructor should be start();.Spinning the wheel:● Initially, the wheel’s number of ticks should be set to zero. When a wheel’s spin button is clicked, thecontroller should update the number of ticks so the wheel will start spinning. This means you will wanta method to generate a random number of ticks for the wheel to spin.● One way to implement this is to have a method called getRandomTicks(). This method should:○ First generate a random double between 0 and 1○ Based on the random number, return the minimum number of ticks (50) + a number ofadditional ticks, which indicates how many ticks a wheel should spin for. This is to allow thewheel to stop on different numbers each time by randomizing where a wheel stops cyclingthrough the array of images.○ If the random number is between 0 and 0.05, return MIN_TICKS + 1. If it’s between .05 and .1,return MIN_TICKS + 2. You should keep adding one more tick until you return MIN_TICKS + 13for when the value is between .6 and .65. From there you should subtract one less tick until youreturn MIN_TICKS + 6 when the value is between .95 and 1.■ Range of ticks to add (over the .05 increments) is(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 12, 11, 10, 9, 8, 7, 6)● After getting the random number of ticks, the controller needs to set the wheel’s number of ticks using asetter method.● To make the wheel actually spin, the run method will need to constantly check its number of ticks. Ifthe number of ticks is greater than 0, increment the index of each visible image displayed to the nextindex in the images array; in other words, for every tick, shift the images down one. Once you reachthe last index of the images array, wrap back around to the beginning (Hint: think mod operator).Then decrement the number of ticks left for this wheel to spin and pause to slow down the animation.● At the beginning of each spin, the initial delay should be set to 1. Then when the wheel delay is lessthan 20, the wheel delay should increment by 1 on every iteration of the forever loop. When the wheeldelay is greater than or equal to 20 and less than 200, the wheel delay should increment by 5. Whenthe wheel delay is greater than or equal to 200 and less than 500, the wheel delay should increment by20. This will give the illusion of a faster spin at the start which eventually slows down and stops oncethe number of ticks is zero.● Once the number of ticks is 0, the wheel needs to call a public method in controller to let the controllerknow that the wheel’s score has changed and that the Text object for the score needs to be updated.● Some additional methods to include in the class would be setters and getters for the ticks, delay, andscore. This is so that the controller can call these methods and change the wheel’s variables’ valueswhen something like the spin, finish, or reset button is pressed.3. Controller FunctionalityYou will implement Spin100Controller.java to handle creating the buttons and listening to actions performed onthe buttons.● Upon start, only the “Click to Spin P1” and “Restart” buttons should be enabled. So in your begin()method, in addition to setting up the layouts of the buttons, you should also disable the “Finish Player 1”button and all buttons associated with Player 2.● Once you have clicked “Click to Spin P1”, all buttons are disabled until the wheel stops spinning. Oncethe wheel stops spinning, update Player 1’s score. Now that you have spun Player 1’s wheel at leastonce, the “Finish Player 1” button should be enabled.● As long as Player 1’s score is less than or equal to 100, Player 1 can choose to continue spinning byclicking “Click to Spin P1” again, or click “Finish Player 1” to finish their turn. Once Player 1’s score isover 100, the controller will automatically finish the turn for Player 1.● Once Player 1 has finished, all of Player 1’s buttons are disabled and the “Click to Spin P2” button isenabled for Player 2 to start spinning. The spinning process follows the same condition as stated forPlayer 1.● Once Player 2 has also finished, all but the Restart button should be disabled. A game over messageshould be displayed. The message could announce a Tie, or announce that either Player 1 or Player 2won (see screenshots for detail).Summary of the buttons● The Spin buttons: The spin button disables itself when:○ The wheels are spinning○ The player’s score has passed 100○ The player has clicked finish after at least one spin● The Finish buttons: Each player’s finish button is disabled until they have spun at least once. It is alsodisabled when the wheel is spinning, as well as after they have finished their turn.● The Restart button: This button is always enabled except when a wheel is spinning. Once clicked:○ It changes the scores back to 0○ It resets the wheels so that 50 is at the center again○ The “Click To Spin P1” button is enabled again and the buttons are reset to the original state.Implementation Requirements for Button Event HandlingTo manage the behaviors of the 5 buttons, you must define 5 private member inner classes inside theSpin100Controller class. Use your notes from class as a reference.● Each private class must implement the ActionListener interface.● The ActionListener interface enforces that each class has the actionPerformed(ActionEvent e) methoddeclared and implemented.Having separate inner classes for each button is much better than handling all button events in oneactionPerformed() method. This is because there is a one-to-one relationship between buttons and listeners,resulting in cleaner code that is less prone to errors.Note: Remember to use getters/setters vs. directly accessing variables by name.4. Sample Screenshots:The start of the program. Bothplayer’s scores are set to 0,with the arrows pointing to 50.Only the buttons: “Click to SpinP1” and “Restart” are enabled.After Player 1 clicks “Click toSpin P1”, the score for Player1 is updated. The “FinishPlayer 1” button is nowenabled after 1 spin.Player 1 clicks “Finish Player1”, and now only “Restart” and“Click to Spin P2” buttons areenabled.Player 2 now clicks “Click toSpin P2”, the score for Player2 is updated. “Finish Player 2”button is now enabled after thefirst spin.After Player 2 clicks “FinishPlayer 2” The winner textappears. The only buttonenabled is “Restart”.This is the case when Player1’s score is over 100, thusPlayer 2 wins.In the case that Player 1’sscore exceeds 100, thebuttons “Click to Spin P1” and“Finish Player 1” areautomatically disabled,allowing P2 to begin.If both player’s scores exceed100, the game results in a tie.TurninTo turnin your code, navigate to your home directory and run the following command:&gt; cse11turnin pa7You may turn in your programming assignment as many times as you like. The last submission you turn inbefore the deadline is the one that we will collect.VerifyTo verify a previously turned in assignment,&gt; cse11verify pa7If you are unsure your program has been turned in, use the verify command. We will not take any late files youforgot to turn in. Verify will help you check which files you have successfully submitted.It is your responsibility to make sure you properly turned in your assignment.Files to be collected:Note: You must turn in all the files necessary for your program to run, including the .jar files and .png files.Note: Also, if any exceptions are thrown in the terminal, you will lose points.Source Files: Image Files: Misc:PA7indrome.javaSpin100Controller.javaSpin100Wheel.java .png (20 of them) objectdraw.jarAcme.jarREADMEEC_Spin100Controller.java (extra credit)EC_Spin100Wheel.java (extra credit)Extra Credit ( 5 points )Setup: Create copies of your regular source files and name them EC_Spin100Controller.java andEC_Spin100Wheel.java.Along with the functionality listed below, you will need to change the size of the window if you are adding theextra buttons. Set the canvas width to 1000 and the canvas height to 660.Overall Wins: 1 PointKeep track of the overall wins with a message that appears at the end of the game:Overall Wins P1: #, P2 @where # is a non-negative number indicating how many times player 1 has won the game and @ is a non-negative number indicating how many times player 2 has won the game. This message cannot overlap eitherwheel and it should be horizontally centered between the wheels. It should be 200 pixels above the verticalcenter of the canvas. The message can be in whatever color you would like besides black. In the case of a tie,neither player’s win count should change.Change Spin Direction: 1 PointAdd some new buttons and change the old ones so that each player has the option to spin up or down. Thereshould be a “P1, Spin Up” button, “P1, Spin Down” button, “P2, Spin Up” button, and “P2, Spin Down” button.To clarify, spinning up is where the numbers appear to be moving up (so the 50 goes towards the top) whereasspinning down is where the numbers appear to be moving down (so the 50 moves towards the bottom). Youcan see the new buttons in the screenshots below. Disabling the buttons should still work the same as it doesin the normal portion of the PA, just make sure to disable both the Up and Down spin buttons.Switch Starting Players: 3 PointsThe “Switch” button is enabled only at the start of each round of the game. This button should be disabled inthe middle of a game (i.e. if a spin has occurred). This allows the player who spins first to switch with the otherplayer. For instance, if Player 1 was going to start first and the switch button is clicked. then the game willrestart and Player 2 will now start first. If the restart button were then clicked, Player 2 would still be going first.Sample Screenshots:If all extra credit features are implemented, this is the initial state of the program.The overall number of wins for each player is shown when a round finishes.Player 2 can begin the round of a game when “Switch” is clicked.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Python代写 CS1210 Computer Science I Foundations","slug":"page87","date":"2017-01-06T14:33:34.000Z","updated":"2017-01-13T02:52:57.638Z","comments":true,"path":"2017/01/06/page87/","link":"","permalink":"http://yoursite.com/2017/01/06/page87/","excerpt":"","text":"Introduction中级难度完成意大利儿童纸牌游戏的完整版。居于上一次作业的重构和改进，主要游戏的游戏规则，根据规则写相关的操作逻辑，并且完成测试。RequirementCS1210 Computer Science I: FoundationsHomework 5: Ruba Mazzetto, CompletedDue Monday, October 31 at 11:59PMIntroductionIn Homework 4, you completed the simple implementation of the Italian children’s card game calledRuba Mazzetto. In this homework, we’ll finally finish the complete version of the game that pits youagainst any number of other players, and includes provisions for taking more than one card each turn. Inthe interest of brevity, you can refer to the descriptions of Homework 3 and Homework 4 for moreinformation about the game.BackgroundFor this assignment, we’ll start with a refactored version of the Homework 4 solution, that incorporatesone small change to the rules of the game 1 and significantly revamps the structure of the play() function.Your job is to complete this refactored version to support taking more than one card per turn, where thecards matched must sum to the value of the card played. So, for example, the solution to Homework 5 willbehave as follows (excerpt taken from the middle of a 3-player game):Pl aye r 0 :St ash : [P l aye r 1] 7♠ (3) , [P l aye r 2] 6♥ (2)Ta b l e : [3] 10♦, [4] 3♦My hand : [0] 10♣, [1] 10♠Pl ay wh i ch ca rd? 0Se l ec t ma t ch i ng i nd ece s sepa r a t ed by spa c es (b l ank t o d i sca rd) : 1 4Pl aye r 0 p l ays 10♣ and . . .. . . . t ake s 3♦ f rom t ab l e. . . . s t ea l s p l aye r 1 s t ash 7♠=========Pl aye r 1 :St ash : [P l aye r 0] 10♣ (5) , [P l aye r 2] 6♥ (2)Ta b l e : [3] 10♦Pl aye r 1 p l ays 6♦ and . . .. . . . s t ea l s p l aye r 2 s t ash 6♥=========Pl aye r 2 :St ash : [P l aye r 0] 10♣ (5) , [P l aye r 1] 6♦ (3)Ta b l e : [3] 10♦Pl aye r 2 add s 1♦ t o t ab l e1The small change referred to here has to do with what happens to the cards that remain on the table at the endof the game. In the ‘‘real’’ version of the game, the last person to match cards from the table or another player’sstash is gifted all of the remaining cards on the table when everyone else has finished playing their cards. Thischange has been incorporated into the play() function.1 Revised October 24, 2016Note how Player 0 uses the 10♣ to match a 3♦ from the table and the 7♣ from Player 1’s stash (because10 = 3 + 7).As for HW4, to make this homework feasible, you will be provided a code skeleton containing nearly allof the code you will need for the solution. Your assignment is to complete the functions getMove() andpickMove(), but you should begin by studying the code skeleton file carefully.def play(N=2, K=10)The play() function has undergone the most significant reworking since the previous assignment. Asidefrom an additional variable, which changes the parameters of the deck you play with, the big change is inthe main iteration that continues until the deck is exhausted. Previously, this loop was divided into twosections: one for the human player and one for everyone else. The new structure merges these twosections into a single loop and relegates the differentiation of the human player from the computerplayer(s) to getMove(). The last change to play() involves assignment of any cards remaining on the tableto the last player who successfully matched, a job handled by the addition of a variable, last, that is reseteach time a player makes a match.def getMove(i, N, H, T, P)The purpose of getMove() has changed significantly from HW4. In HW4, getMove() was to return asingle ‘‘best’’ move for a given (automated) player, where each move consisted only of matching a singlecard from the player’s hand with a single card from the table or the top card from an opposing player’sstash. But now that we permit matching a single card from the player’s hand with the sum of multiplecards from the table or from the top of each opposing player’s stash, we need to generate and thenconsider the space of all possible legal moves. Each move is represented as (c, M), where c is the indexinto the player’s hand correspond to the card they will play and M is a list of indeces selected from thetable and/or the opposing player’s stashes such that sum(M)≡ H[i][c][0]. If (c, M) is (c,[]), then themove corresponds to discarding c to the table.Your job is to implement helper(c,v, j, M, L) to generate all legal moves, from which one will beselected and returned as the value of getMove(). Let’s examine getMove() more closely:(1) The first step is to determine if the argument i relates to the human player (i ≡0). If so, then moveselection is relegated to pickMove().(2) The second step invokes the as-yet-unwritten helper function helper(c,v, j, M, L) repeatedly(once for each card held by the current player) to generate the list L of all legal moves.(3) The third step returns a random card to discard if no legal moves were found.(4) The final step returns the legal move that maximizes the number of cards captured by the currentplayer (note that other heuristics might be used to make a ‘‘best’’ move selection from the list L oflegal moves).The helper() function is a recursive function that constructs the set of legal moves. If you think of thelen(T) cards on the table and the up to N − 1 player stashes (excluding the current player’s stash) asdefining a space of size 2 len(T)+N−1 , you will need to enumerate the up to this many card combinations byconsidering possible inclusion or exclusion of each successive card. The arguments tohelper(c,v, j, M, L) are designed to help you do so.(1) The first argument, c, is the index of the card you are trying to match from player i’s hand.(2) The second argument, v, initially the value of c, represents how many ‘‘points’’ remain to matchwith the addition of each successive card. When this number reaches 0, you know the cardsyou’ve selected so far sum to the original value you were trying to match.2 Revised October 24, 2016(3) The third argument, j, initially 0, is the index of the card you are currently considering adding tothe legal move you are construction. On each successive recursive call, you’ll increase j by 1 toindicate you are going to consider the next card, from 0 through N up to N + len(T) − 1. At eachrecursive step, you will want to explore both adding the jth card to the current legal move or notadding it.(4) The fourth argument, M, initially [], is the legal move under construction. Each time you elect toinclude an additional card, you will need to extend M to include that card’s index.(5) The last argument, L, initially [], is the list of legal moves you have found so far. Each new leg almove you discover should be added to L, and the updated L should be the value returned fromhelper().def pickMove(i, N, H, T, P)pickMove() is called by getMove() when the first argument i to getMove() corresponds to the humanplayer. pickMove() interacts with the user to obtain a legal move (c, M). Note that pickMove() mustguarantee that the move is both legal in every sense and that the cards selected from the table and the topof any opposing player’s stash do, in fact, sum to the value of the card selected from the player’s hand.The Ground RulesBecause this class is part of the NSF study we have previously described to you, the ground rules maydiffer slightly section by section. In your section, you will start working on your assignment in discussionsection and continue working on it in next week’s discussion section. We ask that you upload a partialsolution to ICON at the end of each session (this will not be graded, it is just to see how far you get duringthe discussion section). You will also be asked to answer a short survey about your experience after eachdiscussion section. Once you upload your final solution to ICON (when the assignment is complete),your will be asked to fill out a separate short survey about your work on the assignment.Just as a reminder, under no circumstances should you turn in the work of someone else (including anycode or material you may find on the Internet) as your own, nor should you share your own work withothers. It is fine, however, to discuss general concepts with your classmates as long as these discussionsdo not lead to the actual exchange of code fragments or written solutions.You hav e several sources for help. Your first recourse should always be to post your question on the ICONdiscussion board. This is the fastest place to go for clarifications or disambiguation, or for help withPython in general (remember, don’t post your solution or any part of your solution). Second, if you mustshare a portion of your code, you can always attend a TA help session (see the announcement on ICONentitled General TA Office Hours start Thursday, September 1 for times and locations). You may alsoattend my office hours Tuesdays from 1:30 to 3:30 in my office (14 MLH). Finally, you may email yourcode with a specific question to me or to your TA, but please be sure that you include CS1210 on thesubject line (also, this is the slowest way of getting help, due to the volume of mail we are likely toreceive).What to Hand InAs before, for credit, you must make sure your function definitions exactly match the ‘‘signatures’’ giv enin this problem specification. Your files should be uploaded to the HW5 dropbox folder in ICON by thespecified time and date: late assignments will not be accepted.You should start building your solution file according to the template at the end of this assignment (thetemplate file, hw5.py, can be downloaded from ICON), substituting your own name for mine, obviously.obviously. Note that the template file is incomplete and will not load in its present state.3 Revised October 24, 2016Make sure that you follow the instructions given for each function exactly, as the autograder expects thesefunctions to follow the naming convention shown. Also note the use of the comment character, #, at thebeginning of each line that is not intended to be interpreted by Python. You should use comments liberallyto explain what you are doing to the human reader.4 Revised October 24, 2016","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 CSCA09 The Game of Life","slug":"page86","date":"2017-01-05T14:13:33.000Z","updated":"2017-01-13T02:53:18.774Z","comments":true,"path":"2017/01/05/page86/","link":"","permalink":"http://yoursite.com/2017/01/05/page86/","excerpt":"","text":"Introduction中级难度主要实现了细胞生成游戏。需要实现游戏的逻辑代码，以及界面仿真代码。首先：完成代码的逻辑编写。比如活细胞和无细胞在不同的邻居个数的情况下，下一代会是活细胞或者无细胞的判断。其次需要实现接口函数，来显示不同的使用策略。RequirementThe Game of Life is a well-known mathematical game that gives rise to amazinglycomplex behavior, although it can be specified by a few simple rules. (It is not actually agame in the traditional sense, with players competing for a win.) Here are the rules. Thegame is played on a rectangular grid. Each square on the grid can be either empty(represented by a 0 in our version) or occupied by a “living” cell (represented by a 1). Atthe beginning, you can specify empty and occupied cells in some way; then the gameruns automatically. In each generation, the next generation is computed. A new cell isborn on an empty square if it is surrounded by exactly three occupied neighbor cells. Acell dies of overcrowding if it is surrounded by four or more living neighbors, and it diesof loneliness if it is surrounded by zero or one living neighbor. A neighbor is an occupantof an adjacent square to the left, right, top, or bottom or in a diagonal direction. Figure 16shows a cell and its neighbor cells.Many configurations show interesting behavior when subjected to these rules. Figure 17shows a glider, observed over five generations. Note how it moves. After fourgenerations, it is transformed into the identical shape, but located one square to the rightand below.One of the more amazing configurations is the glider gun: a complex collection of cellsthat, after 30 moves, turns back into itself and a glider (see the large figure at the end).Over the next two weeks, you will use Python to program the game to eliminate thedrudgery of computing successive generations by hand. Your homework assignment willcome in two parts, also known as Programming Assignment 6 and ProgrammingAssignment 7. The Wikipedia page on The Game of Life has a lot of useful information,as well as some real-time examples of program behavior. You should take a look at it.Implementing this game requires a plan for what to do about the cells at the edges of thegrid, since those cells don’t have a full complement of eight neighbors. The Wikipediaentry does bring up this issue, and options range from simple to complex. For ourpurposes, it is sufficient to assume that every square outside of the grid is empty (i.e., 0)and will remain empty for the duration of the game.(Much of the description above, and all the figures below, is borrowed from a textbookby Cay Horstmann.)Programming Assignment 6 - Game of Life, Part 1Your solution is to be written using Python 3. Make sure you provide commentsincluding the file name, your name, and the date at the top of the file you submit.Also make sure to include appropriate docstrings for all functions.The names of your functions must exactly match the names given in this assignment.The order of the parameters in your parameter list must exactly match the ordergiven in this assignment.For any given problem below, you may want to write additional functions otherthan those specified for your solution. That’s fine with us.The core problem to be solved in the implementation of the Game of Life is how togenerate the next grid from the current grid. Your task is to write a function callednextGen which expects only one argument. That argument is a two-­‐dimensionaltable (i.e., a list of lists) with m rows and n columns, representing the current grid.The elements of the table are either 0 (empty square) or 1 (occupied square). Youmay assume that all rows have the same number of elements.Given the current grid, nextGen computes and returns (but does not print) a newnext grid (without altering the current grid) by applying the simple rules providedabove. For example, given this initial grid:glider = [[0,0,0,0,0,0,0],[0,0,1,0,0,0,0],[0,0,0,1,0,0,0],[0,1,1,1,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]]your function should work like this:&gt;&gt;&gt; x = nextGen(glider)&gt;&gt;&gt; x[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0],[0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0],[0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]&gt;&gt;&gt; y = nextGen(x)&gt;&gt;&gt; y[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0],[0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]&gt;&gt;&gt; z = nextGen(y)&gt;&gt;&gt; z[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0],[0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0],[0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]&gt;&gt;&gt; q = nextGen(z)&gt;&gt;&gt; q[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0],[0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0]]If we formatted those results nicely, we’d see a sequence like this:## generation 1[[0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0],[0, 1, 0, 1, 0, 0, 0],[0, 0, 1, 1, 0, 0, 0],[0, 0, 1, 0, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0]]## generation 2[[0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 1, 0, 0, 0],[0, 1, 0, 1, 0, 0, 0],[0, 0, 1, 1, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0]]## generation 3[[0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0],[0, 0, 1, 0, 0, 0, 0],[0, 0, 0, 1, 1, 0, 0],[0, 0, 1, 1, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0]]## generation 4[[0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0],[0, 0, 0, 1, 0, 0, 0],[0, 0, 0, 0, 1, 0, 0],[0, 0, 1, 1, 1, 0, 0],[0, 0, 0, 0, 0, 0, 0]]These grids correspond to the generations in Figure 17. Note that the grid passed to yourfunction must remain unaltered:&gt;&gt;&gt; glider[[0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0],[0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0],[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]Where to do the assignmentYou can do this assignment on your own computer, or in the labs. In either case, use theIDLE development environment – that’s what we’ll use when we grade your program.Put all the functions you created in a file called “prog67.py”. Save that file until you’vecompleted Programming Assignment 7.Submitting the AssignmentDo not turn in this assignment by itself. Submit it with the work you do for ProgrammingAssignment 7.Saving your workIf you are working in the lab, you will need to copy your program to your own flash-driveor save the program to your workspace on SmartSite. To save it on flash-drive, plug theflash-drive into the computer (your TAs or the staff in the labs can help you figure outhow), open the flash-drive, and copy your work to it by moving the folder with your filesfrom the Desktop onto the flash-drive. To copy the file to your SmartSite workspace, goto Workspace, select Resources, and then use the Add button next to “My Workspace”.Your TAs can help you with this if you run into trouble.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 CSCA08 Exercise 10","slug":"page85","date":"2017-01-04T14:23:23.000Z","updated":"2017-01-13T02:53:29.354Z","comments":true,"path":"2017/01/04/page85/","link":"","permalink":"http://yoursite.com/2017/01/04/page85/","excerpt":"","text":"Introduction低级难度主要实现了读懂源码，编写对应的单元测试。需要会使用 unittest 库。首先生成单元测试套件：class TestCartesianProduct(unittest.TestCase):然后在对源码的各个功能进行多方面的黑盒测试。包括 空白表， 单个空白表， 多行表的合并测试。RequirementCSCA08 Exercise 10Due: December 1, 2016. 5:00pmIn our final exercise of the term, we’re going to be practicing writing UnitTests. The structure of the testsisn’t really as important as the testing plan, but we get to test both.What to TestWe wanted to come up with a function for you to test that had a bit of everything: loops, selection, lists,strings, dictionaries, objects, etc. But we had a bit of a conundrum. We wanted something complicatedenough to be interesting, but knew you were busy with your assignment, and didn’t want everyone to haveto spend lots of time writing a new function in order to test it.That’s when it hit us. You’re already writing a function that you’ll probably want to test anyway…cartesian product! It’s got everything we need, you already have to write it, and now it can help you testyour own code for A2. (A pretty smart move if I do say so myself).How to StartBefore you start writing any code, you should think about coverage testing, and how we came up with atest plan in lecture. Figure out all of the parameters, and the important ranges they fall into. Then write onetest for each possible combination of ranges. The goal here is to find one example test case for all possibleregions of your testing space.Most of your actual tests will probably involve code that looks like this (now do you see why we made youwrite set dict and get dict?d1 = {…}d2 = {…}t1 = Table()t2 = Table()t1.set_dict(d1)t2.set_dict(d2)result_table = squeal.cartesian_product(t1, t2)result_dict = result_table.get_dict()expected_dict = {…}self.assertEqual(result_dict, expected_dict)What to DoIn a file called ex10.py, you should write a UnitTest to thoroughly test cartesian product. Your tests willactually be run on a version of the code that I have written. Therefore, you will be doing black box testing(you don’t know if I implemented the cartesian product or the Table class in the same way you will… infact, you can bet that I probably won’t). My cartesian product function will be in a file called squeal.py,and my Table class will be in a file called database.py. Both will be placed into the same directory as yourUnitTest. We’ve provided you with some starter code, just to make sure you can access everything correctly.What to SubmitSubmit your ex10.py file to MarkUs as usual. Your UnitTest methods do not need any DocStrings, andunless you’re doing something particularly unusual, you probably don’t need any internal comments either.However, your method names and error messages should be descriptive enough to properly explain whateach test case does and why it’s useful. Remember that writing frivolous test cases is no better than missinguseful ones.1","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Introduction to Python","slug":"page84","date":"2017-01-03T03:53:21.000Z","updated":"2017-01-13T02:47:21.908Z","comments":true,"path":"2017/01/03/page84/","link":"","permalink":"http://yoursite.com/2017/01/03/page84/","excerpt":"","text":"Introduction低级难度主要实现了利用三种方式来生成密码。方法一： 随机法，前三位从A-Z生成，后三位从0-9生成。方法二：右旋法，即参照ACSII码表来生成，比如A转换成D.方法三：藏尾法，即输入一句话，从句子中的每一个单词的最后一位组成密码。RequirementWrite a Python program that generates passwords in three different ways.a)Generate a random 6 character password. The first 3 characters must be capital letters (A – Z) and the second 3 characters must be numeric characters (0 – 9).b)Enter a secret word and then specify an amount of ‘right shift’ of the characters to encrypt your word. This simple method to encrypt data is attributed to Julius Caesar, the Roman Emperor. (If you are interested, you may like to read the following… http://en.wikipedia.org/wiki/Caesar_cipher). This method takes each character in a message and replaces it with one which is a certain distance (offset) along the alphabet from it (moving right). For example: 1 2 3 4 5 6 7 8 9 . . . . . A B C D E F G H I J K L M . . . +3 A B C D E F G H I J . . . If the offset is 3 then A becomes D, B becomes E, C becomes F etc. In this case the word DIG encrypts to GLJ. In order to decrypt the word/string, simply offset by the same amount moving in the opposite direction (i.e. moving left). Instead of restricting the cipher to the alphabetic characters only, we will use all of the printable ASCII characters. That is, all the characters from ASCII 32 (Space) to ASCII 126 (~). You will need to use the following two functions - ord(c) Given c, a string of length one ord(c), returns an integer representing the value of the string. For example: ord(‘a’) returns the integer 97. chr(i) Returns a string of one character whose ASCII code is the integer i. For example: chr(97) returns the string ‘a’.c)Enter a secret sentence and create a password by taking the last letter of each word.Write a menu driven program called yourId_encryptor.py that will allow the user to enter commands and process these commands until the quit command is entered.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Introduction to Recursion","slug":"page83","date":"2017-01-02T14:43:32.000Z","updated":"2017-01-13T02:47:10.695Z","comments":true,"path":"2017/01/02/page83/","link":"","permalink":"http://yoursite.com/2017/01/02/page83/","excerpt":"","text":"Introduction低级难度主要目的：1、练习使用递归方法2、练习命令行参数的使用3、练习文件操作实现方法：1、从输入的参数读取目录字符串2、搜索该目录下的所有文件和文件夹3、递归调用搜索该目录下的子文件夹4、直到搜索完所有的文件RequirementProf Jeff Johnson CS 110Lab 7: Introduction to Recursion (50 points)Objectives• Practice writing recursive functions• Introduction to command-line parameters• Practice coding file operationsRecursive Directory TraversalFor this lab, you will create a python program (recursive_dir_traversal.py) that willallow the user to provide the path of a directory to your program as a command line parameter.Your program must display the total number of python files and the total number of all files in thatdirectory, its subdirectories, their subdirectories, and so on.For example, the user may type the following at the terminal:$&gt; python3 recursive_dir_traversal.py /home/alark/cs110/labs/Your program must do the following:• Read in the command line parameters and get the user-provided path.• Write a recursive function that takes in the path as the input.• In the recursive function, you have to decide whether the contents of the path provided in theform of a string are a file or a directory. For example, if the user provides the path as/home/alark/cs110/labs/lab1/lab1.py, the provided ‘path’ is actually a file.Alternatively, /home/alark/cs110/labs/lab1/ is a directory. Use the built-in functionos.path.isfile(path) in your program to identify whether a path is a file or a directory.• If the path is a file, check if it is a python file. Use a string function for this. Increment thecounter for python files. If the file is not a python file, increment the count for all files but notthe count for python files. Remember, your program should count the total number of files inthe directory and all its subdirectories.• If the path is a directory, obtain a list of all the files in that directory and call your recursivefunction with every element in that list. Given a path, you can obtain the list of all the files in adirectory using files = os.listdir(path).• At the end of the program, you must display the total number of python files and the totalnumber of files found.Submit to your submit directoryUsing CyberDuck or your favorite file transfer program, make a directory for lab7 in your submitdirectory and upload:• recursive_dir_traversal.py• README.txt (a text description of how your program works)","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python代写 Computer Project 11","slug":"page82","date":"2017-01-01T06:23:36.000Z","updated":"2017-01-13T02:46:58.330Z","comments":true,"path":"2017/01/01/page82/","link":"","permalink":"http://yoursite.com/2017/01/01/page82/","excerpt":"","text":"Introduction中级难度主要实现了利用两个class（student，grade）来存储学生成绩等信息。Class Grade：实现方法：str，reprClass Student：实现方法：add_grade，calculate_grade，str，repr，gt，lt，eq完成两个类之后，需要完成测试文件，和app应用文件来调用这两个class。app文件：读取对应的student文件，存入相应的类。存所有的student 实例，并且打印出来。test文件：用于测试以上所有的方法。RequirementCSE 231 Fall 2016Computer Project #11(Update 12/4: clarified file prompting for proj11-app.py. Update 12/2: clarified Grade init andStudent str requirements. Update 11/30: clarified specifications of init and str and added anote about the sample test file).Assignment OverviewThis assignment focuses on the implementation of two Python classes to store grades of students in aclass.It is worth 55 points (5.5% of course grade) and must be completed no later than 11:59 PM on Tuesday,December 6.Assignment SpecificationsYou will develop “Student” and “Grade” classes and implement all the methods described in thefollowing section.You will demonstrate that your implementation of the classes are correct by developing a programwhich serves as a test bed for that class.You will develop an application program which uses those classes to read “students.txt” and “grades.txt”files and store their data in instances of Student and Grade classes.Assignment DeliverablesThe deliverables for this assignment are the following files:classes.py – the source code for your Student and Grade classesproj11-test.py – the source code for your test programproj11-app.py – the source code for your application programBe sure to use the specified file names and submit them for grading via the handin system before theproject deadline.Specifications for Class Grade1. The constructor (method init) will accept 3 values as parameters, name of theassignment (string), grade and assignment weight (floats). All three parameters must havedefault values—you choose appropriate ones. Also, the attributes cannot be private because youneed to access them in the Student class. That is, do not use double underscores in your names,i.e. do not use an attribute name such as self.name.2. The string method (str) and representation method (repr) should return a stringthat includes the name, grade and weight of the Grade object in one line.Specifications for Class Student1. The constructor (method init) will accept 4 values as parameters, student id (int), firstname (string), last name (string), and a list of all the grade objects for that student. All threeparameters must have default values—you choose appropriate ones, but the appropriate defaultvalue for a list parameter is None, not an empty list ([]).2. add_grade method should take a Grade object as a parameter and append it to a list of gradesfor that student.3. calculate_grade should multiply all the grade points of the student by their weight andreturn the final course grade. (Each Grade object in the list has a value and weight that should bemultiplied together. The sum of all the calculations results the final weighted grade of the studentin the course)4. The string method (str) and representation method (repr) should return a stringthat has the student’s name (with last name first with a comma between the last name and firstname) includes all the grades of the student. This method must call the str method of theGrade objects. Note that implicitly calling the str method is fine such as str() orformat(), but do not access the individual attributes such as grade.name.5. gt, lt and eq methods should compare the final grades of two studentstogether.Note that you can use calculate_grade method to calculate the final grade of two students.Never use “==” to check for equality of two float numbers (because floats are approximationsof real numbers). Instead, find the absolute value of the difference of two numbers; if thedifference is less than epsilon (a very small number such as 10**-6), the floats are equal toeach other (that is they are close enough to consider them to be equal). Python has an absolutevalue function: abs()Please note that you may wish to use function “print” to display various items as you are developingyour implementation of the class. However, all invocations of function “print” must be removed fromthe final version of your classes (or at least turned into comments).Hint: check the “Student” class in page 546 of the book for reference.Specifications for the Test Program1. You will develop a program to serve as a test bed for classes. That is, the only purpose of theprogram is to demonstrate that each method of your “Student” and “Grade” classes is implementedcorrectly. The source code for your test bed will be contained in the file named “proj11-test.py”. Thatfile will import “classes.py”. A file named “proj11-test.py” is provided as a starting template.2. Your test bed will not perform any input operations. Instead, all test cases will be embedded in theprogram itself.3. The output produced by your test bed must be appropriately labeled so that the reader can understandthe purpose and result of each test case without examining the source code. For example, whendemonstrating lt you might print “Demonstrating Fred &lt; Mary” followed byprint(Fred&lt;Mary)Specifications for the Application Program1. You will develop an application program which uses both classes to solve the problem describedbelow.The source code for your application program will be contained in the file named “proj11-app.py”. Thatfile will import “classes.py”.2. The program will attempt to access the files named “students.txt” and “grades.txt”. If any of theinput files cannot be opened, the program will display an appropriate message and halt. (Since the firstposted version of this document didn’t specify that the program must prompt for these two file names,you have the option of prompting for them or not. However, if you prompt for them, our test programwill provide the name grades.txt to the first prompt and students.txt to the second prompt.)3. The grades.txt file will contain three or more lines. The first line contains the weight of eachassignment, the second line contains the labels and the name of the assignments. Line 3 and subsequentlines contain grade information for a student. Each line has a student id and all the grades of a student.The information of each assignment should be stored in an instance of “Grade” class. A list of Gradeobjects should be passed to the constructor of “Student” class.4. The students.txt file will contain one or more lines, where each line contains the information of astudent. Each line has an id, first name and last name. That information should be stored in an instanceof “Student” class along with the list of “Grade” objects explained above.5. The application should store all “Student” objects in a list and should print them ( print(student) ) likethe sample output provided below.6. The application should print the class average at the end.Assignment Notes1. You would be wise to develop your implementation of “Student” and “Grade” classes and your testprogram incrementally and in parallel. That is, implement one class method at a time and then test thatmethod by adding statements to your test program.Clearly, the first class method which must be implemented and tested is the constructor (init).Perhaps the second class method to implement and test is str__ so that you have a way to displaythe value of an object of type “Student” and “Grade” using function “print”.After implementing and testing those methods, you would continue to implement and test one method ata time until you have completed the class.Be sure to insert and test any necessary error handling at the appropriate time.2. Approximately 60% of the 55 points available for the project will be allocated to the implementationof “Student” and “Grade” classes, approximately 15% will be allocated to the test program, andapproximately 25% will be allocated to the application program.Sample Output (Application file)Hopper, Graceproj01 : 75% 0.07proj02 : 81% 0.08proj03 : 91% 0.10proj04 : 87% 0.10proj05 : 73% 0.15exam01 : 90% 0.20exam02 : 86% 0.30Final grade: 84%Knuth, Donaldproj01 : 79% 0.07proj02 : 73% 0.08proj03 : 83% 0.10proj04 : 87% 0.10proj05 : 82% 0.15exam01 : 97% 0.20exam02 : 99% 0.30Final grade: 89%Goldberg, Adeleproj01 : 92% 0.07proj02 : 82% 0.08proj03 : 92% 0.10proj04 : 83% 0.10proj05 : 96% 0.15exam01 : 92% 0.20exam02 : 93% 0.30Final grade: 91%Kernighan, Brianproj01 : 77% 0.07proj02 : 95% 0.08proj03 : 98% 0.10proj04 : 87% 0.10proj05 : 87% 0.15exam01 : 85% 0.20exam02 : 82% 0.30Final grade: 86%Liskov, Barbaraproj01 : 72% 0.07proj02 : 82% 0.08proj03 : 98% 0.10proj04 : 90% 0.10proj05 : 75% 0.15exam01 : 98% 0.20exam02 : 94% 0.30Final grade: 89%The class average is 88.17%========================================Educational ResearchWhen you have completed the project insert the 5-line comment specified below.For each of the following statements, please respond with how much they apply to your experiencecompleting the programming project, on the following scale:1 = Strongly disagree / Not true of me at all234 = Neither agree nor disagree / Somewhat true of me567 = Strongly agree / Extremely true of mePlease note that your responses to these questions will not affect your project grade, so pleaseanswer as honestly as possible.Q1: Upon completing the project, I felt proud/accomplishedQ2: While working on the project, I often felt frustrated/annoyedQ3: While working on the project, I felt inadequate/stupidQ4: Considering the difficulty of this course, the teacher, and my skills, I think I will do well inthis course.Please insert your answers into the bottom of your project program as a comment, formatted exactly asfollows (so we can write a program to extract them).# Questions# Q1: 5# Q2: 3# Q3: 4# Q4: 6","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"C++代写 Assignment 2","slug":"page81","date":"2016-12-30T03:13:46.000Z","updated":"2017-01-12T04:47:57.524Z","comments":true,"path":"2016/12/30/page81/","link":"","permalink":"http://yoursite.com/2016/12/30/page81/","excerpt":"","text":"Introduction用c++完成一个关于机器学习的基础知识，使用数据结构map，功能包括数据清理，填充dictionary 训练数据，情感分析等等，最后输出结果RequirementAssignment 2Due:​​ Oct 14th (Friday) before 11:59 PM1. Learning GoalsLearn how to1. use associative containers like ​std::unordered_set​ and ​std::unordered_map2. use iterators to iterate through associative containers3. use ​algorithms​ that are available in the C++ Standard Library4. pass command line arguments to a C++ program5. partition a C++ program in header files (.hpp) and source files (.cpp)6. read, understand, and use code written by other people2. DescriptionIn this assignment you’ll be doing the following:1. Read a raw text file containing movie reviews and ratings.2. Remove the punctuations and stopwords (e.g. is, and, the, etc.) from the reviews andwrite the contents to a clean review file.3. Associate a value for all words found in the clean reviews based on the average rating ofthe word.4. Using the map between the words and their associated values, rate reviews fromanother file that doesn’t have any rating already.5. Write the ratings of the reviews to an output file.2.1. Clean the dataThe raw data with the reviews and the rating will be present in a file namedrawReviewRatings.txt​. Every review is given a rating between 0 - 4 (both inclusive). Thefollowing are interpretation of the rating values:● 0 = Negative● 1 = Somewhat Negative● 2 = Neutral● 3 = Somewhat Positive● 4 = PositiveEach line of review follows the following format: Example:4 The Jungle Book is awesome!CS 368 (C++) - Fall 2016Adalbert ​Gerald​​ Soosai Rajwhere 4 is the rating and the text “The Jungle Book is awesome!” is the review.Now, your first task is to read the contents of this file and ​clean the data!The following steps needs to be performed in the same order for cleaning the data:1. Read the raw reviews from an input file. e.g. ​rawReviewRatings.txt2. Replace the hyphens in every line of text with spaces.e.g. If the review contains the word “awe-inspiring”, then it should be split into 2 wordsnamely “awe” and “inspiring”3. Split each line of text into multiple words using the space character as the delimiter.e.g. “The Jungle Book is awesome!” becomes | “The” | “Jungle” | “Book” | “is” |“awesome!” |4. Remove the punctuation marks from the words.e.g. “awesome!” becomes “awesome” and “!” becomes “”5. If there are any trailing/leading whitespaces, then remove them. Remember that thespace character (‘ ’), tab (‘\\t’), newline (‘\\n’), etc. are considered as whitespaces. For acomplete list of whitespace characters ​this​.e.g. “zootopia ” becomes “zootopia”, “hello\\t” becomes “hello”, and “world\\n” becomes“world”6. Remove the empty words. i.e. words with length == 0.7. Remove single lettered words. i.e. words with length == 1.8. Remove stopwords. e.g. is, and, the, etc. The list of stopwords can be found in the filestopwords.txt9. Write the contents of the clean data to a file named ​cleanReviewRatings.txt​.2.2. Fill the dictionaryUsing the ​cleanReviewRatings.txt file, create a map/dictionary for every word that is found inthis file. The dictionary is of type​std::unordered_map","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写 Assignment 2","slug":"page80","date":"2016-12-30T03:13:46.000Z","updated":"2017-01-12T04:47:57.524Z","comments":true,"path":"2016/12/30/page80/","link":"","permalink":"http://yoursite.com/2016/12/30/page80/","excerpt":"","text":"Introduction用c++完成一个关于机器学习的基础知识，使用数据结构map，功能包括数据清理，填充dictionary 训练数据，情感分析等等，最后输出结果RequirementAssignment 2Due:​​ Oct 14th (Friday) before 11:59 PM1. Learning GoalsLearn how to1. use associative containers like ​std::unordered_set​ and ​std::unordered_map2. use iterators to iterate through associative containers3. use ​algorithms​ that are available in the C++ Standard Library4. pass command line arguments to a C++ program5. partition a C++ program in header files (.hpp) and source files (.cpp)6. read, understand, and use code written by other people2. DescriptionIn this assignment you’ll be doing the following:1. Read a raw text file containing movie reviews and ratings.2. Remove the punctuations and stopwords (e.g. is, and, the, etc.) from the reviews andwrite the contents to a clean review file.3. Associate a value for all words found in the clean reviews based on the average rating ofthe word.4. Using the map between the words and their associated values, rate reviews fromanother file that doesn’t have any rating already.5. Write the ratings of the reviews to an output file.2.1. Clean the dataThe raw data with the reviews and the rating will be present in a file namedrawReviewRatings.txt​. Every review is given a rating between 0 - 4 (both inclusive). Thefollowing are interpretation of the rating values:● 0 = Negative● 1 = Somewhat Negative● 2 = Neutral● 3 = Somewhat Positive● 4 = PositiveEach line of review follows the following format: Example:4 The Jungle Book is awesome!CS 368 (C++) - Fall 2016Adalbert ​Gerald​​ Soosai Rajwhere 4 is the rating and the text “The Jungle Book is awesome!” is the review.Now, your first task is to read the contents of this file and ​clean the data!The following steps needs to be performed in the same order for cleaning the data:1. Read the raw reviews from an input file. e.g. ​rawReviewRatings.txt2. Replace the hyphens in every line of text with spaces.e.g. If the review contains the word “awe-inspiring”, then it should be split into 2 wordsnamely “awe” and “inspiring”3. Split each line of text into multiple words using the space character as the delimiter.e.g. “The Jungle Book is awesome!” becomes | “The” | “Jungle” | “Book” | “is” |“awesome!” |4. Remove the punctuation marks from the words.e.g. “awesome!” becomes “awesome” and “!” becomes “”5. If there are any trailing/leading whitespaces, then remove them. Remember that thespace character (‘ ’), tab (‘\\t’), newline (‘\\n’), etc. are considered as whitespaces. For acomplete list of whitespace characters ​this​.e.g. “zootopia ” becomes “zootopia”, “hello\\t” becomes “hello”, and “world\\n” becomes“world”6. Remove the empty words. i.e. words with length == 0.7. Remove single lettered words. i.e. words with length == 1.8. Remove stopwords. e.g. is, and, the, etc. The list of stopwords can be found in the filestopwords.txt9. Write the contents of the clean data to a file named ​cleanReviewRatings.txt​.2.2. Fill the dictionaryUsing the ​cleanReviewRatings.txt file, create a map/dictionary for every word that is found inthis file. The dictionary is of type​std::unordered_map","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写 A Simple Student Management System","slug":"page79","date":"2016-12-29T04:43:26.000Z","updated":"2017-01-12T03:53:26.077Z","comments":true,"path":"2016/12/29/page79/","link":"","permalink":"http://yoursite.com/2016/12/29/page79/","excerpt":"","text":"Introduction完成一个简单的学生管理系统，包括增删改查学信息的功能，保存到数据库，统计和记录学生成绩等等相关操作，输入java入门级的作业RequirementFIT9131 Semester 2 2016 Assignment 214 September 2016 1A Simple Student Management SystemDue Date : 12 noon on Friday in Week 12 (21st Oct 2016)IntroductionThis assignment is worth 25% of the marks for your final assessment in this unit. Heavy penalties willapply for late submission. This is an individual assignment and must be entirely your own work. You mustattribute the source of any part of your code which you have not written yourself. Please note the section onplagiarism in this document.The assignment must be done using the BlueJ environment. All user input to the system, and systemoutput to the user, must be done at the BlueJ terminal window. No other graphical interfaces are to beused (nor assessed) in your program.The Java source code for this assignment must be implemented according to the FIT9131 Java CodingStandards.Any points needing clarification should be discussed with your tutor in the tutorial class. You should notmake any assumptions about the program without consulting with your tutor.SpecificationFor this assignment you are required to write a program that implements a simple Student ManagementSystem for a very small, fictional, school. This section specifies the required functionality of the program.The aim of the Student Management System is for a user (the school’s enrolment staff) to keep a database ofthe students enrolled in various subjects in this fictional school. This school only offers three (3) subjects :Computing, Maths, and English. The system will allow the user to add/delete students, enrol them insubjects, and perform simple reports.Even though this program is functionally very different from the program you wrote in Assignment 1, youshould be able to re-use much of your previous code here - if you have designed the classes/logic in yourprevious program properly. This is one of the major benefits of an object-oriented program - the ability tore-use classes.The Student Management System should provide the following features : maintains a list (using a Java Collection class) of Student objectso each Student object represents a person who is allowed to enrol in the fictional school maintains a fixed list of exactly 3 Subject objectso each Subject object represents a subject which is available in the fictional schoolFIT9131 Semester 2 2016 Assignment 214 September 2016 2 enrol each student in a subject, or subjects (HD level) lists the details of an existing student produces a report of students based on some criteria loads a list of students (with their enrolled subjects) from a text file saves the list of current students (with their enrolled subjects) to a text fileYou are to demonstrate the following programming techniques in your program : reading/writing data from/to text files using appropriate Java Collection class or classes to store data using code to manipulate the data in the collection(s) performing simple searches, filtered by some given criteria using program constructs such as repetitions &amp; selections using appropriate classes to represent objects in the programThere will be a description of the “HD level” features later in this document (in the Grades section).You are also required to produce a partial Test Strategy for your program.FIT9131 Semester 2 2016 Assignment 214 September 2016 3Program LogicWhen the Student Management System starts, it should automatically load a text file called“students.txt” which contains details of all students currently stored in the system. The actual formatof this text file is described later in this document. The data loaded should be stored in some appropriate datastructures. No other reading from or writing to file is required while the program is in operation, until theuser chooses to exit, at which point the program saves all the data in memory back to the same text file(students.txt).In other words, the file I/O operations are performed automatically by the program, and require nointeractions with the user.When the program is running, it should repeatedly display a menu with these options :(1) Add new student(2) Delete a student(3) Find Student By Name(4) List Students By Subject(5) List All Students(6) Exit SystemOption (1) allows the user to add a new student into the database. The user should be asked for the student’sdetails, plus what subject to “enrol” him/her in.Option (2) allows the user to remove an existing student from the database.Option (3) allows the user to find an existing student in the database. The user should be asked to enter aname to search for. If a matching student is found, his/her details will be displayed.Option (4) allows the user to display a list of students enrolled in a subject. The user should be asked for asubject name; a list of all students (if any) enrolled in that subject should then be displayed.Option (5) allows the user to display a list of all students enrolled in the school.Option (6) exits the program. All the students currently in memory are automatically saved to“students.txt”.Inputs other than 1-6 should be rejected, and an error message printed. The menu should be displayedrepeatedly, until the user chooses Option (6).FIT9131 Semester 2 2016 Assignment 214 September 2016 4Important AssumptionsYou should observe the following assumptions when implementing your program : all student names are unique - if a student is already in the database, trying to add the same nameagain should generate an error there is no limit to how many students can be enrolled exactly 3 subjects are offered : Computing, Maths and English each student can only enrol in exactly one subject all searches use exact matches (eg. “andy” will not match “andy cheng”); however, the searchstrings are not case-sensitive (eg. “Sue Smith” is considered to be the same as “SUE smith”) the data file is always in the correct format - ie. no need to validate the data when reading it inStudent Record FormatEach student in the database contains the following information : Name (non-blank String, may contain multiple words) Telephone (non-blank String, exactly 9 digits, 1st digit must be a ‘9’) Subject (a String, representing one of the 3 subjects offered)Input File FormatThe input data file (students.txt) has the following format for each line :Name,Telephone,Subject (the fields are separated by commas)Eg.David Smith,912345678,MathsAndy Cheng,987654321,ComputingSusan Dally,911221122,EnglishZak Whatever,999999999,MathsRussell Crowe,980808080,ComputingFIT9131 Semester 2 2016 Assignment 214 September 2016 5Program DesignYour program must demonstrate your understanding of the object-oriented concepts and generalprogramming constructs presented in FIT9131. You must use appropriate data structures to store the variousobjects (list of students, list of subjects, etc) in the program.You must be able to justify the choice of the data structures during your interview. You must document anyadditional assumptions you made.Validation of values for fields and local variables should also be implemented. You should not allow anobject of a class to be set to an invalid state.Discuss with your tutor regarding what classes are appropriate, and how they interact with each other.The main requirements are : (1) the Students and Subjects must be implemented as objects, and they mustbe stored in some appropriate Java collections, and (2) for the HD level , the list of Subjects within eachStudent object must also be stored in some appropriate Java collections.Your program must deal with invalid values entered by the user in a sensible manner. For instance, if a userenters “abc” instead of a number for the menu options, your program should not crash.All on-screen input/output should be formatted in a user-friendly manner. Sensible error messages should bedisplayed whenever appropriate (eg. when searching for a student who is not in the database, trying to enrolstudent in a subject which does not exist, etc).GradesThere are 2 possible Grade Categories for this assignment, as described below :1) A maximum grade of up to a D (Distinction) can be achieved by correctly implementing all thefeatures as described in the “Program Logic” section above.2) To achieve up to a maximum of a HD (High Distinction), you need to implement the followingadditional features : for Option (1), a student can be enrolled in up to a maximum of 3 unique subjects for Option (4), the user can specify more than 1 subject, and the program will display allstudents listed in those subjects (eg. all students enrolled in both “Computing” AND “English”,all students enrolled in “Computing” AND “Maths” AND “English”, etc)Note : The description of the program’s logic/design is intentionally left vague, to give you some roomto exercise your own design and creativity. Discuss with your tutor about what/how to implement.Important : You must not attempt the HD Category until you have fully implemented the DCategory. If you submit a program which partially implements both, you will only be awarded upto a maximum of D.FIT9131 Semester 2 2016 Assignment 214 September 2016 6Test StrategyFor this assignment, you are required to produce a partial Test Strategy for the program.There is no need to produce Test Strategy for any other classes you have used in your program.You must provide a Test Plan, plus detailed sets of Test Data, Expected Results and Actual Results for theStudent class.AssessmentAssessment for this assignment will be done via an interview with your tutor. The marks will be allocated asfollows: Test Strategy : 10% Java Code &amp; Object-Oriented Design : 35% Program Functionality in accordance with the requirements : 55%You must submit your work by the submission deadline on the due date (a late penalty of 20% per day ofthe possible marks will apply).Marks will be deducted for untidy submissions and non-conformances to the FIT9131 Java CodingStandards.InterviewYou will be asked to demonstrate your program at an interview following the submission date. At theinterview you can also expect to be asked to explain your code, your design, discuss design decisions andalternatives and modify your code as required. Marks will not be awarded for any section of code orfunctionality that a student cannot explain satisfactorily. (The marker may delete excessive comments incode before a student is asked to explain that code).In other words, you will be assessed on your understanding of the code, and not on the actual code itself.Interview times will be arranged in the tutorial labs in Week 12. It is your responsibility to attend the lab andarrange an interview time with your tutor. Any student who does not attend an interview will receive a markof 0 for the assignment.The actual interviews will take place in Week 13.Your Test Strategy will be only for one class - the Student class.FIT9131 Semester 2 2016 Assignment 214 September 2016 7Submission RequirementsThe assignment must be uploaded to Moodle on or before the due date. The link to upload the assignmentwill be made available in the Assignments section of the unit’s Moodle site before the submission deadline.The submission requirements are as follows:A .zip file uploaded to Moodle containing the following components: the BlueJ project you created to implement your assignment. The .zip should be named with yourStudent ID Number. For example, if your id is 12345678, then the file should be named12345678_A2.zip. Do not name your file any other way. it is your responsibility to check that your ZIP file contains all the correct files, and is not corrupted,before you submit it. If you tutor cannot open your zip file, or if it does not contain the correct files,you will not be assessed. an MS Word document containing your Test Strategy for the Student class. (Note: The JUnit facility inBlueJ is NOT to be used for this assignment) a completed Assignment Cover Sheet. This will be available for download from the unit’s Moodle sitebefore the submission deadline. You simply complete the editable sections of the document, save it, andinclude it in your .zip file for submission.Marks will be deducted for failure to comply with any of these requirements.Warning : there will be no extensions to the due date. Any late submission will incur the 20% per daypenalty. It is strongly suggested that you submit the assignment well before the deadline, in case there aresome unexpected complications on the day (eg. interruptions to your home internet connection).PlagiarismCheating and plagiarism are viewed as serious offences. In cases where cheating has been confirmed,students have been severely penalised, from losing all marks for an assignment, to facing disciplinary actionat the Faculty level. Monash has several policies in relation to these offences and it is your responsibility toacquaint yourself with these.Plagiarism (http://www.policy.monash.edu/policybank/academic/education/conduct/plagiarism-policy.html)Discipline: Student Policy (http://www.policy.monash.edu/policy-bank/academic/education/conduct/student-discipline-policy.html","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写 Programming Assignment 2  Link State Routing","slug":"page78","date":"2016-12-28T04:12:34.000Z","updated":"2017-01-12T03:49:18.869Z","comments":true,"path":"2016/12/28/page78/","link":"","permalink":"http://yoursite.com/2016/12/28/page78/","excerpt":"","text":"Introductionjava的网络编程，完成状态路由协议，本题主要考察java基础，网络编程基础，设计路由协议，Dijkstra’s算法，UDP套接字协议，动态路由等等知识，分为2个partRequirementCOMP 3331/9331: Computer Networks &amp; ApplicationsProgramming Assignment 2: Link State RoutingDue Date: 28 Oct 2016, 11:59 pm (Week 13) Marks: 10 + 1 bonus1. Change LogVersion 1.0 released on 19 th September 2016.2. Goal and Learning ObjectivesIn this assignment your task is to implement the link state routing protocol. Your program will berunning at all nodes in the specified network. At each node the input to your program is a set ofdirectly attached nodes (i.e. neighbours) and the costs of these links. Each node will broadcastlink-state packets to all other nodes in the network. Your routing program at each node shouldreport the least-cost path and the associated cost to all other nodes in the network. Your programshould be able to deal with failed nodes.2.1 Learning ObjectivesOn completing this assignment you will gain sufficient expertise in the following skills:• Designing a routing protocol• Link state (Dijkstra’s) algorithm• UDP socket programming• Handling routing dynamics3. Assignment SpecificationThis section gives detailed specifications of the assignment. You can receive 1 bonus mark forsubmitting the assignment 1 week prior to the deadline.3.1 Implementation DetailsIn this assignment, you will implement the link state routing protocol.The program will accept the following command line arguments:• NODE_ID, the ID for this node. This argument must be a single uppercase alphabet (e.g., A,B, etc).• NODE_PORT, the port number on which this node will send and receive packets to and fromits neighbours.Updates to the assignment, including any corrections and clarifications, will be posted on thesubject website. Please make sure that you check the subject website regularly for updates.• CONFIG.TXT, this file will contain the costs to the neighbouring nodes. It will also containthe port number being used by each neighbour for exchanging routing packets. An example ofthis file is provided below.Since we can’t let you play with real network routers, the routing programs for all the nodes in thesimulated network will run on a single desktop machine. However, each instance of the routingprotocol (corresponding to each node in the network) will be listening on a different port number.If your routing software executes correctly on a single desktop machine, it should also workcorrectly on real network routers. Note that, the terms router and node are used interchangeably inthe rest of this specification.Assume that the routing protocol is being instantiated for a node A, with two neighbours B and C.A simple example of how the routing program would be executed (assuming it is a Java programnamed Lsr.java) follows:java Lsr A 2000 config.txtwhere the config.txt would be as follows:2B 5 2001C 7 2002The first line of this file indicates the number of neighbours (NOT the total number of nodes in thenetwork). Following this there is one line dedicated to each neighbour. It starts with the neighbourid, followed by the cost to reach this neighbour and finally the port number that this neighbour isusing for communication. For example, the second line in the config.txt above indicates that thecost to neighbour B is 5 and this neighbour is using port number 2001 for receiving andtransmitting link-state packets. The node ids will be uppercase alphabets and you can assume thatthere will be no more than 10 nodes in the test scenarios. However, do not make assumptions thatthe node ids will necessarily start from the letter A or that they will always be in sequence. Thelink costs should be floating point numbers (up to the first decimal) and the port numbers shouldbe integers. These three fields will be separated by a single white space between two successivefields in each line of the configuration file. The link costs will be static and will not change onceinitialised. Further, the link costs will be consistent in both directions, i.e., if the cost from A to Bis 5, then the link from B to A will also have a cost of 5. You may assume that the configurationfiles used for marking will be consistent with the above description and devoid of any errors.Important: It is worth restating that initially each node is only aware of the costs to its directneighbours. The nodes do not have global knowledge (i.e. information about the entire networktopology) at start-up.The remainder of the specification is divided into two parts, beginning with the base specificationas the first part and the subsequent part adding new functionality to the base specification. In orderto receive full marks for this assignment you must implement both parts. If you are unable tocomplete the second part, you will still receive marks for the first part. (The marking guidelines atthe end of the specification indicate the distribution of marks).Part 1: Base SpecificationIn link-state routing, each node broadcasts link-state packets to all other nodes in the network, witheach link-state packet containing the identities of the node’s neighbours and the associated costs toreach them. You must implement a simple broadcasting mechanism in your program. Uponinitialisation, each node creates a link-state packet (containing the appropriate information – seedescription of link-state protocol in the textbook/lecture notes) and sends this packet to all directneighbours. The exact format of the link-state packets that you will use is left for you to decide.Upon receiving this link-state packet, each neighbouring router in turn broadcasts this packet to itsown neighbours (excluding the router from which it received this link-state packet in the firstplace). This simple flooding mechanism will ensure that each link-state packet is propagatedthrough the entire network.It is possible that some nodes may start earlier than their neighbours. As a result, a node mightsend the link-state packet to a neighbour, which has not run yet. You should not worry about thissince the routing program at each node will repeatedly send the link-state packet to its neighboursand a slow-starting neighbour will eventually get the information. That said, when we test yourassignment, we would ensure that all nodes are initiated simultaneously (using a script).Each node should periodically broadcast the link-state packet to its neighbours everyUPDATE_INTERVAL. You should set this interval to 1 second. In other words, a node shouldbroadcast a link state packet every second.Real routing protocols use UDP for exchanging control packets. Hence, you MUST use UDP asthe transport protocol for exchanging link-state packets amongst the neighbours. Note that, eachrouter can consult its configuration file to determine the port numbers used by its neighbours forexchanging link-state packets. Do not worry about the unreliable nature of UDP. Since, you aresimulating multiple routers on a single machine, it is highly unlikely that link-state packets will bedropped. Furthermore, since link-state packets are broadcast periodically, occasional packet losswill not impact the operation of your protocol. If you use TCP, a significant penalty will beassessed.On receiving link-state packets from all other nodes, a router can build up a global view of thenetwork topology. You may want to review your class notes and consult standard data structurestextbooks for standard representations of undirected graphs, which would be an appropriate way tomodel this view of the network.Given a view of the entire network topology, a router should run Dijkstra’s algorithm to computeleast-cost paths to all other routers within the network. Each node should wait for aROUTE_UPDATE_INTERVAL (the default value is 30 seconds) since start-up and then executeDijkstra’s algorithm. Given that there will be no more than 10 nodes in the network and a periodiclink-state broadcast frequency of 1 second, 30 seconds is a sufficiently long duration for each nodeto discover the global view of the entire topology.Once a router finishes running Dijkstra’s algorithm, it should print out to the terminal, the least-cost path to each destination node (excluding itself) along with the cost of this path. The followingis an example output for node A in some arbitrary network:least-cost path to node B: ACB and the cost is 10least-cost path to node C: AC and the cost is 2.5We will wait for duration of ROUTE_UPDATE_INTERVAL after running your program for theoutput to appear (some extra time will be added as a buffer). If the output does not appear withinthis time, you will be heavily penalised. As indicated earlier, we will restrict the size of thenetwork to 10 nodes in the test topologies. The default value of 30 seconds is sufficiently long forall the nodes to receive link-state packets from every other node and compute the least-cost paths.Your program should execute forever (as a loop). In other words, each node should keepbroadcasting link-state packets every UPDATE_INTERVAL and Dijkstra’s algorithm should beexecuted and the output printed out every ROUTE_UPDATE_INTERVAL. To kill an instance ofthe routing protocol, the user should type CTRL-C at the respective terminal.Restricting Link-state Broadcasts: Note that, a naïve broadcast strategy; wherein each noderetransmits every link state packet that it receives will result in unnecessary broadcasts and thusincrease the overhead. To elaborate this issue, consider the example topology discussed in thelatter part of the spec. The link-state packet created by node A will be sent to its direct neighboursB, C and D. Each of these three nodes will in turn broadcast this link-state packet to theirneighbours. Let us consider Node C, which broadcasts A’s link state packet to B, D, E and F. Notethat node B has already broadcast A’s link state packet once (when it received it directly from A).Node B has now received this same link-state packet via node C. There should thus be no need fornode B to broadcast this packet again. You MUST implement a mechanism to reduce suchunnecessary broadcasts. This can be achieved in several ways. You are open to choose any methodto achieve this. You must describe your method in the written report.Part 2: Dealing with Node FailuresIn this part you must implement additional functionality in your code to deal with random nodefailures. Recall that in the base assignment specification it is assumed that once all nodes are upand running they will continue to be operational till the end when all nodes are terminatedsimultaneously. In this part you must ensure that your algorithm is robust to node failures. Once anode fails, its neighbours must quickly be able to detect this and the corresponding links to thisfailed node must be removed. Further, the routing protocol should converge and the failed nodesshould be excluded from the least-cost path computations. The other nodes should no longercompute least-cost paths to the failed nodes. Furthermore, the failed nodes should not be includedin the least-cost paths to other nodes.A simple method that is often used to detect node failures is the use of periodic heartbeat (alsooften known as keep alive) messages. A heartbeat message is a short control message, which isperiodically sent by a node to its directly connected neighbours. If a node does not receive acertain number of consecutive hearbeat messages from one of its neighbours it can assume thatthis node has failed. Note that, each node transmits a link-state packet to its immediate neighbourevery UPDATE_INTERVAL (1 second). Hence, this distance vector message could also doubleup as the hearbeat message. Alternately, you may wish to make use of an explicit heartbeatmessage (over UDP), which is transmitted more frequently (i.e. with a period less than 1 second)to expedite the detection of a failed node. It is recommended that you wait till at least 3 consequenthearbeat (or link-state) messages are not received from a neighbour before considering it to havefailed. This will ensure that if at all a UDP packet is lost then it does not hamper the operation ofyour protocol.Once a node has detected that one of its neighbours has failed, it should update its link-state packetaccordingly to reflect the change in the local topology. Eventually, via the propagation of theupdated link-state packets, other nodes in the network will become aware that the failed node isunreachable and it will be excluded from the link-state computations (i.e. Dijkstra’s algorithm).Once a node has failed, you may assume that it cannot be initialised again.While marking, we will only fail a few nodes, so that a reasonable connected topology is stillmaintained. Furthermore, care will be taken to ensure that the network does not get partitioned. Ina typical topology (recall that the largest topology used for testing will consist of 10 nodes), atmost 3 nodes will fail. However, note that the nodes do not have to fail simultaneously.Recall that each node will execute Dijkstra’s algorithm periodically afterROUTE_UPDATE_INTERVAL (30 seconds) to compute the least-cost path to every otherdestination. It may so happen that the updated link-state packets following a node failure may nothave reached certain nodes in the network before this interval expires. As a result, these nodes willuse the old topology information (prior to node failure) to compute the least-cost paths. Thus theoutput at these nodes will be incorrect. This is not an error. It is just an artefact of the delayincurred in propagating the updated link-state information. To account for this, it is necessary towait for at least two consecutive ROUTE_UPDATE_INTERVAL periods (i.e. 1 minute) after thenode failure is initiated. This will ensure that all the nodes are aware of the topology change.While marking, we will wait for 2ROUTE_UPDATE_INTERVAL following a node failurebefore checking the output.3.2. An ExampleLet us look at an example with the network topology as shown in the figure below:The numbers alongside the links indicate the link costs. The configuration files for the 6 nodes areavailable for download from the assignment webpage. In the configuration files we have assumedthe following port assignments: A at 2000, B at 2001, C at 2002, D at 2003, E at 2004 and F at2005. However note that some of these ports may be in use by another student logged on to thesame CSE machine as you. In this case, change the port assignments in all the configuration filesappropriately. The program output at node A should look like the following:least-cost path to node B: AB and the cost is 2.0least-cost path to node C: ADEC and the cost is 3.0least-cost path to node D: AD and the cost is 1.0least-cost path to node E: ADE and the cost is 2.0least-cost path to node F: ADEF and the cost is 4.0Note: It is not necessary that your program should print the paths to the destinations inalphabetical order.You may also test out the ability of your program to deal with node failures in the above exampleby causing node B to fail (as an example).Please ensure that before you submit, your program provides a similar output for the abovetopology. However, we will use different network topologies in our testing.4. Additional NotesThis is not a group assignment. You are expected to work on this individually.How to start: Sample UDP client and server programs are available on the Week 3 lecturematerial page. They are a good starting point to start your development. You will also find severallinks to network programming resources on that page.ADB CEF2251113253Language and Platform: You are free to use one of C, JAVA or Python to implement thisassignment. Please choose a language that you are comfortable with. The programs will be testedon CSE Linux machines. So please make sure that your entire application runs correctly on thesemachines. This is especially important if you plan to develop and test the programs on yourpersonal computers (which may possibly use a different OS or version or JVM). Note that CSEmachines support the following: gcc version 4.9.2, Java 1.7, Python 2.7, 2.8 and 3. Note forPython: In your report, please indicate which version of Python you have used. You may only usethe basic socket programming APIs providing in your programming language of choice. Note that,the network will be simulated by running multiple instances of your program on the same machinewith a different port number for each node. Make sure that your program will work appropriatelyunder these conditions. See the sequence of operations listed below for details.Error Condition: Note that all the arguments supplied to the programs will be in the appropriateformat. The configuration files supplied as an argument to each node will also be consistent withthe test topology. Your programs do not have to handle errors in format, etc.You should be aware that port ID’s, when bound to sockets, are system-wide values and thus otherstudents may be using the port number you are trying to use. On Linux systems, you can run thecommand netstat to see which port numbers are currently assigned.Do not worry about the reliability of UDP in your assignment. It is possible for packets to bedropped, for example, but the chances of problems occurring in a local area network are fairlysmall. If it does happen on the rare occasion, that is fine. Further, your routing protocol isinherently robust against occasional losses since the link state packets are exchanged every 1second. If your program appears to be losing or corrupting packets on a regular basis, then there islikely a fault in your program.Test your assignment out with several different topologies (besides the sample topology provided).Make sure that your program is robust to node failures by creating several failed nodes (howevermake sure that the topology is still connected). You can very easily work out the least-cost pathsmanually (as shown in the lecture notes or the textbook) to verify the output of your program.5. File Naming Convention and Assignment SubmissionYour main program should be named Lsr.c (or Lsr.java or Lsr.py). You may of course haveadditional header files and/or helper files. If you are using C you MUST submit a makefile/script(not necessary with Java and Python). In addition you should submit a small report, report.pdf(no more than 3 pages) describing the program design and a brief description of how your systemworks. Describe the data structure used to represent the network topology and the link-state packetformat. Comment on how your program deals with node failures and restricts excessive link-statebroadcasts. Also discuss any design tradeoffs considered and made. Describe possibleimprovements and extensions to your program and indicate how you could realise them. If yourprogram does not work under any particular circumstances please report this here. Also indicateany segments of code that you have borrowed from the Web or other books.You do not have to submit any topology files.Here are the step-by-step instructions for submission:1. Log in to your CSE account.2. Create a directory called assign and copy ONLY the necessary files into that directory.3. Tar this directory using the following command: “tar –cvf assign.tar assign”4. Submit your assignment using the following command: “give cs3331 assign2 assign.tar”. Youshould receive a confirmation of your submission.Alternately, you may submit the tar archive via the submission link at the top of the assignmentweb page.Note that, the system will only accept assign.tar as the file name. All other names will be rejected.You can submit as many times as you like before the deadline. A later submission will overridethe previous submission, so make sure you submit the correct version. Do not wait till just beforethe deadline for submission, as there may be unforeseen problems (brief disconnection of Internetconnectivity, power outage, computer crash, etc.).Late Submission Penalty: Late penalty will be applied as follows:• 1 day after deadline: 10% reduction• 2 days after deadline: 20% reduction• 3 days after deadline: 30% reduction• 4 days after deadline: 40% reduction• 5 or more days late: NOT acceptedNOTE: The above penalty is applied to your final total. For example, if you submit yourassignment 2 days late and your score on the assignment is 10, then your final mark will be 10 – 2(20% penalty) = 8.6. PlagiarismYou are to write all of the code for this assignment yourself. All source codes are subject to strictchecks for plagiarism, via highly sophisticated plagiarism detection software. These checks mayinclude comparison with available code from Internet sites and assignments from previoussemesters. In addition, each submission will be checked against all other submissions of thecurrent semester. Do not post this assignment on forums where you can pay programmers to writecode for you. We will be monitoring such forums. Please note that we take this matter quiteseriously. The LIC will decide on appropriate penalty for detected cases of plagiarism. The mostlikely penalty would be to reduce the assignment mark to ZERO.That said, we are aware that a lot of learning takes place in student conversations, and don’t wishto discourage you from taking your classmates, provided you follow the Gilligan’s Island Rule -After a joint discussion of an assignment or problem, each student should discard all writtenmaterial and then go do something mind-numbing for half an hour. For example, go watch anepisode of Gilligan’s Island (or Reality TV in modern terms), and then recreate the solutions. Theidea of this policy is to ensure that you fully understand the solutions or ideas that the group cameup with.It is important, for both those helping others and those being helped, not to provide/accept anyprogramming language code in writing, as this is apt to be used exactly as is, and lead toplagiarism penalties for both the supplier and the copier of the codes. Write something on a pieceof paper, by all means, but tear it up/take it away when the discussion is over. It is OK to borrowbits and pieces of code from sample socket code out on the Web and in books. You MUSThowever acknowledge the source of any borrowed code. This means providing a reference to abook or a URL when the code appears (as comments). Also indicate in your report the portions ofyour code that were borrowed. Explain any modifications you have made (if any) to the borrowedcode.7. Forum UseStudents are strongly recommended to discuss about the assignment on the course forum.However, at no point should any code fragments be posted to the message forum. Such actionswill be considered to be instances of plagiarism, thus incurring a significant penalty. Students arealso encouraged to share example topologies that they have created to test their program.8. Sequence of Operation for TestingThe following shows the sequence of events that will be involved in the testing of yourassignment. Please ensure that before you submit your code you thoroughly check that your codecan execute these operations successfully.1) First chose an arbitrary network topology (similar to the test topology above). Create theappropriate configuration files that need to be input to the nodes. Note again that theconfiguration files should only contain information about the neighbours and not of the entiretopology. Work out the least-cost paths and corresponding costs from each node to all otherdestinations manually using Dijkstra’s algorithm as described in the lecture notes (ortextbook). This will allow you to check that your program is computing the paths correctly.2) Log on to a CSE Linux machine. Open as many terminal windows as the number of nodes inyour test topology. Almost simultaneously, execute the routing protocol for each node (onenode in each terminal).java lsr A 2000 configA.txt (for JAVA)java lsr B 2001 configB.txtand so on. You may write a simple script to automate this process.3) Wait till the nodes display the output at their respective terminals.4) Compare the displayed paths and costs to the ones obtained in step 1 above. These should beconsistent.5) The next step involves testing the capability of your program to deal with failed nodes. For thischoose a few nodes (max of 3 nodes) from the topology that is currently being tested (in theabove tests) and terminate the nodes by typing CTRL-C in their respective terminal windows.Make sure that the nodes chosen for termination do not partition the network. Work out theleast-cost paths from each node to all other destinations manually using Dijkstra’s algorithm asdescribed in the lecture notes (or textbook). Wait for a duration of2ROUTE_UPDATE_INTERVAL and observe the updated output at each node. Corroboratethe results with the manual computations.6) Terminate all nodes.NOTE: We will ensure that your programs are tested multiple times to account for any possibleUDP segment losses (it is quite unlikely that your routing packets will be dropped).9. Marking Policy:We will test your routing protocol for at least 2 different network topologies (which will bedistinct from the example provided). Marks will be deducted if necessary, depending on the extentof the errors observed in the output at each node. After the marking process we will upload the testtopologies on the website for all students to view.Your code will be marked using the following criteria:• Mechanism to restrict link-state broadcasts: 1 marks• Correct operation of the link state protocol: 5.5 marks• Appropriate handling of dead nodes, whereby the least-cost paths are updated to reflect thechange in topology: 2.5 marks• Report: 1 markBonus Mark: You may receive 1 bonus mark for submitting the assignment a week before thedeadline, i.e. by 21 st October 2016 (Week 12). However, to receive the bonus mark, in additionto submitting by the early deadline, your code should have scored at least 7 marks (out of 10) asper the above criteria. The bonus mark can be used to offset lost marks in any assessablecomponent in this course (e.g. mid-semester exam, final exam, labs, etc.).IMPORTANT NOTE: For assignments that fail to execute all of the above tests, we will beunable to award you a substantial mark. Note that, we will test your code multiple times beforeconcluding that there is a problem. You should test your program rigorously and verify the resultsby trying out different topologies before submitting your code.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"Network","slug":"Network","permalink":"http://yoursite.com/tags/Network/"}]},{"title":"C++代写 CS1073  Data Structures and Algorithms","slug":"page77","date":"2016-12-27T04:14:52.000Z","updated":"2017-01-12T03:43:02.129Z","comments":true,"path":"2016/12/27/page77/","link":"","permalink":"http://yoursite.com/2016/12/27/page77/","excerpt":"","text":"Introduction本题是实现一个五子棋的游戏，给了部分模板代码，完成五子棋的游戏逻辑，主要考察c++的基础知识和OOP的设计能力，还有数据结构和算法共分了4个task，难度逐渐递增，然后需要通过自动测试RequirementCompSys202/MechEng270Data Structures and AlgorithmsAssignment #3 (20% of final grade)Due: 11:00am, 21 October 2016Learning outcomesThe purpose of this assignment is to target the following learning outcomes:• Demonstrate a basic understanding of C++ development.• Continue to develop and practice your skills in OOP design.• Practice using data structures and algorithms effectively.• Apply good coding practices such as naming conventions and code style.1 Connect Four!The game of Connect Four is described by Wikipedia as follows:[Connect Four] is a two-player connection game in which the players first choose a color and then take turnsdropping colored discs from the top into a seven-column, six-row vertically suspended grid. The pieces fallstraight down, occupying the next available space within the column. The objective of the game is to connectfour of one’s own discs of the same color next to each other vertically, horizontally, or diagonally before youropponent.In this assignment you will construct a simple game of Connect Four. This game will be played between two humanplayers, and will be played until one player wins or a stalemate is reached. A simple demonstration of the ConnectFour game is displayed in figure 1.2 Tasks2.1 Player Information [Task 1] (15%)2.1.1 Implement the Player ClassThe Player class will store information about each player such as their name and color. A player has threeproperties:• The player’s name, e.g. “Nick”.• The player’s score.• The total number of games won by the player.The player’s name can only be set in the constructor, while the score should be initialized to 0 and can only beincreased by 1 or reset using the methods of the Player class. The total number of games won by a player isinitialized to zero when the Player is constructed, and then can only be increased by 1.Complete the implementation of the Player class as described in the file Player.hpp by adding code to Player.cpp.1(a) The game is createdwith a standard 6 row by7 column grid. At the be-ginning of the game thegame grid is empty. Thetop row of the grid is row0 and the left-most col-umn is column 0.(b) The game starts withplayer one’s turn. In thiscase player one has in-serted a disc (red) intocolumn 3. The disc fallsto the bottom of the gridand stops at row 5.(c) Player two plays theirfirst turn by inserting ayellow disc into column2. The disc falls to thebottom of the grid tocome to rest next to thedisc placed by player one.(d) Player one plays theirnext move, placing a reddisc in column 4.(e) Player two plays theirnext move, inserting ayellow disc in column 3.This disc falls towardsthe bottom of the gridand stops at row 4, whereit is stacked on top of thefirst disc placed by playerone.(f) Player one plays theirnext move, inserting asecond red disc into col-umn 4. This disc falls to-wards the bottom of thegrid, stacking on top ofa previously placed reddisc.(g) Player two plays theirthird move, inserting ayellow disc into column3, where it comes to restin row 3 on top of twoother discs already in-serted into that column.(h) Player one plays theirfourth move, inserting ared disc in column 5 thatfalls to the bottom of thegrid (row 5).(i) Player two plays theirfourth move by insertinga yellow disc into column4 which stops at row 3due to other discs previ-ously inserted into thatcolumn.(j) Player one plays theirfifth move, inserting adisc into column 6. Thisdisc falls to the bottomrow (row 5) and com-pletes a horizontal row offour red discs. Connectfour! Player one wins!Figure 1: A demonstration of the Connect Four game in action.2.1.2 Testing the Player ClassTesting code in this assignment works in a similar way to Assignments 1 and 2. When you are ready to test yourcode, you can compile and run the tests by executing the command make test from the command-line console.The tests for the Player class are already enabled in test.cpp.If you need further information on how to test your code, refer to the testing sections of the assignment briefsfor assignments 1 and 2.2.2 Tracking Player Moves [Task 2] (20%)2.2.1 Implement the Grid ClassThe Grid class is represents the vertically suspended grid into which players insert their colored discs. Each cellof the grid can be represented by a value from the Cell enum declared inside the Grid class. Each cell will eitherbe empty, or hold a disc inserted by one of the two players. The number of cells is determined by the number ofrows and columns in the grid, and your Grid class constructor should allow the creation of a game Grid with anysize greater than 4 rows by 4 columns. In the case where one of the initialized dimensions is smaller than 4, thatdimension should be modified to be exactly 4. For example, if a grid is initialized with 2 rows and 6 columns, itshould be automatically corrected to 4 rows and 6 columns inside the Grid constructor.During a game, discs may be inserted into the Grid by either player using the insertDisc method, which takesa Cell value representing the new disc and a column of the grid that the disc should be inserted into. When a discis inserted into the grid it should be inserted on top of the other discs in the grid, or at the bottom of the grid ifthere are no other discs in that column. This emulates the physical effect of inserting the disc into the grid in aphysical game of Connect Four.To implement the game, other classes will need to be able to access elements in the grid. This information willbe accessed using the public cellAt method, which returns a value from the Grid given a specific row and column.This method should return GC_EMPTY for any row or column outside the bounds of the grid. The bounds of the grid2will be returned by the rowCount and columnCount methods.Once the game is over, the game grid needs to be emptied of all inserted player discs so a new game can bestarted. In the Grid class this is done using the reset method.Complete the implementation for the Grid class in Grid.cpp based on the declarations already created for youin Grid.hpp. Make sure to read the comments above the class and each method in the class for more informationon how to implement them properly.2.2.2 Testing the Grid ClassThe tests for the Grid class can be enabled by uncommenting the following line at the top of test.cpp:// #define ENABLE_T2_TESTSOnce the Task 2 tests are enabled, run make test to execute all of the currently enabled tests. Remember thatnot all aspects of the Grid class may be tested in the tests you have been given, so don’t assume the task iscomplete once all of the tests pass.2.3 Creating a Connect Four Game [Task 3] (30%)2.3.1 Implement the Game ClassThe Game class composes the Grid class, aggregates multiple instances of the Player class together and performsthe game logic. A game is created using the default constructor for the Game class. The Game’s status method willreturn GS_INVALID until two Players are assigned to the Game using the setPlayerOne and setPlayerTwo methodsand a Grid is assigned using the setGrid method.The game will be executed one turn at a time using the playNextTurn method, with the nextPlayer methodproviding (read-only) information about which player’s turn it is next. Once the game is complete, the statusmethod will return GS_COMPLETE, and return the winning player via the winner method. Note that if the game is adraw, the winner method will return a null pointer (0), but the Game’s status will still be GS_COMPLETE. If a newgame is requested, the state of the current game can be cleared using the restart method.You will need to create code to calculate the status of the game by traversing the grid and identifying 4 or morediscs from the same player in a row in any vertical, horizontal or diagonal orientation. Once one player gets atleast 4 discs in a row in any direction, they win the game. When a player wins the game, the Game state shouldbe updated accordingly so that the game status is set to GS_COMPLETE and the corresponding Player is returnedvia the winner method. When a Player wins a game, their score and total number of wins should be increased by1 using the appropriate methods of the Player class (a tie does not count as a win for either player). When thegame is restarted (using the restart method), each Player’s score should be reset. The possible directions discscan be connected in to win the game are shown in figure 2 below.(a) A vertical connect-fourfor the red player (playerone).(b) A horizontal connect-four for the red player(player one).(c) A diagonal-up connect-four for the red player(player one).(d) A diagonal-downconnect-four for the yellowplayer (player two).Figure 2: Completed games showing a winning combination in each possible direction. The winning combinationof discs has been highlighted in each example.Complete the implementation for the Game class in Game.cpp based on the declarations already created for youin Game.hpp. Make sure to read the comments above the class and each method in the class for more informationon how to implement them properly.2.3.2 Testing the Game ClassThe tests for the Game class can be enabled by uncommenting the following line at the top of test.cpp:3// #define ENABLE_T3_TESTSOnce the Task 3 tests are enabled, run make test to execute all of the currently enabled tests. Remember thatnot all aspects of the Game class may be tested in the tests you have been given, so don’t assume the task iscomplete once all of the tests pass.2.4 Super Connect Four [Task 4] (15%)In this task you will implement a variant of the classic Connect Four game we will call “Super Connect Four”. Inthis variant of the game when a player connects four or more discs in a row, those discs will be removed from thegrid. This will cause any discs above the removed discs to move down to fill the space in the grid left by the removalof the connected discs. One point will be added to the score of the player who connected the discs. If another lineof four or more discs belonging to one player exists after all affected discs have been moved, then this process isrepeated. This process continues until the grid reaches a stable state where no more lines of four discs exist and nomore cells need to be moved. One turn of such a game is demonstrated in figure 3.(a) The initial gameboard state for thisexample. Bothplayers have alreadymade several moves.(b) Player two playsthe next move, form-ing a chain of fourdiscs horizontally inrow 3. Player two’sscore is increased by1.(c) The connecteddiscs are removedfrom the game grid,leaving blank spacesin the grid.(d) The remainingdiscs above the onesthat were removedare moved downvertically to fillthe empty space inthe grid. Movingthe discs forms twonew chains of discsbelonging to playerone.(e) The grid isscanned, and twonew chains belong-ing to player one arefound. Player one’sscore is increased by1 and the discs areremoved from thegrid.(f) The disc that wasabove the removeddiscs is moved tothe bottom of thegrid. The grid is re-scanned but no newchains of discs havebeen formed and nodiscs need to bemoved down. Playertwo’s turn ends.Figure 3: A demonstration of one turn in the “Super Connect Four” game.The process for each turn of the game should be as follows:1. Make the player’s move by inserting their token into the grid.2. Check to see if any chains of 4 or more discs in any direction have been formed.3. Increase the score by 1 for any players whose discs have formed chains of 4 or more. Each player’s score mayonly increase by 1 each time the grid is checked (even if players get multiple simultaneous chains in a singlecheck).4. Remove all discs in all chains from the grid.5. Fill all spaces in the grid created in the previous step by moving the discs above the spaces down.6. Repeat from step 2 until no more chains of discs are found and the grid has reached a stable state.Make sure that disc the disc removal and movement steps are fully completed before the grid is re-scanned. Failingto do so may cause additional matches while the grid is still between stable states. This is important for scenariossuch as those shown in figure 4 and figure 5.Just as in normal Connect Four, players take alternating turns until the game is complete. This game will endonce there is no more space in the grid for either player to insert discs. The winner is the player with the highestscore at the end of the game.4(a) The initial gameboard state for this ex-ample. Both playershave already made sev-eral moves.(b) Player one plays thenext move, forming achain of four discs hori-zontally in row 2 as wellas a diagonal chain offour discs. Player one’sscore is increased by 1.(c) The connected discsare removed from thegame grid, leaving blankspaces in the grid.(d) The remaining discsabove the ones thatwere removed are moveddown vertically to fill theempty space in the grid.The grid is stable, sothis is the end of playerone’s turn.Figure 4: A demonstration of a turn in the “Super Connect Four” game where multiple chains of discs are formedfor a player in the same move.(a) The initial gameboard state for this ex-ample. Both playershave already made sev-eral moves.(b) Player one plays thenext move, forming achain of four discs hori-zontally in row 5. Playerone’s score is increasedby 1.(c) The connected discsare removed from thegame grid, leaving blankspaces in the grid.(d) The remaining discsabove the ones thatwere removed are moveddown vertically to fill theempty space in the grid.Moving the discs formsnew chains of discs forboth players.(e) The grid is scanned,and new chains belong-ing to both players arefound. Both player’sscores are increased by1 and the discs are re-moved from the grid.There are no more discsto move down. Playerone’s turn ends.Figure 5: A more complex example of the behavior of the “Super Connect Four” game.2.4.1 Implement the SuperGame classImplement the SuperGame class in SuperGame.hpp and SuperGame.cpp by deriving from the Game class, thereforereducing the amount of code you need to write by inheriting some of the functionality of the Game class. TheSuperGame class should use the interface defined by the Game class so that it can be substituted in place of the Gameclass to provide a new game experience with the same user interfaces.The scoring for the SuperGame is different to the original Game class. When a player gets a chain of four discstheir score still increases by 1. However, the game does not end until the game grid has been filled, so the “winner”of the game is determined by the Player with the highest score once the game grid has been filled and no moremoves can be played. Once the game is over the winner has their win counter increased by 1. Both player’s scoresare still reset when the game is restarted.2.4.2 Testing the SuperGame classThe tests for the SuperGame class can be enabled by uncommenting the following line at the top of test.cpp:// #define ENABLE_T4_TESTSOnce the Task 4 tests are enabled, run make test to execute all of the currently enabled tests. Remember thatnot all aspects of the SuperGame class may be tested in the tests you have been given, so don’t assume the taskis complete once all of the tests pass.You have also been given a command-line interface (main.cpp) which can be used for advanced testing of your5code by playing a Connect Four or Super Connect Four game. To build and run the command-line interface, usethe command make run from the command-line console.You may share any tests you write for this assignment with classmates on Piazza.2.5 Code Inspection (20%)Your code will be inspected for:• Effective use of OOP• Consistent coding style• Code commenting• Memory managementMarks will be allocated for each by your marker.Important: how your code will be marked• Your code will be marked using a semi-automated setup. If you fail to follow the setup given, your code willnot be marked. All submitted files must compile without requiring any editing. Use the provided tests andMakefile to ensure your code compiles and runs without errors on the university Ubuntu lab PCs. Any teststhat run for longer than 10 seconds will be terminated and will be recorded as failed.• Although you may add more to them (e.g. member variables, #include statements, or helper functions), youmust not modify the existing interface of classes defined in the following files (e.g. do not delete or modifythe existing functions declared):– ConnectFour/Player.hpp– ConnectFour/Grid.hpp– ConnectFour/Game.hpp• Do not move any existing code from the ConnectFour directory, and make sure all of your new code files arecreated inside the ConnectFour directory.• You may modify test.cpp as you please (for your own testing purposes); this file will not be marked at all.Be aware that your code must still work with the original test.cpp. Do not change the location of this file.You are free to share any additional tests you create with classmates on Piazza.• Your code will also be inspected for good programming practices, particularly using good object-orientedprinciples. Think about naming conventions for variables and functions you declare. Make sure you commentyour code where necessary to help the marker understand why you wrote a piece of code a specific way, orwhat the code is supposed to do. Use consistent indentation and brace placement.SubmissionYou will submit via Canvas. Make sure you can get your code compiled and running with test.cpp (make test) onthe university Ubuntu computers. Submit the following, in a single ZIP archive file:• A signed and dated declaration stating that you worked on the assignment independently, and that it isyour own work. Include your name, ID number, the date, the course and assignment number. You can findthis Cover Sheet on Canvas. All code will be checked against other submissions. Submissions detected asbeing similar to others will ensure that the students involved are forwarded to the Misconduct Committee.• The entire contents of the src_for_students folder you were given at the start of the assignment, includingthe new code you have written for this assignment. Ensure you execute make clean before zipping thefolder so your submission doesn’t include any executable files (your code will be re-built for marking).6Academic honesty• The work done on this assignment must be your own work. Think carefully about any problems you comeacross, and try to solve them yourself before you ask anyone for help. Under no circumstances should youtake or pay for an electronic copy of someone else’s work.• All submitted code will be checked using software similarity tools. Submissions with suspicious similarity willresult in an Investigative Meeting and will be forwarded to the Disciplinary Committee.• Penalties for copying will be severe – to avoid being caught copying, don’t do it.• To ensure you are not identified as cheating you should follow these points:– Always do individual assignments by yourself.– Never show or give another person your code.– Never put your code in a public place (e.g. Reddit, Github, forums, your website).– Never leave your computer unattended. You are responsible for the security of your account.– Ensure you always remove your USB flash drive from the computer before you log off.Late submissionsLate submissions incur the following penalties:• 15% penalty for zero to 24 hours late• 30% penalty for 25 to 48 hours late• 100% penalty for over 48 hours lateYou must double check that you have uploaded the correct code for marking! There will be no exceptionsif you accidentally submitted the wrong files, regardless of whether you can prove you did not modify them sincethe deadline. No exceptions.7","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写 CS1073  Assignment 3","slug":"page76","date":"2016-12-26T05:24:42.000Z","updated":"2017-01-12T03:35:44.034Z","comments":true,"path":"2016/12/26/page76/","link":"","permalink":"http://yoursite.com/2016/12/26/page76/","excerpt":"","text":"Introduction总共有2个part，第一个part是完成client类的机构methods方法，然后在main函数测试，主要考察java基础能力和单元测试part2是完成3个类。重复使用client类，然后新家一个 Book class和BookStore class。类似一个book管理系统，比part1稍微工作量多一些，也输入java入门知识RequirementCS1073 Assignment 3 Due: 8:30am October 4, 2016 in the Lab or anytime prior to 8:15am in the assignment bin.Part 1. Write a program to implement a class called Client that contains the values: name,discount and cumulativepurchase amount. Supply an appropriate constructor and methods as described below:• getName: returns the clients name• addPurchase: accepts the current purchase amount as a parameter and adds it to the cumulative purchaseamount• getPurchase: returns the cumulative purchase amount• setDiscount: sets the client’s discount to a specified percentage• getDiscount: returns the client’s discount• resetClient: resets the discount percentage and the cumulative purchase amount of the client to zero• The constructor: accepts one parameter (name) and sets the discount and cumulative amount to zero.Write a main method in a driver class called TestClient to test the Client class. It should have the following functionality:• Prompt the user for the name of the client and create the client (set the client’s discount and cumulativepurchase amount to zero).• Prompt the user for a discount percentage for the client and update the client’s discount. Read the discountpercentage as an integer.• The client makes a purchase. Prompt the user for the total amount of the current purchase before her/hisdiscount. Apply the client’s discount to the purchase amount. Remember that the client’s discount has beenstored as an integer, so to use it as a percentage you need to divide it by 100.00.• Print the total amount to be paid by the client after her/his discount.• Update the cumulative purchase amount of the client by adding the purchase amount after applying thediscount.• The client gets a new discount for being a good client. Prompt the user for the new discount, and update it inthe client’s information.• The client makes another purchase. Prompt the user for the total amount of the current purchase beforediscount. Apply the client’s discount and print the total to be paid after the discount.• Update the client’s cumulative purchase amount by adding the total payment after discount,• Print the client’s information (name, discount, cumulative purchase).• The store is starting a new selling season, the Christmas season. For this season reset the percentage discountand cumulative purchase amount to zero. Print the client’s information (name, discount, cumulative purchase).• Test your program for a client named Monique Levesque. She initially gets a 5% discount. In her first purchase,she spends $245.99 before any discount. Her new discount for being a good client is 25%. She makes anotherpurchase of $60.00 before any discount.Print all amounts rounded to two decimal places.Part 2 In this part of the assignment you are going to use three classes. You are going to reuse the Client class that youimplemented above, and implement two new classes: a Book class and a BookStore class. The BookStore class is thedriver class for the Client and Book classes.For the implementation of the Book class use the following guidelines. A book has a title, a price, and a discount. Thereare four methods (getTitle. getPrice. setPrice. getDiscount) as well as two constructors as described below:• getTitle: returns the title of the book.• getPrice: returns the current price of the book.• setPrice: changes the price to a specified amount.• getDiscount: returns the current discount for the book.First constructor: accepts two parameters (title and price) and sets the title and price while setting the discountpercentage to 0% (i.e. this book has no discount).Second constructor: accepts three parameters (title. price and the discount percentage) and sets them all accordingly.Write the BookStore class that uses the Client and Book classes. The main method of the BookStore class should havethe following functionality:• Prompt the user for the first book (Title: HTML for the World Wide Web, Price: 24.95, Percentage Discount: 5%)and create the corresponding book object.• Read the discount percentage as an integer.• Prompt the user for the second book (Title: Operating Systems. Price: 69.95). Do not prompt for the percentagediscount; let the class initialize it for you. Create the corresponding book object.• Change the price of the HTML book to $30.00.• Now create a client: Andrea Smith.• Set Andrea’s percentage discount to 15%.• Andrea buys the two books mentioned above. Print an invoice for Andrea. Obtain the cost of each book afterapplying the individual book discount. Then. apply the client’s discount to the total cost of the books. Rememberthat the discount values are integers and you have to divide them by 100.00 when you need to use them as apercentage. The format of the invoice should be as followsAndrea Smith$ 28.50 HTML for the World Wide Web$ 69.95 Operating Systems————–$ 98.45 subtotal$ 14.77 Client’s Discount————$ 83.68 Total• Update Andrea’s client information with the cumulative purchase amount.• Print Andrea’s information (name, discount, cumulative purchase).• Print all amounts rounded to two decimal places.Summary:You will have 2 class files: Client &amp; BookYou will have 2 driver files: TestClient &amp; Bookstore","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C代写 Assignment 3","slug":"page75","date":"2016-12-25T04:14:42.000Z","updated":"2017-01-12T03:30:48.942Z","comments":true,"path":"2016/12/25/page75/","link":"","permalink":"http://yoursite.com/2016/12/25/page75/","excerpt":"","text":"Introductionc语言实现还一个Nim的游戏，需要使用很多数据结构，trees, linked-lists, and stack等等完成人机对战版本Requirement1/4KIT107 Programming 2016Assignment 3Due DateThe assignment is due at 3PM Wednesday October 12 th 2016 and should be completed in pairs.ContextNim is a game played between two players. 21 objects (matches, coins, or lollies) are placed infront of the players and, having decided who will go first, each player removes one, two, or threeobjects in alternating turns. The goal is to force the other player to remove the final object — theplayer to remove the final object is the loser!This assignment uses many data structures (trees, linked-lists, and stacks) to implement a human-versus-computer version of the game. The game will be text only. The computer will choose itsmove by creating a game tree. A game tree consists of all the possible states of the game and thecomputer determines the outcome of particular choices to guide which choice is the best. The stateof the game is defined as comprising how many objects remain in the game and how good (or bad)the outcome looks (an int from -9 to +9). Each node of the game tree has children that indicatethe states of the game that follow from the state of the parent for each possible move, i.e. there arelikely to be three children for each node, one with one additional object removed, one with two, andone with three.2/4A sample run of the game is shown below.The project contains many files. All required files are present. Your task is simply to complete thefunctions within the program files which have been declared but for which the function bodies aremissing.Program StyleYour program should follow the following coding conventions: const variable identifiers should be used as much as possible, should be written all inupper case and should be declared before all other variables; Variable identifiers should start with a lower case letter; Every if and if-else statement should have a block of code (i.e. collections of linessurrounded by { and }) for both the if part and the else part (if used); Every loop should have a block of code; The keyword continue should not be used; The keyword break should only be used as part of a switch statement; Opening and closing braces of a block should be aligned; All code within a block should be aligned and indented 1 tab stop (or 4 spaces) from thebraces marking this block; Commenting:o There should be a block of header comment which includes at least file name student names student identity numbers a statement of the purpose of the program dateo Each variable declaration should be commentedo There should be a comment identifying groups of statements that do various parts ofthe task3/4o Comments should describe the strategy of the code and should not simply translatethe C into EnglishWhat and how to submitWhat to submitPaper submission A signed cover page (blanks can be collected from the ICT Reception/Help Desk or fromthe ICT web site athttp://www.utas.edu.au/__data/assets/pdf_file/0005/161375/GroupAssignmentCover.pdf); A landscape-orientation print-out of the three ‘.c’ source code files for the program. Yourassignment will not be marked unless these are present; and A statement from each person indicating what proportion of the work was theirs. If thework was done equally, then each person should claim 50% of the effort. It is expected thatthis will be the case and this will be assumed if no statement is submitted. If, however, oneperson has done very little, then this should be stated. A reason why this is the case shouldbe given. For example, if one student does 80% of the work because their partner did notturn up to meetings, complete work by the agreed time, etc. then this should be stated. Ifone student does 30% of the work because the other student simply went off and did it all bythemselves and without consultation then this should be stated.Electronic submission You should submit the entire Visual Studio project folder.How to submitPaper submission Firmly staple together all of the required documents (with the signed cover page on top) andplace them in the appropriate submissions box near the ICT Discipline Help Desk.Electronic submission Go to your home directory on alacritas (M:). You will find there a directory (folder) calledkit107submit (If you do not have this folder, please contact the ICT Discipline Helpdesk.) Copy your entire Visual Studio project folder (Assig3) into this directory. Open the folderto see that the files have been copied. If you want to resubmit, open the kit107submit folder, remove the old version and copyin the new version.4/4Marking schemeTask/Topic MaximummarkProgram operates as specifiednode.c correctly completed 6stack.c correctly completed 6gameState.c correctly completed 7tNode.c correctly completed 14gameTree.c correctly completed 31Program StyleDoes not unnecessarily repeat tests or have other redundant/confusing code 8Uses correctly the C naming conventions 8Alignment of code and use of white space makes code readable 8Always uses blocks in branch and loop constructs 8Meaningful identifiers 8Variables declared at the top of functions 8Each variable declaration is commented 8Comments within the code indicate the purpose of sections of code (but DO NOT just duplicatewhat the code says)8Plagiarism and Cheating:Practical assignments are used by the School of Engineering and ICT for students to both reinforceand demonstrate their understanding of material which has been presented in class. They have arole both for assessment and for learning. It is a requirement that work you hand in for assessmentis substantially your own.Working with othersOne effective way to grasp principles and concepts is to discuss the issues with your peers and/orfriends. You are encouraged to do this. We also encourage you to discuss aspects of practicalassignments with others. However, once you have clarified the principles, your pair must expressthem in writing or electronically entirely by yourselves. In other words you must develop thealgorithm to solve the problem and write the program which implements this algorithm with yourpartner and no one else (other than staff).Cheating Cheating occurs if you claim work as your own when it is substantially the work of someoneelse. Cheating is an offence under the Ordinance of Student Discipline within the University.Furthermore, the ICT profession has ethical standards in which cheating has no place. Cheating involves two or more parties.o If you allow written work, computer listings, or electronic version of your code to beborrowed or copied by another student you are an equal partner in the act ofcheating.o You should be careful to ensure that your work is not left in a situation where it maybe stolen by others. Where there is a reasonable cause to believe that a case of cheating has occurred, this willbe brought to the attention of the unit lecturer. If the lecturer considers that there is evidenceof cheating, then no marks will be given to any of the students involved. The case will bereferred to the Head of School for consideration of further action.Julian Dermoudy, September 21 st 2016.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C++代写： Computer Networks Fall 2016","slug":"page74","date":"2016-12-24T10:24:42.000Z","updated":"2017-01-11T09:19:33.941Z","comments":true,"path":"2016/12/24/page74/","link":"","permalink":"http://yoursite.com/2016/12/24/page74/","excerpt":"","text":"Introduction用UDP和TCP套接字，完成一个简单的“黑客”游戏，有客户端和服务端，服务端生成密码，客户端猜测并且发送给服务端验证，需要运用到了网络知识和c++知识RequirementCSE422 Computer Networks Fall 2016Laboratory 1: Introduction to Socket ProgrammingDue: 23:59 Monday, Oct 31 GoalGain experience with socket programming by implementing a simple “hacker” game usingboth UDP and TCP sockets. In this game, one participant tries to guess a four-digit passwordknown to the other participant, receiving feedback on each guess as described below.2 OverviewIn this lab, you will implement a networking version of the hacking mini game, which willcomprise of two C++ programs, one client and one server. This lab will help you to gainexperience with socket programming using Berkeley socket interface. In order to focus moreon the details of socket programming part, the game and most of the command parsing areprovided as a skeleton code.This lab is worth for 60 points. This lab is due no later than 23:59 Monday, Oct 3. No latesubmission will be accepted.3 SpecificationIn this lab, you are required to implement a client and a server program for the ”hacker”game. The server program and client program will interact by exchanging messages tosimulate the game play. A simple message/packet format is provided in the file: message.h.The server and client program will handshake through TCP and the gaming interaction willuse UDP.3.1 “Hacker” GameThe game will display a list of possible passwords (formatted in a way to mimic what is seenin the Fallout game series). The user will then enter a guess for which one they believe thepassword to be. The game will report back the “likeness” of the guess (how many correctletters are in the correct position).1For example, suppose the password is ”FULL” and the displayed text, containing all of thepossible passwords, is:ROBCO INDUSTRIES (TM) TERMALINK PROTOCOLENTER PASSWORD NOWThe default number of attempts is set to 4.A demo of the ”hacking” game play can be found at: [Demo Play]-In the demo, click the power button in the right lower corner then click on the phase thatyou would like to guess as the password.3.2 The Server ProgramExample invocation: ./serverThe server program will create a TCP socket and will then wait for an incoming TCPconnection. This TCP socket’s port will be assigned by the operating system and will beprinted to the console. We assume that the client knows this TCP port number, because theclient is started after the server. When the server receives an incoming TCP connection, itcreates a UDP socket, whose port is also assigned by the OS. Via the TCP socket, the serverprogram returns a packet to the client containing the UDP port number. This can be doneusing the UDP Cntr MSG type found in message.h.Once the UDP connection is established, the server program initializes a variable of typeHackerGame. The initialization of this variable generates the server password, a list ofpossible passwords, a string to act as the display board for the game, and the numberof attempts left. These are accessible through functions in the HackerGame class. Werecommend that you look over HackerGame.h. Guesses from the client can be evaluated by2using the TestEntry() function. The server keeps receiving and testing guesses from theclient until either the number of attempts has been exhausted or the password is guessedcorrectly. For each guess, the server sends a packet containing the “Likeness” of the guessto the client using the UDP socket. Once the game is over, either by guessing the passwordcorrectly or running out of attempts, the server must notify the client using the UDP socket,after which the server closes both the TCP and UDP sockets.3.3 The Client ProgramExample invocation: ./client -h lenny.cse.msu.edu -p 48192The client program is required to accept the following arguments.• -h is the server address (domain name).• -p is the TCP port number on which the server listens for an incoming connection.The client resolves the server address by using gethostbyname() and connects to the serverover TCP. The client then receives a packet from the server containing the UDP port number.Using the UDP port number, the client sends a confirmation message to the server, lettingit know that it can send the first game message, using the UDP socket. The client receives apacket containing the game display text and prints it to console. The client then takes inputfrom the user for the a guess at the password and sends the guess to the server program viathe UDP socket. For each guess the client should receive a response containing the likenessof the guess and how many attempts are left. These are to be printed to console.The client should monitor the content of each game message for ending conditions. Specif-ically, if AttemptsLeft = 0 or IsGameWon = true, then the client should print to consoleeither “Terminal Locked Out!” or”Access Granted!”, respectively. The client then closesboth the TCP and UDP sockets.3.4 Packet Format: message.hThere are two different types of packets for this lab; both are defined in message.h.1. UDP Cntr MSG: which contains only one field: int port2. Game MSG: which contains:(a) char Display[1000](b) int AttemptsLeft(c) bool IsGameWon(d) int Likeness3(e) char Entry[10]String type variables cannot be used in these packets due to how they utilize memory. Forinformation to be correctly sent in packets, the packet most know the starting address of thevariable and how large it is. Hence why we use arrays of chars.You may want to still use strings in your client and server programs, however. Following aretwo examples of copying content between the two variable types.Copying char array to a string:char Word1[10] = “test”;string Word2(Word1); //Word2 now contains “test”Copying a string to a char array:string Word2 = “test”;char Word1[10];strcpy(Word1, Word2.c str()); // Word1 now contains “test”4 DeliverablesYou will submit your lab using the web based handin utility. Don’t use the command-linebased handin facility. Please submit all files in your project directory. If you start your labwith the skeleton code, submit all files, even if the file is not modified.This lab is due no later than 23:59 Monday, Oct 3. No late submission will be accepted.The compilation must be done using a makefile. The code should compile on multiplemachines (can use lenny, carl, bart, etc). Please do not do your debugging on the servers(arctic or black). You will not be awarded any points if your submission does not compileusing a makefile. A sample makefile will be provided. It will only have to be changed if youadd more files to your solution. Please test your programs before handing them in.A README file is required including your name, PID, and machines that you tested on.You will run your server and client programs and paste the output in your README file.A sample README file is also included in the skeleton code. You are also encouraged toinclude explanations about parts of your code that may not work in the README file.5 ExampleFollows is an example of output from the client and server. Your output may differ.1. Invoke the server4Server:&gt;./serverCreating TCP Socket…TCP socket has port number: 534012. Invoke the client. The client connects to the server using the TCP connection infor-mation that you provide via the command line.Client:&gt;./client -h lenny.cse.msu.edu -p 53401Client is running…remote host: lenny.cse.msu.edu, remote TCP port: 53401Connected to Server!3. Server accepts the TCP connection from the client and sends the UDP port informationusing the TCP connection.Server:A new client is connected to the server!Creating UDP Socket…UDP socket has port number: 32471Sending UDP port number to client using TCP connection…4. Client uses the message from the TCP connection to establish an UDP port.Client:Reading TCP socket for UDP set up info…UDP port on Server: 32471Server IP: 35.9.23.42Establishing UDP Connection…5. Once the UDP connection is established, the server starts the game and accepts guessesfrom the client until either the password is guessed or the number of attempts isexhausted. Optionally the server can display the password for debugging purposes.Server:Password: FOURStarting game…Entry: termLikeness: 0Entry: ballLikeness: 0Entry: yearLikeness: 1Entry: fourLikeness: 4Access Granted!Closing TCP and UDP sockets…5Client:Receiving first game message…ROBCO INDUSTRIES (TM) TERMALINK PROTOCOLEntry: termLikeness: 0Attempts left: 3Entry: ballLikeness: 0Attempts left: 2Entry: yearLikeness: 1Attempts left: 1Entry: fourAccess Granted!Closing TCP and UDP sockets…6 GradingYou will not be awarded any points if your submission does not compile.Please feel free to mail TA Glen Simon simongle AT msu.edu for questions or clarifications.Additional notes and FAQ willl be posted on the website as well.7","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Network","slug":"Network","permalink":"http://yoursite.com/tags/Network/"}]},{"title":"Java代写： Assignment 1, prepared by Chris Trathen","slug":"page73","date":"2016-12-23T07:28:43.000Z","updated":"2017-01-11T08:38:44.445Z","comments":true,"path":"2016/12/23/page73/","link":"","permalink":"http://yoursite.com/2016/12/23/page73/","excerpt":"","text":"Introduction5个java的基础题，考察了操作符运算，数组，时间等基础知识，输入入门级编程RequirementCSE105 CW1 1CSE105 Introduction to Programming in Java, 2016Assignment 1, prepared by Chris TrathenInstruction(1) There are 5 questions for the first assignment. Each question is worth 20 marks. Theassignment is worth 15% of the total mark for CSE105.(2) Plagiarism will be very closely monitored. You should be very cautious when you discusswith classmates. Two similar answers will all get zeros marks or more serious consequences.After the marking, some of the students will be interviewed to confirm their independence in thecompletion of the assignments.(3) The deadline for submission of Assignment 1 is: 6:00pm, October 16, 2016 Sunday. Youshould pack all of your code with WinRAR, using your student ID as the file name and thenupload it to ICE. The uploading link will be automatically stopped after 6:00pm.Question 1The factorial function of a positive integer n is the product of all the integers from 1 to n. Forexample, the factorial of 5 is 1x2x3x4x5 = 120. This is usually expressed as 5!=120. Bydefinition 0!=1. Write a program that calculates the factorial n!.Write a program that accepts as input a number between 0 and 20 and calculates the factorial ofthat number.Question 2Write a program that prints a table of temperature conversion from Celsius to Fahrenheit. Forexample:Celsius Fahrenheit100 2125 41…………-5 23The exact range of data used is your choice. This is example only.Use the formula F = C 9 / 5 + 32Perform the calculation using floating point arithmetic, but display the results as the closestinteger.CSE105 CW1 2Question 3Write a program that analyses a triangle. Input the length of 3 sides of a triangle from thekeyboard.Firstly, reject any input that does not represent a triangle.Then determine whether the triangle is: Equilateral - all sides the same length Isosceles - two sides the same length Scalene - no sides the same lengthCSE105 CW1 3Question 4A leap year is a year with 366 days. A leap year has the 29 th February. A year is a leap year if it isdivisible by 4 except for the century years (divisible by 100). Century years are only leap years if they aredivisible by 400. Write a program that accepts a year and determines if it is a leap year.Use a separate method to test if a year is a leap year.The following information will help when you test your program. The leap years 1800 to 2400:1804 1904 2004 2104 2204 23041808 1908 2008 2108 2208 23081812 1912 2012 2112 2212 23121816 1916 2016 2116 2216 23161820 1920 2020 2120 2220 23201824 1924 2024 2124 2224 23241828 1928 2028 2128 2228 23281832 1932 2032 2132 2232 23321836 1936 2036 2136 2236 23361840 1940 2040 2140 2240 23401844 1944 2044 2144 2244 23441848 1948 2048 2148 2248 23481852 1952 2052 2152 2252 23521856 1956 2056 2156 2256 23561860 1960 2060 2160 2260 23601864 1964 2064 2164 2264 23641868 1968 2068 2168 2268 23681872 1972 2072 2172 2272 23721876 1976 2076 2176 2276 23761880 1980 2080 2180 2280 23801884 1984 2084 2184 2284 23841888 1988 2088 2188 2288 23881892 1992 2092 2192 2292 23921896 1996 2096 2196 2296 239620002400CSE105 CW1 4Question 5Write Java program to check if a number is Armstrong number.An Armstrong number of 3 digit is a number for which sum of cube of its digits are equal to thenumber.Examples:371 is an Armstrong number because 333 + 777 + 111 = 371.123 is not an Armstrong number because 111 + 222 + 33*3 = 36.This assignment is individual work. Plagiarism (e.g. copying materials from othersources without proper acknowledgement) is a serious academic offence. Plagiarismwill not be tolerated and will be dealt with in accordance with the University Code ofPractice on Assessment.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写： Assignment 1, prepared by Chris Trathen","slug":"page72","date":"2016-12-23T07:28:43.000Z","updated":"2017-01-11T08:38:44.445Z","comments":true,"path":"2016/12/23/page72/","link":"","permalink":"http://yoursite.com/2016/12/23/page72/","excerpt":"","text":"Introduction5个java的基础题，考察了操作符运算，数组，时间等基础知识，输入入门级编程RequirementCSE105 CW1 1CSE105 Introduction to Programming in Java, 2016Assignment 1, prepared by Chris TrathenInstruction(1) There are 5 questions for the first assignment. Each question is worth 20 marks. Theassignment is worth 15% of the total mark for CSE105.(2) Plagiarism will be very closely monitored. You should be very cautious when you discusswith classmates. Two similar answers will all get zeros marks or more serious consequences.After the marking, some of the students will be interviewed to confirm their independence in thecompletion of the assignments.(3) The deadline for submission of Assignment 1 is: 6:00pm, October 16, 2016 Sunday. Youshould pack all of your code with WinRAR, using your student ID as the file name and thenupload it to ICE. The uploading link will be automatically stopped after 6:00pm.Question 1The factorial function of a positive integer n is the product of all the integers from 1 to n. Forexample, the factorial of 5 is 1x2x3x4x5 = 120. This is usually expressed as 5!=120. Bydefinition 0!=1. Write a program that calculates the factorial n!.Write a program that accepts as input a number between 0 and 20 and calculates the factorial ofthat number.Question 2Write a program that prints a table of temperature conversion from Celsius to Fahrenheit. Forexample:Celsius Fahrenheit100 2125 41…………-5 23The exact range of data used is your choice. This is example only.Use the formula F = C 9 / 5 + 32Perform the calculation using floating point arithmetic, but display the results as the closestinteger.CSE105 CW1 2Question 3Write a program that analyses a triangle. Input the length of 3 sides of a triangle from thekeyboard.Firstly, reject any input that does not represent a triangle.Then determine whether the triangle is: Equilateral - all sides the same length Isosceles - two sides the same length Scalene - no sides the same lengthCSE105 CW1 3Question 4A leap year is a year with 366 days. A leap year has the 29 th February. A year is a leap year if it isdivisible by 4 except for the century years (divisible by 100). Century years are only leap years if they aredivisible by 400. Write a program that accepts a year and determines if it is a leap year.Use a separate method to test if a year is a leap year.The following information will help when you test your program. The leap years 1800 to 2400:1804 1904 2004 2104 2204 23041808 1908 2008 2108 2208 23081812 1912 2012 2112 2212 23121816 1916 2016 2116 2216 23161820 1920 2020 2120 2220 23201824 1924 2024 2124 2224 23241828 1928 2028 2128 2228 23281832 1932 2032 2132 2232 23321836 1936 2036 2136 2236 23361840 1940 2040 2140 2240 23401844 1944 2044 2144 2244 23441848 1948 2048 2148 2248 23481852 1952 2052 2152 2252 23521856 1956 2056 2156 2256 23561860 1960 2060 2160 2260 23601864 1964 2064 2164 2264 23641868 1968 2068 2168 2268 23681872 1972 2072 2172 2272 23721876 1976 2076 2176 2276 23761880 1980 2080 2180 2280 23801884 1984 2084 2184 2284 23841888 1988 2088 2188 2288 23881892 1992 2092 2192 2292 23921896 1996 2096 2196 2296 239620002400CSE105 CW1 4Question 5Write Java program to check if a number is Armstrong number.An Armstrong number of 3 digit is a number for which sum of cube of its digits are equal to thenumber.Examples:371 is an Armstrong number because 333 + 777 + 111 = 371.123 is not an Armstrong number because 111 + 222 + 33*3 = 36.This assignment is individual work. Plagiarism (e.g. copying materials from othersources without proper acknowledgement) is a serious academic offence. Plagiarismwill not be tolerated and will be dealt with in accordance with the University Code ofPractice on Assessment.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写： FIT9131 Programming Foundations","slug":"page71","date":"2016-12-21T08:23:43.000Z","updated":"2017-01-11T08:29:12.376Z","comments":true,"path":"2016/12/21/page71/","link":"","permalink":"http://yoursite.com/2016/12/21/page71/","excerpt":"","text":"IntroductionJava的入门级基础，用java完成菜单管理系统，按题目要求使用 ArrayList，loop等方法RequirementFIT9131 Programming FoundationsWeek 6 Exercises1Homework checklistTo be up to date you should have completed the following: Tutorial exercises from weeks 1– 5. The complete code for the LuckyNumberGenerator class and the Player class foryour assignment. Read Chapters 1-4 of the text book, Objects First with Java, Barnes &amp; Kölling.REMINDER :You MUST ATTEND your tutorial next week, WEEK 7, to organise yourinterview for Assignment 1 with your own tutor. If no interviews arescheduled, no marks will be awarded to your assignment.If you are an off-campus student, the interview appointments will bemade via emails.You should show your assignment work to your tutor this week forfeedback/comments.Exercises to work on in the tutorial1. Create a class in BlueJ called Week6Q1, then add a method in it calleddisplayMenu() that prints the following menu to the screen and asks the user tochoose one of the options presented, as follows:A. Option #AB. Option #BC. Option #CD. Option #DX. Exit!Please enter your choice:The method should do nothing else other than printing the menu.22. Add a method to the Week6Q1 class in Q.1, and name it start(). In this method, makea single call to displayMenu(), then use a Scanner object to accept an input fromthe user. When the user enters an option (A/B/C/D/X) from the menu, in upper or lowercase, the program should print an appropriate message indicating which option has beenselected (e.g. “Option #A was selected”). There is no need to actually performany real action, apart from the printed message.If the user enters an option other than those on the menu, an error message should beprinted.Run the start() method several times to check that you have it working as required.Hint : you need to use the if/switch statements in your code3. Modify the start() method, this time adding in a loop so that the menu is displayedrepeatedly, until the last option is selected. When the last option is selected, exit thestart() method (ie. stop the loop).Hint : you need to use a combination of the if/switch and for/while statements inyour codeThe following exercises are from the text book. These will test and re-enforce yourunderstanding of the concepts covered in the week 5/6 lectures.4. 4.1 (explore MusicOrganizer class the music-organizer-v1 project)5. 4.2–4.11, 4.13 (using ArrayList methods)6. 4.20-4.21 (for-each loop).7. 4.30 &amp; 4.32 (while loop)Homework for this weekFinish the tutorial exercises for week 6.Work on (and hopefully finish) the code for the Game class for your assignment.Read chapter 6 (sections 6.1-6.5, and optionally 6.6-6.10) of the text book, Objects First withJava, Barnes &amp; KöllingRead chapter 7 (sections 7.1-7.4) of the text book, Objects First with Java, Barnes &amp; Kölling- Do exercises 7.2-7.3, 7.7-7.8 (fixed-size Arrays)","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写： Task 2 Latin Squares","slug":"page70","date":"2016-12-20T08:44:56.000Z","updated":"2017-01-11T08:25:21.166Z","comments":true,"path":"2016/12/20/page70/","link":"","permalink":"http://yoursite.com/2016/12/20/page70/","excerpt":"","text":"Introduction检查一个二维数组是不是Latin square ，是否符合Latin square的规则，二维数组也是用户通过界面输入RequirementINFO1103 Introduction to Programming, Semester 2, 20161Task 2 Latin SquaresSubmission deadline: 5pm on Saturday, 3 rd September (Week 6)Submission: Submit your LatinSquares.java file via the online system PASTA.Weight: 5 marks = 5% of your final mark.This assessment must be completed individually.Write a program called LatinSquares.java that checks if an n x n matrix is a Latin square. Yourprogram should be in the package squares and should be based off the skeleton code available onPASTA.A n x n matrix is a Latin square if every row and column contains the numbers 1, 2, 3,… n, exactly once. Forexample:A Latin square of size 3:3 2 11 3 22 1 3A Latin square of size 5:1 2 3 4 52 3 5 1 43 5 4 2 14 1 2 5 35 4 1 3 2The name “Latin square” was inspired by the work of the Swiss mathematician Leonhard Euler, who usedLatin characters as symbols. Other symbols can be used instead of Latin characters, e.g. integer numbers, asin this assignment. Latin squares are used for experimental design in statistics, for error correcting codes intelecommunication systems and are also related to the Sudoku puzzles. See the Wikipedia page on LatinSquares for more information (http://en.wikipedia.org/wiki/Latin_square).Download the LatinSquares.java skeleton code from PASTA. This skeleton code contains a templatefor your submission. You must not modify the existing method headers as we use them to test your code,however you may add any additional methods you believe are necessary.Your task is to write the methods readSize, readSquare, validColumn, validRow, andvalidLatinSquare as described in the skeleton code. Your complete program will include the givenskeleton code and the methods that you will write.Your code will be tested at the method level, which means each method will be tested individually, not justby running the main method. This means you need to make sure that each method works exactly as thedocumentation in the skeleton code describes.See below for some example outputs of the main method being run. The text in black is required output, andthe text in green is user input.INFO1103 Introduction to Programming, Semester 2, 20162Please enter the size of the square (N):3Please enter 9 numbers:1 2 3 2 3 1 3 1 2This is the square you input:+‐+‐+‐+|1|2|3|+‐+‐+‐+|2|3|1|+‐+‐+‐+|3|1|2|+‐+‐+‐+It’s a Latin square!Please enter the size of the square (N):3Please enter 9 numbers:0 2 1 1 0 2 2 1 0This is the square you input:+‐+‐+‐+|0|2|1|+‐+‐+‐+|1|0|2|+‐+‐+‐+|2|1|0|+‐+‐+‐+Not a Latin square!Please enter the size of the square (N):2Please enter 4 numbers:1 2 3 4This is the square you input:+‐+‐+|1|2|+‐+‐+|3|4|+‐+‐+Not a Latin square!Please enter the size of the square (N):3Please enter 9 numbers:1 2 3 1 2 3 1 2 3This is the square you input:+‐+‐+‐+|1|2|3|+‐+‐+‐+|1|2|3|+‐+‐+‐+|1|2|3|+‐+‐+‐+Not a Latin square!AssumptionsYou can make the following assumptions for this task: Your code will only be given sensible input (e.g. ? ? 0). Any inputs will be given as integers only; you do not need to worry about invalid inputs like floatingpoint numbers or Strings.How to Submit in PASTAWriting your code1. In Eclipse, create a project “info1103_task2”. In this project, create a package “squares”, and then aclass “LatinSquares” within the package.2. Download the skeleton code from PASTA and either import the class or paste the code into the class“LatinSquares.java”.3. Write the required methods. You may not change any method headers in the skeleton code! Yourprogram consists of the provided skeleton code and the methods that you wrote. Compile and runyour program and make sure that it produces the same output as the example output. When you arehappy with your program, you need to submit it on PASTA.INFO1103 Introduction to Programming, Semester 2, 20163Submitting in PASTA1. Log in to PASTA (http://info1103.it.usyd.edu.au/) with your Unikey login and password.Note: If you are off-campus, you will need to establish a VPN connection to access PASTA. This meansinstalling a program called “VPN client” on your computer and running it every time when you use PASTAoff-campus. Instructions how to do this are available here:http://staff.ask.sydney.edu.au/app/answers/detail/a_id/519/~/how-do-i-download-and-install-the-vpn-client-to-access-the-university-network%3FIf you have problems with VPN, try synchronising your password:https://www.auth.usyd.edu.au/extro/pwresync/If this doesn’t work, contact the ICT helpdesk: http://sydney.edu.au/ict/student/contact/2. Find Task 2 and press “Submit”. Then press “Choose File” and attach the LatinSquares.javafile, then press “I accept” (after reading the University policy on academic honesty).3. If you see a message indicating that your code is queued for testing under Task 2, this means thatyour code has been uploaded successfully.4. If you see a red error box, you need to fix any problems indicated before your submission will beaccepted.5. Once your program has been tested, the page will tell you to refresh for results, so refresh the page.You should see green, red and grey boxes. Each box corresponds to a test; a red box indicates thatyour program has failed the respective test, a green box indicates that your program has passed thetest, and a grey box indicates that the test is hidden (you will not see the result of the test until afterthe due date).6. If you have red boxes, you can see which tests were not passed by clicking on the task name. Correctthe errors (go to Eclipse, re-write your code and test it carefully) and then submit again in PASTA.7. For further help on using PASTA, check the INFO1103 User Manual, or post a question on Piazza.MarkingYour mark is the percentage of the tests that you have passed, e.g. for Task 2: all 20 tests passed, themark is 100% of 5 marks = 5 marks, 10 tests passed, the mark is 50% of 5 marks = 2.5 marks.You can submit as many times as you want. Please make sure that your program compiles and runsbefore you submit it in PASTA. Your last submission will be the one that will be marked.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C#代写： Exemption exam for ECS 102 - Java","slug":"page68","date":"2016-12-19T03:07:34.000Z","updated":"2017-01-11T08:20:34.224Z","comments":true,"path":"2016/12/19/page68/","link":"","permalink":"http://yoursite.com/2016/12/19/page68/","excerpt":"","text":"Introductionjava的基础知识考试，考察了基本的java语法RequirementExemption exam for ECS 102 - Java The goal of this exam is to give recognition for programming you already know, so you can fulfill a requirement and move on to learning something new. If you already know C don’t plan on taking ECS102 to learn C. You already know some fundamentals of programming, and you can learn the syntax of Java in a weekend if you need it. This is a closed book exam. You are writing code without running it. Please answer the questions in this Word document, immediately below the question. Use as much space as you need. If you do not remember the exact syntax of a statement, make your best guess and continue. If you don’t know how to do a part of a problem, do as much of it as you can, writing a note about what you don’t know how to do. Send solutions to mjbaruch@syr.edu. Use “ecs102 exemption exam” as the Subject to make sure I see it and process it promptly.Your name:_ Your SU ID#:__Campus email: ___Major:__ECS102 section_How did you learn programming? _Have you taken the Computer Science AP exam? If so, what did you get? __1. Write a method, convert, that converts a length from metric to British measure or from British to metric measure. You may not assume any global variables. There should be a parameter conv_type where the user can tell the method which kind of conversion to do (British to metric or metric to British). There should be a parameter orig_length, the length in the original unit. The return value should be the length in the new units.British lengths are in inches.Metric lengths are in centimeters.You may use the values of 2.54 cm is 1 inch and 0.39 inches is 1 cm.If conv_type is ‘B’ or ‘b’ then the conversion is from British to metric.If conv_type is ‘M’ or ‘m’ then the conversion is from metric to British.If conv_type is any other character, then Invalid Conversion is printed and -1 should be the returned function(method) value.For example, if we have bl = 10.0; ml = 0.0;Then after the call ml=convert(‘B’, bl);we should have ml is 25.4 bl is 10.0because 10 inches is equal to 25.4 cm.2. a) I have an array with ten thousand numbers, in ascending order. I want to find the index (subscript) of a particular number, if it is in the array. Is it better for me to use a binary search or a linear search? Why?b) I have an array with ten thousand numbers that is unordered. I want to find the index (subscript) of a particular number if it is in the array. Is it better for me to use a binary search or a linear search? Why?3. Consider the following code:public static int mystery( int n ){ if ( n = = 1) return 1; else return (2 * mystery(n-1) + n);}Fill in values in the table below:n mystery(n)1234. Assume you have access to the methodpublic static int myrand( );that returns a random integer in the range 0 to 100,000 with uniform probability. (That is, every whole number is equally likely to come up.) You do not have to write this method, and you should not use a built in random method. Use myrand for this problem.You are given the code segment:char[] cards=new char[15];int i;for (i=0; i","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C#代写： Assignment 1 – Calculator","slug":"page67","date":"2016-12-18T01:04:51.000Z","updated":"2017-01-11T08:14:16.591Z","comments":true,"path":"2016/12/18/page67/","link":"","permalink":"http://yoursite.com/2016/12/18/page67/","excerpt":"","text":"Introduction用c# Web Form完成一个简单的计算器功能，要求有几个按钮和窗口，任务1是能实现简单的加减乘除计算，任务2是二进制和十进制之间的转化，任务3是计算二进制位数RequirementINFS3204/7204 Assignment 1 – CalculatorThe goal of this assignment is to explore the basics of ASP.NET WebApplications and C# programming language. All assignments will have tobe developed with Microsoft Visual Studio 2015 using C# as theprogramming language. No other languages will be accepted. Thisassignment contributes to 10% of your overall grade. You mustdemonstrate this assignment to your lab tutors during your scheduled labsession in week 5. Note that you also need to submit your code onBlackBoard before 11:59pm Sunday 28/08/2016.This assignment is divided into 3 tasks:• Creating an ASP.Net Web Application using Web Form (2 Marks)• Performing basic calculator operations and converting the result from base-10to base-2 (5 Marks)• Counting the number of digits in base-2 number (3 Marks)Please Note INFS7204 students will have to complete all three tasks,while INFS3204 students only need to complete the first two with 3Marks for Task 1 and 7 Marks for Task 2.• Preparation• Before attempting to do this assignment, you should have a basicknowledge of how to use Microsoft Visual Studio 2015 to createASP.NET Web Forms, as well as a basic knowledge ofprogramming with C#. Please note that you need to choose .NETFramework 4.6 for your assignments. You also need to haveWindows 7 (or later versions) installed on your computer.• Hints: Please be advised that the design and implementation of thisassignment is totally up to you. However, you may need to ensurethat you are familiar with the concept of ‘Recursive Functions’ anddefining ‘Global Variables’ to implement some parts of thisassignment.• Microsoft Visual Studio 2015 Free Download: If you would liketo install the Microsoft Visual Studio 2015 on your own computer,as a student, you can download it for free from the following links:https://www.dreamspark.com/Student/Default.aspxhttps://beta.visualstudio.com/download-visual-studio-vs/Task 1: Creating an ASP.NET Web Application (2 Marks)Create a Calculator Web Application with Web Form, which consists ofthe following elements:• Two TextBoxes for the user’s inputs• A DropDownList for the user’s choice of operation• Two Labels that indicate the result’s base system (i.e. base-10 orbase-2)• Four TextBoxes for displaying the calculating results and countingresults.• Two Buttons to submit the form and get the resultYour final application should look like the example below. However, youmay decide to design and implement this application more interestingly.Please note that you are not required to validate the user’s input for thisassignment.Task 2: Performing basic calculator operations andconverting the result from base-10 to base-2 (5 Marks)In order to complete this task, you need to implement the basic calculatoroperations (i.e. +, -, *, /). When user enters two numbers and clicks on theCalculate button, the result of the operation should be displayed in thebase-10 output TextBox. Additionally, the result needs to be convertedfrom base-10 to base-2 system and be displayed in the base-2 outputTextBox.For example, if user inputs 34+56, it calculates 34+56=90, the base-2conversion number of 90 is 1011010. Please see the following picture:Task 3: Counting the number of digits in base-2 number (3Marks)In this task, you need to count the number of “0”s and “1”s in the base-2calculation result. When the calculation of Task 2 is done and user clickson the Count button, the number of “0”s and “1”s need to be displayed intwo output TextBoxs.For example, as you can see in the following picture, the number of “0”sin 1011010 is 3, and the number of “1”s in 1011010 is 4.","categories":[],"tags":[{"name":"C#","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写： AP Assignment 1 s2 2016","slug":"page66","date":"2016-12-15T23:06:55.000Z","updated":"2017-01-11T07:55:16.124Z","comments":true,"path":"2016/12/16/page66/","link":"","permalink":"http://yoursite.com/2016/12/16/page66/","excerpt":"","text":"Introductionjava实现一个旅行售票管理系统，这个题主要考察学生的java基础知识，编程逻辑能力，类的设计和OOP知识，功能点比较多，细节点也比较多。RequirementCOSC1290/1295 Advanced Programming / Java for C ProgrammersSchool of CS and IT, RMIT UniversityAssignment 1 – Semester 2 2016 – UPDATEDDue date: 5.00pm, September 12, 2016IntroductionYou are required to implement a basic Java program using Java SE 7.0 or above.This assignment is designed to help you:1. Test your knowledge of basic Java concepts;2. Evaluate your ability to design programming logic;3. Practise your knowledge of class design and OO constructs in Java;4. Practise error handling in Java;5. Develop a reasonable sized application in Java.This is an individual assignment and worth 15% towards your final grade..Academic Integrity (more)The submitted assignment must be your own work. No marks will be awarded for any partswhich are not created by you.Plagiarism is treated very seriously at RMIT. Plagiarism includes copying code directly fromother students, internet or other resources without proper reference. Sometimes, studentsstudy and work on assignments together and submit similar files: this may be regarded asplagiarism.Please note that you should always create your own assignment even if you have very similarideas. Plagiarism-detection tools will be used for all submissions. Severe penalties may beapplied in cases of plagiarism, including loss of all marks or, in repeat cases, expulsion fromthe course.At any point, but especially during the scheduled lab-demonstrations, you may be required toshow and explain your design and code to any of the teaching staff.General Implementation Details All input data should be read from the standard input and all output data should beprinted to the standard output. There is no need to use files all. If the input is formatted incorrectly the execution should stop immediately and anappropriate error message should be displayed. Marks will be allocated to your class design. You are required to modularise classesproperly—i.e., to use multiple methods as appropriate. No method should be longerthan 50 lines. Marks will be allocated to proper documentation and coding layout and style. Yourcoding style should be consistent with standard Java coding conventions(https://google.github.io/styleguide/javaguide.html) Your programs will be marked on RMIT UNIX machines using Java SE 7.0. Makesure you test your program on these machines before you submit. Further hints, tips and details, including submission instructions, will be made viaBlackboard and in lectures.Overall SpecificationYou will implement an electronic ticket for public transport, called MyTi (My Ticket). A MyTi can be “charged” by adding credit to it: initially, a MyTi has zero credit; a MyTican hold up to $100 of credit. Any attempt to add credit that goes above the limit causes an error message and for thecharge to fail. Amounts to be credited to a MyTi must be integer dollar amounts in precise multiples of$5.00. Travel Passes can be bought using a MyTi ticket: a pass can be for either “2 Hours” or“All Day”, and can be for either “Zone 1” or “Zone 1 and 2”. Prices are as follows:o 2 Hour Zone 1 pass: $3.50o 2 Hour Zone 1+2 pass: $5.00o All Day Zone 1 pass: $6.90o All Day Zone 1+2 pass: $9.80 If you attempt to purchase a travel pass without sufficient credit on your MyTi ticket thenthe attempt fails: no ticket is issued and there is no charge to your ticket.Your system must handle multiple MyTi tickets, each with its own unique id—the id will beused to identify which MyTi ticket is being used / charged / etc.Journeys and Travel PassesThe MyTi system is designed to automatically combine multiple Journeys in a day by oneUser into the cheapest Travel Pass that covers those Journeys. For example, if a User travelstwice inside 2 hours, then a 2 Hour pass is purchased. However, if the user travels again laterin the day, the 2 Hour pass may be turned into an All Day pass if that is cheaper than 2 2-Hour passes.Each time the user asks for a new Journey, the previously purchased Travel Pass should bechecked:1. If the current Travel Pass is an All Day and we are in the day and the pass covers thejourney zones, then a new Travel Pass does not need to be purchased;2. If the new Journey fits inside the 2 Hours of the current Travel Pass, then a newTravel Pass does not need to be purchased;3. If the current Travel Pass is a 2 Hour and the new Journey is outside that time, then anew 2 Hour Pass needs to be purchased.TravelPass objects should store the information needed for all decisions described above(e.g. whether to add a new Journey into an existing TravelPass).To purchase a Travel Pass take a Journey, the system user must be prompted for:- The id of the MyTi card is to be charged to be used;- the day of travel, the start time and the end time;- the starting Station and end Station of the journey.BONUS: The above means that users may spend more on Travel Passes than they needed to:e.g., they may end up buying multiple 2-hour travel passes instead of one All Day pass. Abonus task is implement logic that always results in the cheapest Travel Pass options:1. IF the new Travel Pass means that all that day’s Passes would add up to cost morethan a All Day Pass—then all the Passes for that day are replaced by a single All DayPass; in this case the MyTi card is charged the difference between what has alreadybeen paid that day, and what an All Day Pass would cost.2. You have to do similar thinking about when different Journeys are in different Zones!I’ll leave that to you to think about If you try to purchase a Journey that requires a new Travel Pass, or an upgrade from 2 Hourto All Day, and there is not enough credit left on their MyTi card, then the purchase of thatJourney must fail (with an Exception), and the user told they need to recharge their card.UsersA MyTi ticket can be associated with one unique User. The MyTi ticket needs to store detailsof its user, such as name and email address. A User needs to have access to their MyTi card.Day and TimesTo make things easier (and to run demos in less than real time!) you will type in the day andtimes of Journeys (rather than using a System call to get them automatically). Using a “24hour” time representation should make it easy to determine the length of Journeys. Note thata Journey fits inside a 2 Hour pass if it ends before the end of the 2 Hour period. An All Daypass covers all journeys that start inside that day and runs from midnight to 23:59pm.StationsStations have a unique name and each Station can tell which Zone it is in.Admin FunctionsYou also need to implement the following system administration functions:- On request, print all TravelPasses purchased on all MyTi cards. This list shouldordered by card id. For each TravelPass, list the Journeys that were in it;- Print usage statistics for all Stations: i.e., how many journeys started at each Station,how many finished at each Station;- Create a new User: this requires input of a new id (the operation fails if it is already inuse), name, type (Adult, Junior, Senior), and email address.Program DevelopmentWhen implementing large programs, especially using object-oriented style, it is highlyrecommended that you build your program incrementally.This assignment proposes a specific incremental implementation process: this is designed toboth help you think about building large programs, and to help ensure good progress! You arenot strictly required to follow the structure below, but it will help you manage complexity.Part A (1 mark): Extend existing codeSample code implementing the outline of menu-based main program will be made available.1. Design the TravelPass class to contain all data and operations it needs (e.g. the Zoneand Duration; Day and Start/End times);2. Define Exceptions to handle problems/errors. These may include: trying topurchase a pass without having enough funds; recharging by an invalid amount;invalid menu options or inputs, etc.Part B (1 mark): Class DesignDefine all the classes and interfaces needed for the described system. In particular, youshould try to encapsulate all the appropriate data and operations that a class needs. This maymean some classes refer to each other (e.g., the way Account refers to Customer).At this point, you may just want to think about the data and operations and just write thedefinitions, not all the code.You will be submitting or demonstrating your class design in tutes or labs before thedue date. Details will be announced in lectures and on Blackboard.Part C (3 marks): Main ProgramYour main program should be in a class called MyTiSystem. (Of course, any class cancontain a main(); this is useful for testing that class.) The main program contains a menu thatoffers the following options in a loop:1. Buy a Travel Pass using a MyTi card2. Recharge a MyTi card3. Show remaining credit for a MyTi card4. Purchase a Journey using a MyTi card5. Print all Journeys made using all MyTi cards6. Show Station statistics7. Add a new User8. QuitSince we managing multiple MyTi cards, we have to enter a card’s id to know which MyTiticket to charge for a travel pass.Part D (4 marks): Implement Core FunctionalityImplement the core functionality of the MyTi system described above, except for thecomplex decision-making around deciding whether a journey fits inside an existingTravel Pass—i.e. in this version, just have the system buy a 2 Hour Travel Pass for eachJourney. You should be able to implement the rest of the MyTi functionality described above,and run and test your systemPart E (1 marks): Include Multiple Journeys in Travel PassesImplement the logic that decides whether a new Journey fits inside an existing Travel Pass orwhether the user needs to buy a new Travel Pass for that Journey.Demos (1 mark each – 2 marks total)You are required to demonstrate your progress and final solution to the teaching staff twice.Details will be made available during lectures and on Blackboard.Other (3 marks)Marks will be awarded for coding style, documentation/comments, code layout and clarity,meaningful error and other messages, proper error handling, choice of data structures andother design decisions. You are encouraged to discuss such issues with your tutors and labassistants, or with the coding mentors.Bonus (1.5 marks each) Implement logic, or “business rules”, for combining Travel Passes so that the user ischarged the cheapest Travel Pass that fits their day of travel. You are welcome to discussthe logic and different conditions via Blackboard Discussion boards; however, everystudent must implement the final Java solution by themselves. There will be another bonus task announced later on for students that would like tochallenge themselves further.Test DataYour program MUST include the following test items: just create them in your main programand use them to populate your data structures that keep track of all such items. These will beused to test/mark your program so it’s crucial that you enter them. You may add further Usersand Stations if you wish, but you must add at least the ones below. Users (id, type, name, email)o lc, Lawrence Cavedon, lawrence.cavedon@rmit.edu.au Stations (name, zone)o Central, 1o Flagstaff, 1o Richmond, 1o Lilydale, 2o Epping, 2Sample Test RunsSample runs demonstrating behaviour of the system will be provided on Blackboard.SubmissionAssignment submission will be via Blackboard, by 5.00pm, Monday September 12 2016.You can submit your assignment as many times as you want before the due date. Eachsubmission will overwrite any previous submissions.1. You need to submit a class diagram (in pdf, gif or jpeg format).2. You are required to submit your .java files weekly via Blackboard. Your progress willbe taken into consideration in marking. Further details will follow.3. You must include a README file. This should describe how to run your program,what extra functionality you implemented, any standard functionality you know doesnot work, and any problems or assumptions. If the tutors have any problem runningyour program and the README does not help then you will lose marks.4. There will also be demos for this assignment. You will be asked to demonstrate yourprogress and/or explain your design. Details of the demo will be announced onBlackboard and in lectures.5. For the code submission, you must include only the source files in your submission(do not submit any *.class files!). Your code must on under RMIT UNIX machines.6. Late final submissions will incur a penalty of 10% per day. Submissions made 5 daysafter the due date will receive no marks.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Python代写： ass4","slug":"page65","date":"2016-12-15T03:56:57.000Z","updated":"2017-01-11T07:51:13.084Z","comments":true,"path":"2016/12/15/page65/","link":"","permalink":"http://yoursite.com/2016/12/15/page65/","excerpt":"","text":"Introduction用python实现二叉搜索数的功能，在原来的模板基础上，增加题目要求写的方法，实现功能并且最后完成测试RequirementYou may begin this assignment with the sample BST code.Add the following functionality to the code:1. Modify the code so that each node stores not only a number (which is used as the sort value (or “key”) of the node), but also a string containing the name of a person. So, the root node of a BST may contain for its data: [40, “Wendy”], the left child of the root may be [18, “Carol”]. Modify all functions that this change affects.2. Add a function called “changeLeaves” which changes the person’s name contained in the leaf nodes to “Leif”. Recall that a leaf node is one that has no children. Your function should take one parameter, the root of a BST, and it should return the root of the (changed) tree.3. Add a function called “countNodes” that counts the number of nodes that contain names starting with “w” or “W”. Your function should take one parameter, the head of a BST and it should return the number of nodes matching the given condition.4. Add a function called “printReverse” that prints all the nodes in reverse order. That is, the node with the largest numerical value is printed first and the node with the smallest numerical value is printed last. Your function should take as a parameter the root of a BST and it should return nothing.5. Write a function that will convince the TA that your code works. Be sure to explain what you are showing. You should cover special cases such as empty trees.What to SubmitSubmit a single file containing your entire program. DO NOT ZIP THE FILE. You do not need to include the data file. We will test your program on a different grid.Be sure you document your program appropriately. Each function should include a header comment explaining what the function does, what the parameters are and what it returns.MarkingThe assignment will be marked using a rubric. Rubrics provide a guide to the TAs however they are not all inclusive. We may deduct marks for unanticipated errors.I do not give extensions on assignments. A 24 hour extension is available to everyone but comes with a 2 mark penalty. Please do not ask for another extension unless you have a very, very good reason.Academic IntegrityPlease refer to the notes on Academic Integrity. It is ok (and encouraged) to talk about solutions with your friends but please do your own work. It is also ok to take snippits of code from the internet as long as the code does not solve the entire problem. If you use snippits of code, please document it in your comments by adding a URL indicating where the code came from.“””This module implements binary search trees.The tree elements may be of any type. Duplicates are not allowed.Example for CISC 121“””# A BST node is a dict with three elements:# 1. data: the value in the node# 2. left: a reference to the left subtree# 3. right: a reference to the right subtree# Prints an indented display of the tree – useful for debugging.# The output will look kind of like a sideways version of a drawing# of the tree.def display(tree, indent=0): if tree == None: # empty pass else: # right tree first (so it’s on the right when you tilt your # head to the left to look at the display) display(tree[‘right’],indent+1) print(“ “ * indent + str(tree[‘data’])) # now the left tree display(tree[‘left’],indent+1)# adds a value to a BST and returns a pointer to the modified BSTdef add(tree, value): if tree == None: return {‘data’:value, ‘left’:None, ‘right’:None} elif value &lt; tree[‘data’]: tree[‘left’] = add(tree[‘left’],value) return tree elif value &gt; tree[‘data’]: tree[‘right’] = add(tree[‘right’],value) return tree else: # value == tree[‘data’] return tree # ignore duplicatedef printValues(tree): if tree == None: return printValues(tree[‘left’]) print(tree[‘data’]) printValues(tree[‘right’])def main(): myTree = None #create an empty tree #Create a tree with the nodes [20, 2, 25, 14, 1, 23, 75, 93, 74] #Note that the add function always returns the root of the BST! myTree = add(myTree, 20) myTree = add(myTree, 2) myTree = add(myTree, 25) myTree = add(myTree, 14) myTree = add(myTree, 1) myTree = add(myTree, 23) myTree = add(myTree, 75) myTree = add(myTree, 93) myTree = add(myTree, 74) display(myTree, 0) printValues(myTree)main()","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C++代写： CS  162 Intro  to  Programming  III","slug":"page64","date":"2016-12-14T03:26:52.000Z","updated":"2017-01-11T07:48:03.917Z","comments":true,"path":"2016/12/14/page64/","link":"","permalink":"http://yoursite.com/2016/12/14/page64/","excerpt":"","text":"Introduction根据给的类图，实现一个优先级队列，完成类接口和重写hashCode函数，实现displayTodoList ，displayOrdered ，addTask ，removeTask ，alterTaskPriority 等等方法的实现Requirement1.0 System AnalysisThe class diagrams for this project is as following:2.0 System DesignTask class used to store a task information. It’s implements the Comparable Interface and rewrite the equals and hashCode function.This program give each task an id. We access the task by id and do the operation.Todo class provide the following operations:Function displayTodoList display a list of all tasks on screen.Function displayOrdered display a list of all tasks orderd by priority and due today on screen.Function addTask add a task to the list.Function removeTask remove an item from the list.Function alterTaskPriority alter the priority of a task.Function alterTaskDue alter the due of a task.Function readFromFile read a list of tasks from a text file and load the data into field taskList.Function writeIntoFile storage all the tasks into a file.3.0 Test PlanCase1: display all the tasks 1| read the chapter1 of algorithm| 0| todo 2| clean the table| 2| done 3| make lunch| 1| todoCase2: display all the tasks ordered by priority 2| clean the table| 2| done 3| make lunch| 1| todo 1| read the chapter1 of algorithm| 0| todoCase3: add a task : clean the floor 1| clean the table| 2| done 2| make lunch| 1| todo 3| read the chapter1 of algorithm| 0| todo 4| clean the floor| 0| todoCase4: remove a task, id: 2 1| clean the table| 2| done 2| read the chapter1 of algorithm| 0| todo 3| clean the floor| 0| todoCase5: alter a task’s priority, id: 3 priority: 4 1| clean the table| 2| done 2| read the chapter1 of algorithm| 0| todo 3| clean the floor| 4| todoCase6: alter a task’s due, id: 3 due done 1| clean the table| 2| done 2| read the chapter1 of algorithm| 0| todo 3| clean the floor| 4| done","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写： CS  162 Intro  to  Programming  II","slug":"page63","date":"2016-12-11T13:20:53.000Z","updated":"2017-01-11T07:43:40.755Z","comments":true,"path":"2016/12/11/page63/","link":"","permalink":"http://yoursite.com/2016/12/11/page63/","excerpt":"","text":"Introductionc++的入门题，练习vector的使用方法，push_back(),pop_back(), []. clear()等等方法的联系使用,最后在描述和vector和array的区别RequirementCS 162Intro to Programming IIVectors1Vectors– A container from the Standard Template Library– Holds a set of elements, like an array– Flexible number of elements - can grow andshrink• Similar to a dynamic array• Must include vector header file to use vectors#include Vectors• Can hold values of any type– Type is specified when a vector is definedvector scores;vector volumes;• Can use [] to access elements• scores[3]• volumes[0]Defining Vectors• Define a vector of integers (starts with 0elements)vector scores;• Define int vector with initial size 30 elementsvector scores(30);• Define 20-element int vector and initialize allelements to 0vector scores(20, 0);• Define int vector initialized to size and contentsof vector finalsvector scores(finals);Growing a Vector’s Size• Use push_back member function to addan element to a full array or to an arraythat had no defined size// Add a new element holding a 75scores.push_back(75);• Use size member function to determinenumber of elements currently in a vectorhowbig = scores.size();Removing Vector Elements• Use pop_back member function toremove last element from vectorscores.pop_back();• To remove all contents of vector, useclear member functionscores.clear();• To determine if vector is empty, use emptymember functionwhile (!scores.empty()) …Vector Func","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写： Final  Project,  Part  1","slug":"page62","date":"2016-12-10T14:24:23.000Z","updated":"2017-01-11T07:41:22.324Z","comments":true,"path":"2016/12/10/page62/","link":"","permalink":"http://yoursite.com/2016/12/10/page62/","excerpt":"","text":"IntroductionC++完成一个互动的小游戏，需要按要求设计抽象类Game，Actor，Swan，Player等等类。对面向对象设计思想要求比较高，游戏规则简单介绍一下，玩家上下左右逃生到出口，然后有苹果可以吃，也会碰到魔鬼被吃掉，赢的条件是安全逃到门口RequirementFinal Project, Part 1Read the last page first!Grading: You will NOT be demonstrating your final project! This means you must spendmore time on the reflections, design and test documents. The grader will not be able to askyou questions. If the grader has a question that is not answered in your supplieddocumentation then you will likely lose points.You will create a program that will enable the user to move through a maze. The mazewill contain locked doors that require keys to be opened. Guarding the maze are rovingkiller swans. The player isn’t completely defenseless as swans aren’t able to harm aplayer who has recently consumed an apple. To escape the maze, the player mustnavigate through the maze, swans, and doors until they reach a ladder. Each maze levelcontains one ladder that takes the player to the next level of the maze until the final levelis reached. On the final level there is an exit instead of a ladder.Baba Yaga is back! She has captured the player. Her soulless minion didn’t lock thedoor correctly so the player can try to escape. She uses killer swans as the guards. Eachlevel starts with one swan. Baba Yaga knows the player has left the cell but can onlysummon one new swan at a time. For every 30 steps the player takes, a new swan willrandomly appear on the current level.The player will also encounter apples lying around the maze. The player can pick up andcarry up to two apples at a time. As long as the player has an apple in their inventory,they may stop and eat it in order to render them invulnerable to swans for the next 15steps.Your code will implement this game as follows:You will start your game with a single command line argument. This will be an integervalue that indicates the number of levels. The floor files will be named floor_# where #indicates which floor it holds. Your program will always start reading with the first floor.An example of running the game with a maze that has 3 floors:./maze 3 (assumes name of first floor is: floor_1)The maze is defined by a set of text files, each of which contains a single level.Whenever the game starts or the player reaches a new level, that data must be read fromthe appropriate text file. The first line of each file will have two integer values whichdescribe the number of rows and columns for that level. You must use this to create adynamic array of that size and then read in the data for the level. Perform inputvalidation on all characters in the file as you read them. Do not load the file and informthe user there is a problem.The following characters or symbols describe objects in the levels:‘#’- walls‘D’- door‘L’- Ladder‘P’- Player‘S’- Swan (the starting location of the first swan)‘K’ Key‘A’- Apple‘E’- Starting location for each level‘X’- Exit(one way out)‘ ‘- empty space (blank character)You must concatenate the file name with the new floor number. You will not use anarray of filenames? HINT: This will require string streams.You must display that level to the user. Then you will accept the following commandsfrom the user:‘w’ move up‘a’ move left‘s’ move down‘d’ move right‘e’ eat apple‘u’ use ladder‘q’ quitEach input from the user must be validated before any action takes place. After eachcommand, you will update the array, then print the current status of the game to thescreen. Each command is one “step” which you will use to coordinate movement andsummoning of the swans.You will update the position of the player and all swans after every move entered by theplayer. The K (key) and A (apple) symbols will be removed from the maze after theplayer picks them up. The D (door) is removed once the player enters that space with akey. To move between floors, the player must get to the space with the ladder. On thefinal level the player must reach the X to exit the maze and make their escape.The position of each Actor (Swan or Player) will not be stored in the array. It will bestored in the Player or Swan object. When you read in the initial floor array the ‘S’should be changed to a blank character. When you display the floor after each move youwill print the array, adding a ‘P’ or ‘S’ as appropriate for each Actor.Movement- To move around a level the players must use the ‘W’, ‘A’. ‘S, and ‘D’ keys.Your move function should prevent them from moving through walls, or a door if theydon’t have a key. If the player has a key then they can move through a door. Simplyremove a key from the player and convert the D space to an empty space assuming theuser has at least one.When the player gets to a ladder space they climb it with a ‘U’ command. The Echaracter designates where the player starts on the new level. Time (i.e. the number ofsteps) is reset on each new level. When the player moves from the starting space, the Emust remain. If a swan catches a player, their location must be changed to the E square.After each move, the updated maze must be displayed for the user.When the player moves into a space that contains a key (‘K’) they pick up the key to addit to their inventory. When a player moves into a space with an apple (‘A’) they pick itup. A player can hold no more than 3 keys and they can carry only 2 apples. If they entera space and cannot hold the key or apple it remains in that space. The player can use anapple by eating it (‘E’). This makes the swans ignore the player for the next 15 turns,decreases the apples the player has by 1, and takes an entire step/turn (i.e. they don’tmove that step).Swans (10 points): The Swans will be similar to the Player, except they move randomly.They cannot move through walls or doors. They will ignore apples on the ground. If aswan is in a square adjacent to the player, the player will be moved back to the startingspace for that level. The swans cannot move between levels. For every 30 steps the playertakes, place a new swan at a random valid location in the current level.Classes. You will need the following classes:Game class- dynamic array for current floor, array of pointers to actors, int total#_floors,int current_floor, function to read in floors from a fileFloor class- char [][] tiles, void print to screen, constructorActor class: ABSTRACT- int row, int column, char symbol, virtual moveSwan class (inherits Actor)- move (automated),Player class (inherits Actor)- move (prompt for WASD), keys(s), hold up to 3 keys, holdup to 2 apples(You will need a function to send the player back to the start if a swan movesadjacent to their position. Where do you put that function?)You must include a makefile and put all files for your assignment in a zip file. Eachclass must have separate source and header files. If you do not do this assignment willNOT be graded.Grading:• programming style and documentation (10%)• read and create each maze level properly (5%)• the player and swans move through the maze correctly (10%)o the apples are picked up and used correctly (5%)o the keys are picked up and used correctly with the doors (5%)o the swans send the player back correctly (5%)• create the Game class and object (5%)• create the Actor class (5%)• create the Swan class and object (10%)• create the Player class and object (5%)• input validation for commands and reading the files (10%)• reflections document to include the design description, test plan, test results, andcomments about how you resolved problems while designing and implementing yourprogram (20%)You must include a makefile put all files for your assignment in a zip file. If you do notdo this assignment will NOT be graded.Each class must have separate source and header files. If you do not do this assignmentwill NOT be graded.If your program segfaults at anytime, you will lose 20 points.Design your ProgramAs always you should sit down with pencil and paper and sketch out the design. Developthe necessary algorithms. Do a desk test, i.e. walk through your algorithms and code tolook for logic errors.Nope! No keyboard yet! Now design your incremental development. Your programshould be decomposed into functional units. If not, go back to the previous paragraph.Look at the pieces and decide on the order you should use to implement and test eachpart. Reading the floor into your program and then moving an actor are probably goodplaces to start. Then add a level to test using the ladder. Once you have the developmentyou are ready!Nope! No keyboard yet. ? Design and organize the directories for your project. Youshould have a working directory. Maybe you need a subdirectory to hold the your floorplans. Have you designed your floor plans? What is there to design? Maybe you canhave a floor that allows you to test only one function or command at a time? Be carefulwith file names. The default first file always has the same name. If you overwrite onethen you’ll need to create it again. Always have one directory to save a copy of yourcode as you get each increment to compile. If you’re paranoid (I know I am) maybe youhave more than one stash and on different devices?Now, you’re ready to code!The moral is: Always plan ahead and make it as complete as you can!","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写： Assignment 1","slug":"page61","date":"2016-12-09T11:54:23.000Z","updated":"2017-01-11T07:37:23.378Z","comments":true,"path":"2016/12/09/page61/","link":"","permalink":"http://yoursite.com/2016/12/09/page61/","excerpt":"","text":"Introduction完成一个java订票管理系统，包括买票，卖票，退票，学生票等等功能,内容细节比较多，需要要求的功能也比较多,RequirementITECH1000 / ITECH5000 Programming 1 1620CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 1 of 9Assignment 1OverviewThis is an individual assignment that requires you to design, develop and test a small procedural Javaprogram.Timelines and ExpectationsPercentage Value of Task: 20%Due: 16:00 Friday the 9th of September (week 7)Minimum time expectation: 10 hoursLearning Outcomes AssessedThe following course learning outcomes are assessed by completing this assessment: Identify and use the correct syntax of a common programming language Recall and use typical programming constructs to design and implement simple softwaresolutions Reproduce and adapt commonly used basic algorithms Utilise pseudocode and/or algorithms as a major program design technique Write and implement a solution algorithm using basic programming constructs Demonstrate debugging and testing skills whilst writing code Develop self-reliance and judgement in adapting algorithms to diverse contexts Design and write program solutions to identified problems using accepted design constructsITECH1000 / ITECH5000 Programming 1 1620CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 2 of 9Assessment DetailsThe Federation University Australia Olympic Games are about to commence! The games have beenscheduled to begin on Saturday 8th October 2016, competitors are busy training and now it’s time toprepare to sell spectator tickets.Your task is to design, develop and test a small application for recording ticket sales to this event.Stage 1: DesignThis stage requires you to prepare documentation that describes the function of the program and howit is to be tested. There is no coding or code testing involved in this stage. A document template hasbeen provided for your use.Requirements:1) Read through Stage 2: Program Development to obtain details of the requirements of thisprogram.2) Write an algorithm that describes how the program will operate.a. All program requirements – base, standard and advanced – must be included, even if youdo not end up including all these requirements in your program code.b. The algorithm must be structured logically so that the program would function correctly.3) Prepare and document test cases that can be used to check that the program works correctly,once it has been coded. You do NOT need to actually run the test cases in this stage; this willoccur in Stage 3: Testing.a. All program requirements – base, standard and advanced, must be included, even if youdo not end up including all these requirements in your program code.b. Make sure the test cases include checking of data entered by the user to make sure thatonly valid data is accepted. If the user enters invalid data, the user should be informed ofthis and given another chance to enter the data. NB: As we have not covered exceptionhandling, you may assume that the user will always enter an integer.c. Test cases should be documented using a template like the one below. You may includeextra information if you wish. At this stage, the Actual Result column will be left blank.Test Case Expected Result Actual ResultThe user selects to purchase adulttickets.The user is prompted toenter the number oftickets to purchase.CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 3 of 9Stage 2: Program DevelopmentUsing the Design Documentation to assist you, develop a Java program that records spectator ticketsales at the gate for the Federation University Australia Olympic Games, implementing therequirements outlined in this section. These requirements have been broken into three groups: Base Functionality includes the minimal level of requirements to achieve the essentialcomponents of this assignment. This group of requirements focuses on getting the code towork and on using the programming constructs we cover in class. You can expect to useconstants, variables, loops, conditional statements and arithmetic operators for theserequirements and you should look for opportunities to use these wherever you can. You will notreceive full marks for implementing a requirement, even if it works, if you have not used theappropriate programming construct to do so.At this level, you can decide if it is easier for you to code everything within a single method, orto modularize it straight away. Standard Functionality ensures the code is modularized, and that method calls are used toensure the program flows correctly. It allows data to pass from one method to another asparameters. It also includes providing a running total of tickets within an order, which is notessential for getting the program to work, but is useful information for the user to see. Advanced Functionality provides a challenge task, and is best left until all the other requirementshave been addressed. It requires looking at a Java API to find out how to use a class we havenot covered in the course, and using this to provide a countdown of days remaining until thegames commence.All three groups require that you follow coding conventions, such as proper layout of code, usingnaming conventions and writing meaningful comments throughout your program.Base Functionality:1. Display a welcome message when the program starts The welcome message should have a row of asterisks at the top and the bottom, just longenough to extend over the text. Hint: Use a For loop for this. The first line of the message should read “FEDERATION UNIVERSITY AUSTRALIAOLYMPICS” and be approximately centred in the row of asterisks by printing white spacefirst. Hint: Can you modify the For loop from the previous step to print the white spaces? A second line of the message should be blank. The third line should read “Developed by” followed by your name and a comma, then “student ID ”, then your student id, then finally “ for ITECH1000 Sem 2 2016”. The fourth line should be blank.CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 4 of 92. Provide a menu from which the user can select to Purchase Tickets, View Ticket Sales or Exit.This menu should be repeated each time after the user has chosen and completed an option untilthe user chooses to Exit. The user selects an option by entering the number next to it. If aninvalid number is selected, the user is advised and shown the menu again to make anotherselection.3. When the user selects the Purchase Tickets option, provide another menu from which the usercan select General Admission Tickets, Student Tickets, Finalise Order or Cancel Order. The userselects an option by entering the number next to it. If an invalid number is selected, the user isadvised and shown the menu again to make another selection.a. Should the user select General Admission Tickets or Student Tickets, they are promptedto enter the Number of Tickets required. After entering the number of tickets required,they are returned to the Ticket Purchasing Menu so that they may choose to purchaseadditional tickets. The user may not choose to purchase a negative number of tickets, buta purchase of 0 tickets is permitted.b. Should the user select Finalise Order:i. The sale is processed by displaying the number of each type of ticket purchasedand the total cost of the tickets in this order. A General Admission ticket costs$13.50; a Student ticket costs $7.75.ii. A record is kept of the total cost of tickets sold, the total number of adult ticketssold and the total number of child tickets sold. This is a combined total from allorders; there is no need to keep a record of the number of tickets in eachindividual order.CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 5 of 9iii. The user is returned to the menu from Step 2.c. Should the user select Cancel Order:i. The order is cancelled and a message displayed to confirm this to the user.ii. The user is returned to the menu from Step 2.4. When the user selects the View Ticket Sales option, display the total value of ticket sales and boththe total number of adult tickets and the total number of child tickets sold across ALL orders.Highlight this message display with a row of 50 asterisks before and after the message. After thefinal row of asterisks, redisplay the menu from Step 2.5. When the user selects Exit System, quit the program with a message to the user.CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 6 of 9Standard Functionality:6. Update the Ticket Purchasing Menu so that a running total of tickets included in an order isdisplayed until the order is finalized7. Modularize the code, correctly using method calls and passing data between methods asparameters.Advanced Functionality:8. Update the Welcome Message to include a countdown of the number of days to go until thegames begin.a. Use the GregorianCalendar class to manage your dates. You will need to importjava.util.GregorianCalendar to use this library.b. The countdown must be calculated based on the number of days between the time theprogram runs, and Saturday 8th October 2016.c. There is no pre-defined method for finding the difference between two dates in this library.You will need to develop your own, using the features of the GregorianCalendar class.CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 7 of 9Stage 3: TestingUsing a copy of the test cases developed in Stage 1: Design, test the program you have developed inStage 2: Program Development. Document your results, including both failed and successful tests.Note: Please do not leave out any failed tests. If your testing highlights that your program has notworked correctly, then the failed tests help to demonstrate that you have been testing your programproperly.To show that you have tested your program, include small (but readable) screen captures in yourActual Results as well as any explanatory comments. Microsoft Windows includes a Snipping Toolthat is useful for taking captures of the relevant parts of the screen.You may test your program in phases if you wish. Stage 2: Program Development provides threeseparate groups of functionality in the requirements, working from the minimal level of requirementsthrough to more advanced concepts. Each of these groups can be tested individually.Base Functionality:This phase requires you to check that the base functions (displaying welcome message when theprogram starts, showing a menu of options until the user chooses to exit, purchasing tickets, viewingticket sales and exiting the system) have been implemented.Standard Functionality:In addition to the Base Functionality, this section includes displaying a running total of tickets that havebeen added to an order until such time as the order has been finalized. This new functionality mustalso be tested.If you originally wrote and tested the Base Functionality by including all the code in a single method,this phase also requires that you modularize your code, and use method calls and pass data betweenmethods to ensure your program still runs correctly. This means all your code will need to be re-tested to ensure that all the previous functionality still works.Advanced Functionality:This phase requires testing the code that calculates and displays the number of days until the gamescomments in the welcoming message shown when the program starts.SubmissionYour program code and testing documentation should be zipped into a single file and loaded into theAssignment Box provided in Moodle by the due date and time.CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 8 of 9Marking Criteria/RubricTaskAvailableMarksStudentMarkStage 1: Design DocumentationDevelopment of an algorithm describing how the program should function All requirements from the Assessment Details section included 1 Logical structure 1Documented test cases to validate program All requirements from the Assessment Details section included 1 Data is validated to ensure user entries are appropriate and incorrect user entriesare handled smoothly1Stage 2: Program DevelopmentA Java program addressing the requirements outlined in the Assignment Details section,including appropriate use of loops, conditional statements, constants and variables:Use of coding conventions throughout entire program, including readable and clear layout,following naming conventions and including meaningful and appropriate comments.1Base Functionality: Display of a welcome message when the program starts 1 Menu displayed until user chooses to exit 1 Purchase Tickets option to select and order a user-selected combination of generaladmission and student tickets2 View Ticket Sales to display the total value of ticket sales and both the total numberof general admission tickets and the total number of student tickets sold1 Exit System to quit the program with a message to the user 1Standard Functionality: Running total of tickets included in an order displayed in the Purchase Tickets menuuntil the order is finalised1 Code modularized, correctly using method calls and passing data between methods 2Advanced Functionality: Countdown of days to go until the games commence included in the welcomemessage3Stage 3: TestingDocumented test results clearly showing all the testing that has been conducted and theresults of this testing. Testing of base functionality1 Testing of standard functionality1 Testing of advanced functionality1Total 20CRICOS Provider No. 00103D 1620 Assignment 1 specification.docx Page 9 of 9FeedbackAssignments will be marked within 2 weeks of submission. Marks will be loaded in fdlGrades, and acompleted marking sheet will be available via Moodle.Plagiarism:Plagiarism is the presentation of the expressed thought or work of another person as though it is one’sown without properly acknowledging that person. You must not allow other students to copy your workand must take care to safeguard against this happening. More information about the plagiarism policyand procedure for the university can be found at http://federation.edu.au/students/learning-and-study/online-help-with/plagiarism.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C代写： Lab  7  Command  Line  Arguments  and  Files","slug":"page60","date":"2016-12-08T11:34:12.000Z","updated":"2017-01-11T07:33:06.892Z","comments":true,"path":"2016/12/08/page60/","link":"","permalink":"http://yoursite.com/2016/12/08/page60/","excerpt":"","text":"Introduction练习c语言的命令行参数和文件读写的使用，创建一个管理日志文件的程序，写入日志，然后创建第二个程序读取已经写好的日志，并在界面显示出内容RequirementCommand Line ArgumentsPass information in from the command line of your programPassed in as a c-stringint main(int argc, char argv[])argc is the number if items on the command lineThe program name is included so argc is always at least = 1argv is an array of c-strings where each element is a “word” from the command lineargv[0] is always the name of the programInside foo.cpp when called asfoo duck drop rollint main(int argc, char argv[])Thenargc = 4argv[0] = “foo”argv[1] = “duck”argv[2] = “drop”argv[3] = “roll”Example:int main(int argc, char *argv[]){for (int i=0; i&lt;argc; i++){cout&lt;&lt; “Argument “&lt;&lt; i &lt;&lt; “ « &lt;&lt; argv[i]&lt;","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写： CS1027 Assignment 1","slug":"page59","date":"2016-12-04T11:35:10.000Z","updated":"2017-01-11T09:11:47.535Z","comments":true,"path":"2016/12/04/page59/","link":"","permalink":"http://yoursite.com/2016/12/04/page59/","excerpt":"","text":"Introduction完成城市管理系统，提供了java代码模板，需要自己补充模板代码，实现tore, search, sort, remove等方法的实现按要求完成Country class和 CountryCatalogue classRequirementCS1027: Assignment 1Due: Tuesday, July 5 th , 11:55pm.Weight: 10%Purpose:To gain experience with• Java• Fixed length arraysTask:You will recreate your assignment 3 from 1026 in Java.In this assignment you will create a complete program that uses classes to store, search, sort, remove,and filter country data. The two major tasks are outlined below.Provided With:You are given a file called Assignment1.java that contains a main method. Use this class to runthe code you write. Your code must work with this file; you cannot alter this file as a means of makingyour code work. The marker will use a file similar to this to test the functionality of your code.You are also provided two files called ThingToWriteFile.java and ThingToReadFile.java. Theseclasses are provided to make fileIO easier. Have a look at the code to understand how to use theseobjects.Two text files are included. One contains the country information (data.txt) and the othercontains the country/continent information (continent.txt). NOTE: Both of these files have a headerline!On the last page of this assignment you are provided with an example output. Reference this fortext formatting.You may assume all data is correct and that there are no errors in the data files (don’t worryabout exceptions, or validating inputs, etc.).Stuff To Do:1. Implement a Country class:• The purpose of this object is to represent a country. This object will store someimportant information about the country and will have a small number of simplemethods.• This class will contain variables for the country name, population, area, and continent inwhich it exists.• You will need to write a constructor for the object. This constructor should take a name,population, area, and continent as parameters.• Write getter methods for the four instance variables (getName, etc.).• Write a method called getPopDensity to return the country’s population density(population/area).• Write a single setter method for the population instance variable (setPopulation).• Write a method called writeToFile which takes a ThingToWriteFile object as aparameter. This method must write some country details to the providedThingToWriteFile object provided. Below is an example of how to print the details tofile (commas are important):i. NAME, CONTINENT, POPULATION, POPULATION DENSITYii. Ex: Canada, North America, 34207000, 3.428881310807587• Write a method printCountryDetails that prints some country details to the user:i. NAME is located in CONTINENT has a population of POPULATION an areaof AREA and has a population density of GETPOPDENSITYii. Ex: Canada is located in North America has a population of 34207000, an areaof 9976140.0, and has a population density of 3.428881310807587• Write a toString method which simply returns a string in this format (include a new linecharacter at the end):i. NAME in CONTINENTii. Canada in North AmericaTest all your classes and methods before moving to the next section. Feel free to create otherhelper methods if necessary.2. Implement a CountryCatalogue class:• The class should have a few important instance variables:i. A final int called DEFAULT_SIZE which is equal to 5. This variable will beused when the catalogue array is instantiated.ii. A final int called NOT_FOUND which is equal to -1. This will be used as a flagfor some of our methods.iii. A country array called catalogue which will store a bunch of countries.iv. An int which stores the number of countries currently in the cataloguev. A set of called continents. This set will store the continents. Don’tknow how to create a set in java? Look up the java docs, or just Google “Javasets”. This set will make one of the below methods easier to implement.vi. A Map (dictionary) called cDict which will map a country nameto a continent. This will be used to make some of the below methods easier toimplement.• Write the constructor (this gets a little complex). The constructor should:i. Take two strings as parameters. One string will be the name of the filecontaining the country information, and the other will be the name of the filecontaining the continent information.ii. Instantiate the instance variables.iii. Read the country file (with a ThingToReadFile object) one line at a time, parsethe text, create a Country object based on the text, and then add the Country tothe catalogue with a method called addCatalogue (more on this below). Be sureto close the file when done.iv. Read the continent file (with a ThingToReadFile object) one line at a time, parsethe text, and then add the details to cDict and continents. Be sure to close the filewhen done.• Write a private method called addCatalogue which takes a country as a parameter. Thismethod only adds the provided country to the catalogue. However, we may have aproblem, the catalogue may be full! For this method, don’t worry about addingduplicate countries.• Write a private method called expandCapacity that will double the size of the cataloguearray. This method can be called by addCatalogue if there is no more room for a newcounty to be added.• Write a method called addCountry which takes a country as a parameter. This methodshould add the provided country object to the catalogue and update the continents setand cDict map. This method can call addCatalogue. For this method, don’t worry aboutadding duplicate countries.• Write a method getCountry that takes an index as a parameter and returns a Countryobject from the indexed location in the catalogue. This method should return null if theindex provided is inadmissible.• Write a method printCountryCatalogue which simply calls the toString method for eachCountry currently in the catalogue instance variable.• Write a method filterCountriesByContinent which will print out all the countries from aspecified continent (just use the county’s toString method). This method will take aString representing the continent we want the countries from.• Write a method searchCatalogue which takes a String of a name of a country we wantto find. This method will return an int representing the index of the found country incatalogue. If the item is not in the list, return NOT_FOUND. Print some sort ofnotification to the user if the country was not found.• Write a method removeCountry which takes a String of a name of a country we want toremove from the catalogue. This method can use searchCatalogue. Print somenotification to the user whether or not the item was successfully removed or not.• Write a method setPopulationOfACountry which takes a String representing the name ofa country we want to alter and an int representing the new population. This method cancall searchCatalogue. Print some notification to the user whether or not the item wassuccessfully altered or not.• Write a method saveCountryCatalogue which will write the catalogue’s county’s to file.This method takes a String representing the name of the file we want to save the detailsto. This method can simply call the Country’s writeToFile method.• Write a method findCountryWithLargestPop which will return the index location of thecountry with the largest population currently in the catalogue.• Write a method findCountryWithSmallestArea which will return the index location ofthe country with the smallest area currently in the catalogue.• Write a method printCountriesFilterDensity which prints out some country details if thecountry lies within some specified population density range. This method takes twointegers specifying the range inclusively (low and high). This method will have someadditional bookkeeping. See the example output provided below for a demonstration ofhow this output should look.• Write a method findMostPopulousContinent which prints out the continent, and the totalpopulation of that continent (based only on the countries in the catalogue) of thecontinent with the largest population. See the example output provided below for ademonstration of how this output should look.Test all your classes and methods. Feel free to create other helper methods if necessary.FAQ:• Q: How do I compare strings? Can I just use == ?o A: NO! DO NOT USE ==!!!!!!!!!!! Comparing Strings in Java is… very weird actually(and actually the subject of some debate). Use a method called equals instead. Forexample:? SomeString.equals(SomeOtherString) will be true if the Strings are the same.• Q: Why can’t I use == then?o A: It’s complicated. I’ll go into this later in the course.• Q: I don’t know how to do X?o A: Try going to www.google.ca and then typing X into the big text box.• Q: How do we use Maps (dictionaries) in Java?o A: The idea is similar to python, but there are some Java-isms here. First, check out thejava docs for Maps (https://docs.oracle.com/javase/7/docs/api/java/util/Map.html).You’ll need to import the library they are defined in. Also, try looking up examples ofpeople using them. Instantiating them is a little weird (more details on this later in thecourse, for now you’ll have to just type the magic code) (HINT for instantiation:hashmap). Iterating through them is different too; try Googling how to iterate through amap in java.• Q: How do we use Sets in Java?o A: Basically exactly the same answer above, but the java docs are different(https://docs.oracle.com/javase/7/docs/api/java/util/Set.html)• Q: How do I parse a String in Java?o A: Try looking up “splitting a string in java” with Google.• Q: I swear I did everything right, but for some reason my files won’t open!o A: This isn’t uncommon.? If you’re using eclipse, try putting the .txt files in the project directory (the samefolder containing the bin folder, src folder.? If you’re running from command line, try putting the files in the src folder.Non-functional Specifications:1. Include brief comments in your code identifying yourself, describing the program, and describing keyportions of the code.2. Assignments are to be done individually and must be your own work. Software may be used to detectcheating.3. Use Java coding conventions and good programming techniques, for example:i. Meaningful variable namesii. Conventions for naming variables and constantsiii. Use of constants where appropriateiv. Readability: indentation, white space, consistencySubmit Country.java and CountryCatalogue.java. to OWL. Make sure you attach your .java files to yourassignment; DO NOT put the code inline in the textbox. DO NOT SUBMIT YOUR .class FILES. IF YOUDO THIS, AND DO NOT ATTACH YOUR .java FILES, YOU WILL RECEIVE A MARK OF ZERO!What You Will Be Marked On:1. Functional specifications:• Does the program behave according to specifications?• Does it run with the main program provided?• Are your classes created properly?• Are you using appropriate data structures?• Is the output according to specifications?2. Non-functional specifications: as described above3. Assignment submission: via OWL assignment submissionExample output from provided Main.java:Canada is located in North America has a population of 34207000, an area of 9976140.0, and has a populationdensity of 3.428881310807587Target country not in catalogue.England is located in Europe has a population of 54316600, an area of 130279.0, and has a population density of416.9252143476692Country “England” removed successfully.Target country not in catalogue.Country Catalogue:China in AsiaUnited States of America in North AmericaBrazil in South AmericaJapan in AsiaCanada in North AmericaIndonesia in AsiaNigeria in AfricaMexico in North AmericaEgypt in AfricaFrance in EuropeItaly in EuropeSouth Africa in AfricaSouth Korea in AsiaColombia in South AmericaZambia in AfricaGhana in AfricaCountry with the largest population: China is located in Asia has a population of 1339190000, an area of9596960.0, and has a population density of 139.5431469965489Country with the smallest area: South Korea is located in Asia has a population of 50503933, an area of 98076.92,and has a population density of 514.9420781158299Countries in North America:United States of AmericaCanadaMexicoCountries with a population density between 0 and 25:Brazil in South Americahas a population density of 22.716728745947616.Canada in North Americahas a population density of 3.428881310807587.Ghana in Africahas a population density of 0.21889705799512446.Continent with the largest population: Asia, with 1777655033,","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写： Homework 02","slug":"page58","date":"2016-12-03T10:45:10.000Z","updated":"2017-01-11T07:26:24.622Z","comments":true,"path":"2016/12/03/page58/","link":"","permalink":"http://yoursite.com/2016/12/03/page58/","excerpt":"","text":"IntroductionJava的数据结构算法，需要完成算法分析，算法实现，2D数组的实现，最后上传到githubRequirement6/24/16, 22:15 Homework 02 - CSCI-A 343 Data Structures - Summer 2016Page 1 of 2 https://homes.soic.indiana.edu/classes/summer2016/csci/c343-mitja/2016/homework/hw02.htmlCSCI C343 - Data StructuresSummer 2016Homework 02Due DateFriday, June 24 th 2016, 11:59pm on IU GitHub.Work PolicyHomework for C343 is to be done individually - no group solutions or cooperative work.TasksTime Complexity analysis &amp; from ADT to implementation [total: 100 points]A. Time Complexity analysis[40 points]1. Textbook Exercises 3.12, from (a) to (h)[5 points each]B. from ADT to implementation[60 points]1. Define an ADT for a two-dimensional array of integers.Specify precisely the basic operations that can be performed on such arrays.You may refer to the ADT for a list of integers, as shown in Example 1.4 on page 9 of thetextbook.[20 points]2. Specify an ADT for two-dimensional arrays of integers in the form of an interface (or abstractclass declaration) in Java.Detail the functions, their parameters, and their return types.Name your Java file Int2DArray.java and save it in your hw02 directory.[20 points]3. Write an implementation of your ADT for two-dimensional arrays of integers.Name your Java file Int2DArray2.java and save it in your hw02 directory.[20 points]4. Note: the list of operations does not need to be all- comprehensive: you may focus on theoperations that you think are most important for working with 2D array of integers.6/24/16, 22:15 Homework 02 - CSCI-A 343 Data Structures - Summer 2016Page 2 of 2 https://homes.soic.indiana.edu/classes/summer2016/csci/c343-mitja/2016/homework/hw02.html5. Submit all your files to IU GitHub under hw/hw02/ .Homework 02 Submission Instructions:1. In addition to the above two .java files, also submit a plain-text file named hw02.txt in which youanswer Task A and Task B.1.1. At the top of your hw02.txt file, include “C343 / Summer 2016”, “Homework 02”, your fullname and your IU username (i.e. your IU account) in the hw02.txt file.2. Make sure that your plain-text document is clearly readable by anyone; plain-text documents need to use either:ASCII encoding (7-bit, allows no accents/smart quotes/etc.), orUTF-8 encoding (capable of encoding all sorts of characters) ← preferred for plain-text submissions.(…otherwise your output may end up garbled…)3. Do not use any other document file formats: submitted files other than plain text (file formatssuch as .pdf, .doc, .docx, .html, .xml, etc…) will be ignored.2. all submissions need to be plain-text files, placed within a directory named “hw02”, which in turnneeds to be inside a top-level directory named “hw”, as explained above.3. Turn in your Homework 02 by 11:59PM on Friday, June 24 th 2016, to your C343 repository on IUGitHub C343/Summer 2016.4. When you turn in your homework on IU GitHub, it is your responsibility to verify the contents ofyour uploaded file, by double-checking the content of your repository on https://github.iu.edu/C343-Summer2016.5. Please do not omit your IU username from the content.6. P.S.: your username should in fact be your IU username, not the word your username…Last updated: June 22, 2016mitja ⊛ indiana ⋅ edu","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C代写： ASSESSMENT 4","slug":"page57","date":"2016-12-02T10:34:13.000Z","updated":"2017-01-11T07:23:30.572Z","comments":true,"path":"2016/12/02/page57/","link":"","permalink":"http://yoursite.com/2016/12/02/page57/","excerpt":"","text":"IntroductionC语言练习题，要求用递归的方法实现函数foo(n)= foo(n-1)+ foo(n-2)+ foo(n-3)，而且只能在递归函数中调用一次递归函数。这道题的难点在于只能在递归函数中调用该递归函数一次，因为如果简单的按照方程来写，该递归函数应该调用三次，这样会让效率很低。解决的思路是将foo(n-2)+ foo(n-3)用循环的方式计算，然后对foo(n-1)用递归的方式计算。RequirementHomework 7Files to submit: foo.cTime it took Matthew to Complete: 10 mins• All programs must compile without warnings when using the -Wall and -Werror options• Submit only the files requested◦ Do NOT submit folders or compressed files such as .zip, .rar, .tar, .targz, etc• Your program must match the output exactly to receive credit.◦ Make sure that all prompts and output match mine exactly.◦ Easiest way to do this is to copy and paste them• All input will be valid unless stated otherwise• Print all real numbers to two decimal places unless otherwise stated• The examples provided in the prompts do not represent all possible input you can receive.• All inputs in the examples in the prompt are underlined◦ You don’t have to make anything underlined it is just there to help you differentiate betweenwhat you are supposed to print and what is being given to your program• If you have questions please post them on PiazzaRestrictions• No global variables are allowed• Your main function may only declare variables, call other functions, and assignvariables values.• You must solve this problem recursively• You may only make ONE recursive call in the recursive caseFor this assignment you will be writing a program to calculate the value of the function foo. The valueof foo is defined as followsfoo(0)=2foo(1)=3foo(2)=5foo(n)= foo(n−1)+ foo(n−2)+ foo(n−3)Specifications1. The value of n is accepted through the command line2. You may only make 1 recursive call in the recursive case1. If you don’t you will fail many of the tests with a timeout issue3. You must solve the problem recursivelyExample1. ./foo.out 2foo(2) = 52. ./foo.out 10foo(10) = 697","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写： ASSESSMENT 4","slug":"page56","date":"2016-12-01T08:33:17.000Z","updated":"2017-01-11T07:22:42.374Z","comments":true,"path":"2016/12/01/page56/","link":"","permalink":"http://yoursite.com/2016/12/01/page56/","excerpt":"","text":"IntroductionC语言练习题，用户输入二进制字符串，其中某些位的值未知，用x代替，程序的功能为根据用户输入的字符串输出所有可能的二进制字符串组合。要求必须用递归的方法实现。RequirementHomework 7Files to submit: bin_str.cTime it took Matthew to Complete: 10 mins• All programs must compile without warnings when using the -Wall and -Werror options• Submit only the files requested◦ Do NOT submit folders or compressed files such as .zip, .rar, .tar, .targz, etc• Your program must match the output exactly to receive credit.◦ Make sure that all prompts and output match mine exactly.◦ Easiest way to do this is to copy and paste them• All input will be valid unless stated otherwise• Print all real numbers to two decimal places unless otherwise stated• The examples provided in the prompts do not represent all possible input you can receive.• All inputs in the examples in the prompt are underlined◦ You don’t have to make anything underlined it is just there to help you differentiate betweenwhat you are supposed to print and what is being given to your program• If you have questions please post them on PiazzaRestrictions• No global variables are allowed• Your main function may only declare variables, call other functions, and assignvariables values.• You must solve this problem recursively1. Write a program called bin_str.c that completes a binary number. A binarynumber is made up of 0’s and 1’s but the input strings you will receive can alsocontain x’s. An x represents a digit that can be either a 0 or a 1. Your programshould display all the possible binary digits that can be formed. For example thestring x1x0 could represent either 0100, 0110, 1100, or 1110.1. Your program should accept the binary string as a command line argument2. You MUST solve this program RECURISIVELYExamples1../bin_str.out 011001102../bin_str.out 01x0010001103../bin_str.out xx000110114../bin_str.out 101x100x11x1010100011010101000111101010011101010100111110111000110101110001111011100111010111001111","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写： ASSESSMENT 4","slug":"page55","date":"2016-11-30T04:32:15.000Z","updated":"2017-01-11T07:21:46.051Z","comments":true,"path":"2016/11/30/page55/","link":"","permalink":"http://yoursite.com/2016/11/30/page55/","excerpt":"","text":"IntroductionC语言，实现四子棋游戏，用二维数组模拟棋盘，根据用户输入将用户的棋子放入棋盘，电脑玩家随机放置棋子，游戏过程中在每一步之后判断是否有玩家的4个棋子连成一条直线或斜线，如果有，该玩家获胜。主要涉及的知识是二维数组的操作以及处理用户的输入，根据用户的输入执行相应功能。Requirementimage from: www.amazon.comEEE101 C Programming and Software Engineering 1 – ASSESSMENT 4Assessment Number 4Contribution to Overall Marks 25%Issue Date 14/11/2016Submission Deadline 28/11/2016 at 0900 (9am)Assessment OverviewThis assessment aims at testing some concepts of C programming in particular the use oftwo-dimensional arrays, and the use of pointers to pass them between functions, as well asthe routine of code development using the software development process (SDP) presented inLecture 1, namely the five main steps of the software development process:1. Problem statement: formulate the problem.2. Analysis: determine the inputs, outputs, variables, etc3. Design: define the list of steps (the algorithm) needed to solve the problem.4. Implementation: the C code has to be submitted as a separate file. Just indicate here thename of the file.5. Testing: explain how you have tested and verified your C program.EXERCISE 1 (10 POINTS OUT OF 10)Connect 4 is a game of strategy for 2 players. Each player chooses a counter colour and thenthey take turns to place the counters into a rectangular grid of size M x N (typically 6 x 7).Counters are placed into the top of a column and fall down to occupy the next available slotin that column (see the photo in Figure 1). The game is won when either player is able tocreate a line of 4 counters vertically, horizontally or diagonally.Figure 1: Connect 4 GameThis assignment requires you to use a 2 dimensional matrix together with a modularprogramming strategy to recreate this game using C programming. Your game will allow youto play either against another person, or against the computer who will place counters atrandom.Program Requirements Offer the user a choice between playing the computer or another player. Display the current state of the board to each player You should use one or more 2 dimensional matrices to represent the Connect 4 playingboard declared inside function main() as a local variable and passed to other functions asneeded. As a minimum you should create your own functions to perform the following tasks:1. input counters;2. check the board for a win;3. display the board;Programming ConstraintsAll variables used must be local.IdeasTry to keep your program as flexible as possible e.g. use constants to define matrix sizes sothat these could be easily changed.Program in small sections, getting each part to work before integrating them all.Consider how to deal with invalid inputs to avoid crashing the program.Consider providing an option to change the matrix size and the winning length (e.g. connect 5)Don’t forget that this is an interactive game, it should be easy to use and look tidyNote: The programme requirements are becoming more vague (less well defined) with eachassignment to allow you the opportunity to interpret the problem in your own way anddevelop your own solution.What should be submitted?You should submit the followings:1) A short report (up to a few pages of text plus C source codes) detailing for each question:a) SDP steps 1 to 3 in the report (Report + Specification + Analysis + Algorithm Design)(40%)b) SDP step 4 (Implementation(35%) + Robustness(10%)): your C source code includingthe comments. (45%)c) SDP step 5 in the report (testing): you will explain your testing methodologyincluding: what you wanted to test, how you have tested it and the outcome of yourtests. (15%). Note: you do not need to include screenshots of resultsPlease refer to the file “EEE101 Marking Guidelines Assignments 4-5” on ICEfor a detailed marking scheme.2) The report in Microsoft Word or pdf format and C source code of your implementationfor each question should be zipped into a single file, i.e. the zip file will contain 4 files,two reports and two source codes. (It is a good practice to include comments in yourcode stating the aim of the program, what are the inputs, what are the outputs, whichalgorithm is used, who is the author and so on.)The naming of Report ( .doc or .pdf), Source Code (.c) and Compressed file (.zip, or .rar) StudentID_LastName_FirstNameAssignmentNumber-QuestionNumber.docx or .pdf StudentID AssignmentNumber-QuestionNumber.c StudentID_LastName_FirstName_AssignmentNumber.zip or .rarFor example 10115085_Zhang_Hanqing_4-1.docx 10115085_4-1.cZipped together into: 10115085_Zhang_Hanqing_4.zipHow the work should be submitted?Should be submitted electronically through ICE so that the marker can run your programsduring marking. Feedback and your grade will also be given through ICE.Remember that you are responsible for ensuring that your C code will run in Visual Studio2013 and that if it does not without documentary explanation you may get a 0 mark for yourimplementation.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C代写：Homework 5","slug":"page54","date":"2016-11-29T09:22:15.000Z","updated":"2017-01-11T01:24:44.076Z","comments":true,"path":"2016/11/29/page54/","link":"","permalink":"http://yoursite.com/2016/11/29/page54/","excerpt":"","text":"IntroductionC语言，实现基本的字符串操作函数和矩阵计算，包括字符串复制，字符串拼接，字符串比对，计算字符串的长度以及统计字符串中字符出现的频率等基本函数。用二维数组表示矩阵，计算矩阵的加法和乘法，涉及使用malloc和free动态分配二维数组的内存，矩阵的计算等知识。RequirementCSCE 155E Fall 2016Homework 5Due Date: 11/13/2015, 2.30 PMInstructions Follow instructions carefully, failure to do so may result in points being de-ducted. Make sure your programs compile and run by using the web grader interface. Youdo not need to printout your source code for the programs. Print a copy of the rubric forthis assignment and hand in a hard copy by the due date.Partner policy: You are not allowed to work with a partner for this assignment.Program 1. String Utilities In this exercise you will implement several utility functionsinvolving strings. You will place all of your function prototypes in a header file namedstring_utils.h and all of your function definitions in a source file, string_utils.c. As before,you should implement your own main test driver program to test your functions, but youneed not hand it in.(a) void addChar(char str, char c, int n)- this function should add a char c at index n in string str. The following charactersshould be shifted up to make room for the inserted character. For example, a call tothis function on the string “Hello World”, ‘p’, ‘4’, would result in the string “HellpoWorld”(b) int numChar(const char src, char c)- this example determines the number of character c appears in the string. It doesnot matter if the letter in the string is capitalized or not. For example, a call to thisfunction on the string “HellO World”, ‘o’, would return 2(c) int isPalindrome(const char src)- this example determines if the string src is a palindrome or not. Return 1 if the stringis a palindrome and 0 if not. For example, a call to this function on the string “testset”,will return 1(d) int strCompare(const char str, const char str2)- Write your own string comparison function that compares two strings for equality.You cannot use the string comparison functions. Make sure the comparefunction is case insensitive. Return 0 if the two strings are equal and 1 if they are not.For example, a call to this function on the string “Hello world”, and “Hello World” willreturn 01(e) char strCat(char str, char str2)- Concatenate the two strings “str” and “str2” and store that in a newly created dynamicstring. The function should return this dynamic string. You cannot use the concatenation functions. For example, a call to this function on the string “Hello”, and“ World” will return a dynamically created string that contains “Hello World”(f) void consonantVowel(char str)- This function will print out the number of consonantes and vowels in the string. Note:printing should be done in the function (notice the return type is void). For example, acall to this function on the string “Hello”, will print Consonants: 3, Vowels 2Program 2. Array In this exercise you will write several functions that operate on arrays.You will place all the function prototypes in a header file named array_utils.h with theirdefinitions in a source file named array_utils.c. You should test your functions by writing adriver program, but you need not hand it in.(a) The dot product of two arrays are a = [a 1 ,a 2 ,a 3 ,..,a n ] and b = [b 1 ,b 2 ,b 3 ,..,b n ] isa · b =nXi=1a i b i = a 1 b 1 + a 2 b 2 + ··· + a n b nWrite a function that computes the dot product of the two arraysint dotProduct(const int a, int size, const int b, int size2);(b) Write a function that takes an integer array and returns the number of integers thatare prime in the arrayint numPrime(const int a, int size);(c) Write the following function:int arrayDifference(const int a, const int b, int sizeOfA, int sizeOfB);which dynamically creates an array and fills it with all integers that can be found ina , but not b . The values in the returned array should be unique; that is, there shouldnot be any duplicates. Furthermore, the size of the allocated arrays should not wastememory.(d) Write the following function:int arrayIntersect(const int a, const int b, int sizeOfA, int sizeOfB);which dynamically creates an array and fills it with all integers that can be found in aand b . The values in the returned array should be unique; that is, there should not beany duplicates. Furthermore, the size of the allocated arrays should not waste memory.Program 3. Matrices In this exercise you will write several functions that operate onmatrices or two-dimensional arrays. For this exercise, we will restrict our attention to squarematrices-collections of numbers with the same number of columns and rows. You will place2all the function prototypes in a header file named matrix.h with their definitions in a sourcefile named matrix.c. You should test your functions by writing a driver program, but youneed not hand it in.(a) Write a function that takes two matrices and determines if the sum of all of theelements in matrix A is equal to the sum of all the elements in matrix B. Return 0 ifthe summation is equal and 1 if they are not equal.int sumEqual(int A, int B, int n);(b) Write a function that takes two matrices and determines if they are equal (all of theirelements are the same). If the matrices are equal, return 0. Return 1 if they are notequal.int isEqual(int A, int B, int n);(c) Write a function to compute the sum of the elements along the diagonal of the matrix.Return the sum of the elements along the diagonal.int diagonal(int A, int n);(d) Write a function to compute the summation of matrix A and B.int sumMatrix(int A, int B, int n);(e) The product of two square n × n matrices:C = A × BThe entries for C are:c ij =nXk=1a ik b kjwhere 1 ≤ i,j ≤ n and c ij is the ( i , j )-th entry of the matrix C . Write the followingfunction to compute the product of two n × n square matrices:int product(int A, int *B, int n);BonusName the files, bonus.c and bonus.hchar highestFreq(char str)- this function should return the highest frequency character c in the string. For example, acall to this function with the string “Hello World”, would return “l”,3","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C代写：Data Representation and Computer Arithmetic","slug":"page53","date":"2016-11-28T07:24:13.000Z","updated":"2017-01-11T01:23:20.256Z","comments":true,"path":"2016/11/28/page53/","link":"","permalink":"http://yoursite.com/2016/11/28/page53/","excerpt":"","text":"IntroductionC语言练习题，主要知识点是按指定格式解析用户输入的代表数值的字符串，然后对用户输入的字符串进行加减计算，最后将计算结果按照指定的格式输出。主要涉及对字符串的解析，以及二进制，十进制，十六进制数值之间的转换，以及浮点数的二进制表示等知识。RequirementCS 211: Computer Architecture, Fall 2016Programming Assignment 2:Data Representation and Computer Arithmetic1 IntroductionThis assignment is designed to help you learn the representation, interpretation, and manipulationof data as bits. There are two parts. In the first part, you will implement a program calc to addand subtract numbers specified in different bases (multiplication is extra credit). In the secondpart, you will implement a program format that will print the decimal values of bit sequencesrepresenting integer and floating point data types.2 Numeric Base Conversion and CalculatorImplement a program called calc with the following usage interface:calc The first argument, , is either the string “+”, for addition, or “-”, for subtraction. If youwant to implement multiplication, then can also be the string “*”. (If you do implementmultiplication, make sure to say so in your readme.pdf file so that the TAs know to check yourprogram for this functionality.)The next two arguments, and are integers of arbitrary size. Each of thesenumbers will be given in the form of:−?(b|o|d|x)d n d n−1 …d 1 d 0which can be interpreted as: a number can optionally start with a ’−’ sign, followed by a baseindicator, where b means the number is a binary number, o means octal, d means decimal, and xmeans hexadecimal. d n d n−1 …d 1 d 0 are the digits of the number.The final argument, , gives the base that the resulting number should be printedout in. Like the base indicator for the input numbers, this argument can be one of four strings: “b”for binary, “o” for octal, “d” for decimal, and “x” for hexadecimal. Your program should outputthe answer in the same form as the input numbers (that is, the output number should follow theregular expression given above).Some examples:$ ./calc + d1111111111111111 d1111111111111111 dd22222222222222221$ ./calc + b1101 b1 dd14$ ./calc + d999999999 d1 dd1000000000$ ./calc - d10 -d4 bb1110$ ./calc + -d10 -d4 b-b1110Note that the numbers in the first example are too large to fit in a 32-bit integer type in C; this iswhy the arbitrary size is emphasized above. Using a 64-bit integer type is not the solution since theinput integers can be arbitrarily large. Rather, you need to design data structures and algorithmsthat can handle arbitrarily large numbers. Assignment update: any decimal number that weask you to handle—either an input decimal number or output in decimal format—willfit in a 32-bit integer.Important: You must write the base conversion code yourself. You may not use type-casting,libraries, or output formats in printf(). You may use standard C arithmetic operations. You mayuse the C standard libraries for functionality not related to the conversion (e.g., string handlingfunctions).Important: If calc detects an error in the inputs, it should print out an error message that startswith the string “ERROR”, followed by a string that gives an informative message about the errorthat it detected.3 Format InterpretationImplement a program called format with the following usage interface:format The first argument, , is a sequence of 32 bits. Remember that your Cprogram will get it as a string of 1 and 0 characters in the argv[1] argument to main. Thissequence ofbits represents the binary values stored in 4 contiguous bytes in memory. The leftmostbits are stored in the byte with the smallest address while the rightmost bits are stored in the bytewith the largest address.The second argument, , gives the type that you should use to interpret the input bitsequence, and can be either int (integer) or float.The formats for the input bit sequence is as follows. If the type is:int: the format is two’s complement;float: the format is IEEE 754 single precision;Note that the input bit sequence can correspond to negative numbers.2Your program should print out the decimal representation of the input bit sequence, assuming abig endian byte ordering. Floating point numbers should be printed in scientific notation, where anumber 1.5x10 5 would be printed as 1.5e5. For positive infinity, output pinf, for negative infinity,output ninf, and for “NaN”, output NaN.Here are some examples:$ ./format 01000001010000100100001101000100 int1094861636$ ./format 10000001010000100100001101000100 int-2126363836$ ./format 01000001010000100100001110000100 int1094861700$ ./format 00000000000000000000000000000001 int1$ ./format 01000000110000110100001111010100 float6.10203e0$ ./format 00111010000111111111011000001000 float6.1e-4$ ./format 10000000000000000000000000000000 float-0.0e0$ ./format 01000000010010010000111111011011 float3.141593e0Important: You must write the interpretation code yourself. You may not use type-casting,libraries, or output formats in printf(). You may use standard C arithmetic operations. You mayuse the C standard libraries for functionality not related to the value interpretation (e.g., stringhandling functions).Important: If format detects an error in the inputs, it should print out an error message thatstarts with the string “ERROR”, followed by a string that gives an informative message about theerror that it detected. For this program, you can assume that any input bit sequence that is shorteror longer than 32 bits is erroneous.4 SubmissionYou have to e-submit the assignment using Sakai. Your submission should be a tar file namedpa2.tar that can be extracted using the command:tar xf pa2.tar3Your tar file must contain:• readme.pdf: this file should describe your design and implementation of the calc program.In particular, it should detail your design, any design/implementation challenges that youran into, and an analysis (e.g., big-O analysis) of the space and time performance of yourprogram.• makefile: there should be at least the following rules in your makefile:all build both your calc and format executables.calc build your calc executable.format build your format executable.clean remove all object files and executables. Prepare for rebulding from scratch.• source code: All source code and header files necessary for building your calc and formatexecutables. These should at least include calc.c and format.c.You can build your pa2.tgz file in the following steps:1. Put all the files you want to hand in in a subdirectory called pa2.2. In the parent directory that contains pa2, invoke tar:tar cvfz pa2.tgz pa2The arguments to tar are cfvz. The c tells tar to create a new archive file. The f tells tar that thenext command line argument is the name of the output file. The z tells tar to compress the tar filewith gzip. The v just makes tar list the files it’s putting into the archive.We will compile and test your program on the iLab machines so you should make sure that yourprogram compiles and runs correctly on these machines. You must compile all C code using thegcc compiler with the -Wall flags.5 Grading Guidelines5.1 FunctionalityThis is a large class so that necessarily the most significant part of your grade will be based onprogrammatic checking of your program. That is, we will build a binary using the Makefile andsource code that you submitted, and then test the binary for correct functionality against a set ofinputs. Thus:• You should make sure that we can build your program by just running make.• You should test your code as thoroughly as you can. In particular, your code should be adeptat handling exceptional cases.Be careful to follow all instructions. If something doesn’t seem right, ask.45.2 DesignHaving said the above about functionality, design is a critical part of any programming exercise.In particular, we expect you to write reasonably efficient code based on reasonably performingalgorithms and data structures. More importantly, you need to understand the performance (time&amp; space) implications of the algorithms and data structures you chose to use. Thus, the explanationof your design and analyses in the readme.pdf will comprise a non-trivial part of your grade. Givecareful thoughts to your writing of this file, rather than writing whatever comes to your mind in thelast few minutes before the assignment is due.5.3 Coding StyleFinally, it is important that you write “good” code. Unfortunately, we won’t be able to look atyour code as closely as we would like to give you good feedback. Nevertheless, a part of your gradewill depend on the quality of your code. Here are some guidelines for what we consider to be good:• Your code is modularized. That is, your code is split into pieces that make sense, where thepieces are neither too small nor too big.• Your code is well documented with comments. This does not mean that you should commentevery line of code. Common practice is to document each function (the parameters it takesas input, the results produced, any side-effects, and the function’s functionality) and addcomments in the code where it will help another programmer figure out what is going on.• You use variable names that have some meaning (rather than cryptic names like i).Further, you should observe the following protocols to make it easier for us to look at your code:• Define prototypes for all functions.• Place all prototype, typedef, and struct definitions in header (.h) files.• Error and warning messages should be printed to stderr using fprintf.5","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C代写：Homework Assignment 2","slug":"page52","date":"2016-11-27T04:23:11.000Z","updated":"2017-01-11T09:24:53.232Z","comments":true,"path":"2016/11/27/page52/","link":"","permalink":"http://yoursite.com/2016/11/27/page52/","excerpt":"","text":"IntroductionC语言练习题，涉及一个用在控制台操作的航班订票和查询系统，主要涉及的知识有文件的读取和对二维数组的操作。用二维数组表示航班的座位信息，开始运行时从文件读取二维数组的大小和数据，然后显示菜单供用户操作，根据用户的输入执行航线和座位的选择。RequirementCS 1050 Homework Assignment 2JOE’S AIRLINE RESERVATION SYSTEMFall-2016Due : 14 th October, Friday 5:00 PM (No Extension). Submission system shuts off at 5pm.DirectionsComplete the following homework assignment using the description given in each section.IMPORTANT INFOtc.rnet will be down for maintenance during the course of the week of 10/3, it is anticipatedto be back up quickly but in order to be safe there is a temporary server created to work on hw2,which will be taken down as soon as the former is back up and running. So in order to not lose yourcode follow the instructions.Logging in to the new server:Putty: hostname =  test.rnet.missouri.eduTerminal on a mac: ssh pawprint@test.rnet.missouri.eduNotice the change of server, you will be logging into a different server (test.rnet.missouri.edu) andnot your original server (tc.rnet.missouri.edu).USE FTP clients like FileZilla or WinSCP to back up your files to your local machine. The test.rnetserver is a temporary one and will be take down during the week of 10/3 after tc.rnet is back,unfortunately we have no control over the timings, so whenever you code something make sure youkeep backing the file up immediately on your local machine. Like, every 15 minutes or once youfinish one function or whenever you quit out of test.rnet.Once you get an announcement on BLACKBOARD from DHEERAJ, saying “tc.rnet is back andrunning” move the local copy to tc.rnet server. Again, by using FTP.After that, Log into putty / terminal again usingtc.rnet.missouri.edu as the new host name and continue the way you have been doing it all thiswhile and submit it from here only. You cannot submit from test.rnet.missouri.edu.I really hope you know how to use ftp or file transfer by now. All the TAs have spoken at least twiceabout it in the labs.Submission information:Submit the assignment by the due date using the similar submission command as used for labsPlease include your lab section in the file name.This will work only when you are on tc.rnet.missouri.edu and not on test.rnetFilename must be: sectionletter-hw2.c (Include your respective lab section)e.g. m-hw2.c$ submit $ submit CS1050 HW2 m-hw2.cPurpose: Learn to use multiple types of two-dimensional arrays for data input and access. Use character arrays and strings and perform string manipulation. Learn to develop a complex menu system. Learn the importance of using functions.DescriptionThanksgiving Break is fast approaching, so, we hereby present Mizzou’s state-of-the-art onlineticket booking system, Joe’s Airline Reservation System. Which will be developed by you. Thisapplication helps in reserving flight seats. This is done via implementing the 8 user-definedfunctions as explained below.Your program must print a menu for the user to select what he needs to do with the application.There will be admin mode which requires log-in via a passcode. There will be an option forreserving a seat on a flight. Third option is to exit the application.A file templateHW2.c is attached on Blackboard which will guide you on how to start theprogram and what are the global variables you need to use and how. You can follow that.Comments and prototypes have been given for you to help you out in the process.GLOBAL CONSTANTS and VARIABLES:#define ROW 6 //for row length#define COL 4 //for column length#define MAX 25 // for stringsFunctions to implement:1. void initialSeats(char flight[][COL], int count);The initialSeats function takes in a two-dimensional char array created in main. It will initializeall array elements to the character ‘O’. ‘O’ symbolizes the seat on the plane is open and can betaken. The int count variable is used to symbolize the number of people who already have a seaton the plane, this is a random number generated and sent from main. In this function it willrandomly create and assign an index in the two-dimensional array with the character ‘X’ for eachperson up to value of count. ‘X’ is used to symbolize that an element in the two dimensionalarray is occupied. This will be used later on in the program. MAKE SURE TO SEED RAND inMAIN. Below is the way to randomly generate the seats for each passenger to take. Thisfunction should be called as soon as your program starts.Keep in mind the possibility of the randomized index overwriting ‘X’, if it was already there.You have to handle that case. Beware!!int row = rand() % ROW;int col = rand() % COL;2. void displayMenu();Prints the display options. Admin mode, Reserve a seat and Exit. This is the main menu.3. void printFlightMap(char flight[][COL]);The printFlightMap function is printing off a two-dimensional character array. Thus, printing offthe characters stored in each index of the two-dimensional array either ‘O’ or ‘X’. As notedabove the ROW and COL are #defined in your program, use them. For loops are your friendshere. Called in admin mode and during reserving a seat (specifically in seatReservation).4. int loginMatch(int passcode, int adminPasscode);The loginMatch function is called to compare the passcodes, the function returns 1 if both matchand 0 if there is no match. This is called in admin mode. Should prompt for the passcode entryuntil the passcode matches. The adminPasscode is specified, everyone should use the sameadminPassocde, then compare that with the passcode user enters in main() when they wish tolog-in.5. int getTotalRevenue(char f1[][COL], char f2[][COL], char f3[ ][COL]);Note: f1, f2, f3 are flight1, flight2, flight3, just shorthanded.The getTotalRevenue function will take in all three two-dimensional character arrays created inmain and calculate the total revenue using the costMatrix two dimensional array. With each two-dimensional array f1, f2, and f3, search for the character ‘X’ stored in them, upon finding theindex of the character ‘X’, use the index to reference inside of the global two-dimensional arraycostMatrix (look above in Constants and Global Variables). While inside of costMatrix array,add the value stored in the two-dimensional array with a running total variable (Hint use +=).The function will return the total revenue earned thus far from seats reserved in all 3 flights. So,you will need nested for-loops. This is called only in admin mode.6. void flightMenu();Prints the three flight options as shown. Flights to Miami, Nashville and Las Vegas. This is donewhen reserve a seat option is chosen.7. void seatReservation(char flight[][COL]);The seatReservation function takes in a two-dimensional array and allows the user to reserve anindex on the two-dimensional array. Before any reserving is done, this function calls theprintFlightMap function mentioned earlier to allow the user to see the already populated two-dimensional array for that flight. Then, the user is asked to enter a row and column to reserve aseat. Additionally, this function will have built in error checking (look below at outputexample) Once the user has inputted a correct index within [0, ROW) and [0, COL) in the two-dimensional array, this function needs to check if that index entered is already taken in the two-dimensional array with the character ‘X.’ If the index is populated with ‘X’, an error will beshown to the user (look at the output below) and have them re-enter a new possible row andcolumn again. If the index entered is not filled with ‘X’, then assign that index with ‘X’, i.e.changing the element from ‘O’ to ‘X’. Before the function ends, it will call the functionprintFlightMap again and prints a success message.Remember, rows run from 0-5 and columns from 0-3. Error check for this too.8. void printMessage(char name[],char num[]);//DO THIS, IF YOU ARE DOING THE BONUSThis function is called for each flight option after the seatReservation() is called. It takes in twostrings, name of passenger and the flight number for that particular case. Both are characterarrays (strings). For flight Cou-&gt;Miami number must be set as “MIA1050”, for Cou-&gt;Nashvillenumber must be set as “BNA1050”, for flight Cou-&gt;Las Vegas num must be set as “LAS1050”,this must be done in main and the name and particular number must be sent to this function.Once in this function, you will merge (important part) the two strings into third string and printthat as the e-Ticket as shown below and print a confirmation message.Eg1: name is “Fred” number is “MIA1050”, your merged string should be FMrIeAd1050. Printthis as the booking confirmation number.Eg2: name is “Guilliams” number is “LAS1050”, you merged string should beGLuAiSl1l0i5a0ms.Eg3: name is “Christopher” number is “BNA1050”, your merged string should beCBhNrAi1s0t5o0pher9. int main(void)The main function will be doing all (most of) the function calls. In main, you need to create fourcharacter arrays of flight_1[ROW][COL], flight_2[ROW][COL], flight_3[ROW][COL], andstrings name[MAX],flight_number[MAX]adminPasscode= 105016; // everyone must keep this the sameAlso, before you call initialSeats function on all the flights arrays individually, make sure to findhow many people already reserved seats. This is done by creating a local variableseats = rand % 5 + 1 (this is your int counts in initialSeats function), rand()%5 +1 will give arandom number between 1-5; you only need to do this once. A menu system will be displayed forthe users to run specific parts of the program (See output below of what the menu system needsto look like). Make sure to implement error checking for invalid input!On the main menu, the user will see a display of options: The options are 1: Admin Portal, 2:Reserve a seat on a flight, and 3: Quit. The menu will need to loop until the exit option ischosen.To access the Admin Portal, the user enters a 1, and then must type a passcode that will bestored in a variable. Now, verify the passcode, call the loginMatch function (you shouldcompare) with passcode and adminPasscode to verify if it is an authentic log-in attempt. If thepair match, that is, they are equivalent then it means successful log-in. Upon successfulverification, inside of the admin portal, call printFlightMap on each flight array andgetTotalRevenue (See output below). Declare these variables in main().To access Reserve a seat, the user enters a 2. Inside of this portal, the user is displayed the threeflights that can be accessed to book a seat. (See below output). As always, verify the user inputfor flight option (1-5). 2 character arrays will be used, name and flight_number. Once a validflight option is chosen. Switch to that particular case and ask for the user’s first name and storeit in name[] and store the flight numbers (MIA1050,BNA1050,LAS1050) in flight_number[] asspecified above for that flight. Then, send the corresponding flight array to seatReservation,after successful reservation the user will be relocated back to the main menu. Then print asuccess message using name and fligh_number, just to confirm the booking.Must be done for each case (each flight).Then, if you are doing the bonus, call the printMessage with name[] and that particularflight_number[],. Note: flight1 is Miami, flight2 is Nashville, flight3 is Las Vegas.Please go through Sample Output and the document clearly before starting out.Sample OutputCharacter in bold are inputs from the user. Yours will vary but the outline must look similar. It is big,don’t worry, but will help give you a better idea. I have run it twice completely, that’s why it is 10pages.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Java代写：Programming Homework Assignment","slug":"page51","date":"2016-11-26T04:53:41.000Z","updated":"2017-01-10T03:49:29.498Z","comments":true,"path":"2016/11/26/page51/","link":"","permalink":"http://yoursite.com/2016/11/26/page51/","excerpt":"","text":"Introductionjava的数据结构题目，考察用java实现LinkedQueue和LinkedStack这2个数据结构，包括enqueue,dequeueisEmpty, size, toString()等方法的实现，最后在main里面完成测试RequirementCIS 22CProgramming Homework Assignment #2 Page 1 of 2Programming Homework Assignment #2Due Date: Sunday May 1, 11:55 PM• Upload the source files (.java files) with output (copied andpasted to the end of the main file) (see Catalyst under Week 4for where to submit)Problem:Write a Java program which completes and tests the LinkedQueue classas declared in the LinkedQueue.java file (in the Queue Code Filefolder on Catalyst under Week 2). CHANGE the LinkedQueue file sothat it reads: public class LinkedQueue","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Java代写：Programming Homework Assignment","slug":"page50","date":"2016-11-26T04:53:41.000Z","updated":"2017-01-10T03:49:29.498Z","comments":true,"path":"2016/11/26/page50/","link":"","permalink":"http://yoursite.com/2016/11/26/page50/","excerpt":"","text":"Introductionjava的数据结构题目，考察用java实现LinkedQueue和LinkedStack这2个数据结构，包括enqueue,dequeueisEmpty, size, toString()等方法的实现，最后在main里面完成测试RequirementCIS 22CProgramming Homework Assignment #2 Page 1 of 2Programming Homework Assignment #2Due Date: Sunday May 1, 11:55 PM• Upload the source files (.java files) with output (copied andpasted to the end of the main file) (see Catalyst under Week 4for where to submit)Problem:Write a Java program which completes and tests the LinkedQueue classas declared in the LinkedQueue.java file (in the Queue Code Filefolder on Catalyst under Week 2). CHANGE the LinkedQueue file sothat it reads: public class LinkedQueue","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C++代写：More OOP in C++/Inheritance","slug":"page49","date":"2016-11-25T09:43:42.000Z","updated":"2017-01-10T03:44:45.944Z","comments":true,"path":"2016/11/25/page49/","link":"","permalink":"http://yoursite.com/2016/11/25/page49/","excerpt":"","text":"Introduction基本思路:运用c++的面向对象的知识，封装，继承，多态，完成一个动物园管理系统，动物种类包括老虎，熊等等。模拟动物的成长和消耗。对类的设计思想要求比较高，是一道比较好的c++考题RequirementAssignment #3 – More OOP in C++/InheritanceDue: Sunday, 05/08/16, 11:59pmGrading: EVERY assignment in this course is graded by demoing your work for10 minutes with a TA. You are required to meet with a TA within two weeks fromthe due date to demo, and you receive an automatic 50 point deduction forfailure to do so. If you miss a scheduled appointment, you will be penalized 10points for rescheduling within 1 day (24 hours), 25 points within 7 days (1 week),and 50 points for anything outside of a week. Your job is to convince the TA thatyour program works correctly, i.e. show your TA how to use/break your program☺(90 pts) Program Implementation: Problem StatementYou are the proud owner of a virtual zoo that has places to house tigers, polarbears, and penguins! You will write a Zoo Tycoon game using classes andinheritance. Zoo Tycoon is a game where the user creates a zoo that has exhibits with anumber of different animals in each. Your zoo animals can be Tigers, Polar Bears, andPenguins. You start with an initial amount of money in your zoo bank, and from thereyou can begin to op.Specific Animal traits:• Ageo &gt;=3, adult 3• add number of babies born to that specific animal type to the exhibit• else, reprompt the user for an animal.• begin baby at age 0,4) nothing happens.After the random event, calculate your payoffs for the day based on normal visits forpenguins and polar bears, and possibly a bonus from a boom in attendance to see thetigers!Last, ask the player if they want to buy an adult animal, continue to the next day, or endthe game. If they chose to buy an animal, subtract that cost and add the animal to theappropriate exhibit.When you add money for profit or subtract money for sickness, the babies, oranimals with an age value less than 3 “days”, have a value of 2 times their normalpayoff or cost.Requirements• Each exhibit is a dynamic array of each type of animal.• You must have classes for a zoo, animal, tiger, penguin, and polar bear.• You Must Implement Inheritance: Your tiger, penguin, and polar bear mustinherit some traits and behaviors from the animal class, while there may beothers unique to the specific animal, such as a bonus for tigers.• Every time you buy an animal, at the beginning of the game or during play time,subtract that animals cost from the bank.• Subtract the feeding cost (which depends on how many animals you own andwhat kind) every morning.• Have a random event take place during each turn and perform those banktransactions correctly.• Animals that aren’t “born” in the zoo start at age 3 and this age is incrementedevery day. Animals younger than 3 (animals born in the exhibit) cost or earn thezoo 2 times their regular amount.• Make sure that the zookeeper doesn’t go bankrupt• Reprompt user at the end of each day (at the end of the game play for loop) tokeep playing until they lose or they wish to end the game.• No memory leaksExtra Credit (10 pts):TBD(10 pts) Program Style/CommentsIn your implementation, make sure that you include a program header in your program,in addition to proper indentation/spacing and other comments! Below is an exampleheader to include. Make sure you review the style guidelines for this class, and begintrying to follow them, i.e. don’t align everything on the left or put everything on one line!http://classes.engr.oregonstate.edu/eecs/spring2016/cs162-001/162_style_guideline.pdf/** Program: zoo_driver.cpp Author: Your Name Date: 05/06/2016 Description: Input: Output:**/Electronically submit your C++ program (.h, .cpp, and Makefile files, not yourexecutable!!!) and your test files as a tarred archive by the assignment due date, usingTEACH.You must tar these files together using the following command:tar –cvf assign3.tar file1 file2 file3 …**NOTE: The easiest way to upload your program from ENGR to TEACH is to map anetwork drive to your home directory on ENGR. Mac or Windows, See:http://engineering.oregonstate.edu/computing/fileaccess/","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写：Programming Assignment 7","slug":"page48","date":"2016-11-24T07:33:42.000Z","updated":"2017-01-10T03:37:21.413Z","comments":true,"path":"2016/11/24/page48/","link":"","permalink":"http://yoursite.com/2016/11/24/page48/","excerpt":"","text":"Introduction基本思路:一共有两题第一题:判断读取文件是否是回文文件,根据题目定义理解什么事回文文件,用递归来判断一个单词是否是回文,再判断整个文件第二题:完成一个类似抽奖的游戏,给对应图片编号记录分数,根据最终摇到的图片的分数来计算选手的得分,最后得出胜负注意点:第一题:读取文件的时候会发生一系列IO异常,要仔细处理第二题:组件的位置要仔细调整,做出摇奖的动画比较麻烦,要然位置变化先慢后快再慢,得到滚动的效果RequirementProgramming Assignment 7 ( 100 Points )Due: 11:59pm Thursday, November 10thREADME ( 10 points )You are required to provide a text file named README, NOT Readme.txt, README.pdf, orREADME.doc, with your assignment in your pa7 directory. There should be no file extension after the file name“README”. Your README should include the following sections:Program Descriptions ( 5 points ) : Provide a high level description of what each of your programs do andhow you can interact with them. Make this explanation such that your grandpa or uncle or someone you knowwho has no programming experience can understand what these programs do and how to use them. Do notassume your reader is a computer science major.Short Response ( 5 points ) : Answer the following questions:Vim Questions:1. In vim/gvim, what commands will indent N consecutive lines (starting from the cursor line) by one levelwhere the indent level is defined to be two spaces? This will take two vim commands: one to set thenumber of spaces to indent with each indent level (default is 8), and one to actually indent Nconsecutive lines. Likewise what command will shift N lines left (de-indent N lines)?2. In vim/gvim, what command will indent an entire curly-bracket block one level, while the cursor iscurrently on either the open or close curly bracket of the block? Likewise what command will shift anentire curly-bracket block one level left (de-indent block)?3. How do you open a new line below and insert (one keyboard key for both steps)?Unix Question:4. On the Unix command line, how can you capture (redirect) the program’s output into a file named“output”?Java Question:5. How can you create an array of ints in Java and initialize it with the values of all single digit odd positivenumbers (inclusively between 0-9), all in one step/line?STYLE ( 20 points )Please see preview programming assignments; especially PA2’s writeup. You will be specifically graded oncommenting, file headers, class and method headers, meaningful variable names, judicious use of blank lines,not having more than 80 characters on a line, perfect indentation, no magic numbers/hard-coded numbersother than -1, 0, +1, using setters and getters, etc (see the style section of PA2’s writeup).You will lose significant points if you have static methods or static variables for the Spin100 program(except, constants are okay). Instead you should create getters and setters to change the variables for anobject.CORRECTNESS ( 70 points )Start by creating your pa7 directory as usual. Then copy over the starter code from the public folder by doingthe following:$ cp ~/../public/PA7indrome.java ~/pa7$ cp ~/../public/PA7-images/ ~/pa7Program 1: PA7indrome ( 20 Points )You must use recursion and implement the methods listed below or you will lose all 20 points for thisprogram. Also, do not edit the main() method in PA7indrome.java as it will negatively affect your grade.Write a command line application that checks whether an array of strings is a palindrome. A palindrome is aword, phrase, number, or other sequence of characters which reads the same forwards and backwards. Theprogram will take in a file as a command line argument. Each line of the file will be converted into a string,where each string will be placed as an element in an arraylist then converted to an array (this part has alreadybeen written for you in the main() method–do not edit anything in this method). Your task will be to thendetermine if the array of strings is a palindrome or not (non-case sensitive). You will be using two recursivemethods to implement this functionality.public static char[] reverse( char[] toRev ) {…}● Overall goal: reverse the array of characters passed in using recursion.● If the length of the character array passed in is 1, just return the array right away.● Otherwise, swap the first and last characters in the array (#1-3 below)● Copy the middle of the array into a new array and recursively call reverse on this new array (#4 below).● Place the returned array back into the middle of the original array of characters, and return thisreversed array of characters (#5 below).● Hint: you can use System.arraycopy() (look up the javadocs).● This method must use ends-and-middle recursion.public static boolean isPalindrome( String[] words, int lo, int hi ) {…}● Overall goal: determine if the array of strings passed in is a palindrome using recursion.● Determine if the string at the low index in the words array is the reverse of the string at the high index inthe words array. To do so, you must use your reverse() function, after converting the string to a chararray and passing it in. This comparison should be non-case sensitive.● If the string at the low index is indeed the reverse of the string at the high index, recurse on theremaining middle portion of the array by passing modified values of the low and high index in therecursive call. Otherwise, return false.● This method must use ends-and-middle recursion.You must use these methods as they are defined above or you will lose points.We will test for edge cases when grading this assignment, so it is up to you to test your program thoroughly.Similar to previous assignments, your output MUST match exactly to our sample output!Sample Output 1: Not a palindrome (user input in BOLD)For this example, the input file is named notPalindrome. If you open the file in vim, it should look like this:startearlystartoftenThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome notPalindromeInput array of strings:start, early, start, oftenThe file is not a palindrome.[cs11fxyz@ieng6-201]:pa7$Sample Output 2: Odd-length palindrome (user input in BOLD)Input file named oddPalindrome:StArTEaRlYsTaRtoFtEnufotofuNeTfOTrAtSyLrAetRaTsThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome oddPalindromeInput array of strings:StArT, EaRlY, sTaRt, oFtEn, ufotofu, NeTfO, TrAtS, yLrAe, tRaTsThe file is a palindrome.[cs11fxyz@ieng6-201]:pa7$The sequence of characters in the array of Strings generated from the input file reads the same forwards andbackwards (non-case sensitive), so it is a palindrome. Note that because the length of the array is odd, themiddle string must also be a palindrome (in this case the middle string is “ufotofu”, which is a palindrome).Sample Output 3: Even-length palindrome (user input in BOLD)Input file named evenPalindrome:StArTEaRlYsTaRtoFtEnNeTfOTrAtSyLrAetRaTsThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome evenPalindromeInput array of strings:StArT, EaRlY, sTaRt, oFtEn, NeTfO, TrAtS, yLrAe, tRaTsThe file is a palindrome.[cs11fxyz@ieng6-201]:pa7$Sample Output 4: Palindrome with new lines (user input in BOLD)Input file named newLinesPalindrome. Note: New lines will be cut off (ignored) by the scanner.StArTEaRlYsTaRtoFtEnNeTfOTrAtSyLrAetRaTsThe output from running PA7indrome will give you the following:[cs11fxyz@ieng6-201]:pa7$ java PA7indrome newLinesPalindromeInput array of strings:StArT, EaRlY, sTaRt, oFtEn, NeTfO, TrAtS, yLrAe, tRaTsThe file is a palindrome.[cs11fxyz@ieng6-201]:pa7$Program 2: Spin100 ( 50 Points )You are to design a game that models itself after the mini game found in the Price is Right.https://www.youtube.com/watch?v=mFJCfNib2nsMain idea of the game:● There are two players: Player 1 and Player 2. Player 1 gets to spin the wheel first. Player 1 gets tospin until they have reached over 100 points or have clicked the “Finish Player 1” button. At that point,it becomes Player 2’s turn. Player 2 then gets to spin until they have reached over 100 points or haveclicked the “Finish Player 2” button.● Once Player 2 goes over 100 points or clicks the “Finish Player 2” button, the game ends.● Whichever player is closer to 100 points wins. Once a player goes over 100 points then they’ve lost. Ifboth players go over 100 points then it’s a tie. If both players have the same score, then it’s a tie.Example scores and their outcomes:Player 1 70 120 20 100 100 95Player 2 90 110 120 100 105 100Winner Player 2 Tie Player 1 Tie Player 1 Player 2Implementation Details:This program will have two Java source files: Spin100Controller.java and Spin100Wheel.java.Spin100Controller.java will be the main controller which extends WindowController and handles the GUIlayout. Spin100Wheel.java will be the actual wheel object that defines what a wheel can do, how it spins, etc.1. Setting up the GUI:Start by first getting the GUI set up in the begin() method of Spin100Controller.java.The top panel will have 3 labels:● “Spin100” - You can customize the font of this label–don’t worry about whether the font is the default ornot! Just make sure your program doesn’t throw errors or have an incorrect layout / text upon start.● “Player 1’s score: “ - followed by player 1’s score (initially 0).● “Player 2’s score: “ - followed by player 2’s score (initially 0).○ Note the space following the ‘:’ for each player’s scoreThe bottom panel will have 5 buttons: (make sure the text matches exactly).● “Click to Spin P1”● “Finish Player 1”● “Restart”● “Click to Spin P2”● “Finish Player 2”The wheels on the center canvas:● The center of the window will have the canvas, similar to PA6. The height and width of the canvasshould be 840 x 660. Note that the canvas will not be resized during testing. On the canvas we willbe displaying two wheels (one for each player). In order to create the wheels, we need to initialize anarray of Image(s), using the images you copied over from the public folder. Make sure your imagesare directly inside your pa7 directory, and not in a subdirectory called PA7-images.● You will want to load the 20 images into an array of Images. To ensure you arrange the images in thecorrect order, we suggest creating the following array. This will ensure you load the images in thecorrect order and will also be helpful for scoring later on. Load the images corresponding to thesescore values in the order in which they appear in the array. The array of images and the array of scorevalues will be parallel arrays.private static final int[] SCORES = { 50, 85, 30, 65, 10, 45, 70, 25, 90, 5,100, 15, 80, 35, 60, 20, 40, 75, 55, 95 };● The wheel should always start with 50 in the center and should spin in a downward direction. Thismeans that when the wheel spins for the first time, the red arrow will first point to 50, then 85, then 30,and so on.● You will want to create each wheel by calling the Spin100Wheel constructor. Some parameters you willprobably want to pass to the constructor are:○ The array of Image(s) corresponding to the SCORES values.○ Location of the wheel (location of the top number). The center of the left wheel should behorizontally aligned with the center of the left half of the canvas. In other words, you need to findthe x-coordinate that will center the left wheel in the center of the left half of the canvas.Similarly, you need to find the x-coordinate that will center the right wheel in the center of theright half of the canvas. The y-coordinate of the top number for both wheels should be 10 (makesure the layout of your wheels matches the screenshots exactly).○ Reference to the Spin100Controller so that controller methods can be called from the wheel(this will be useful for setting the score after the wheel stops spinning each time)○ Reference to the drawing canvas so the wheel can be placed on the canvasThe red arrows on the center canvas:● The arrows are red-filled arcs with start angle = -15, arc angle = 30, height = 150, and width = 150.● Left arrow position: (234.5, 186.0)● Right arrow position: (688.5, 186.0)Messages declaring winner on the center canvas:● Create a hidden text object saying “Tie” at position (444, 5). The text should be blue, bold, and size 16.● Create a hidden text object saying “P1 Winner” at position (20, 5). The text should be green, bold, andsize 16.● Create a hidden text object saying “P2 Winner” at position (808, 5). The text should be green, bold,and size 16.See the screenshot section below to see what all of this looks like.2. Wheel FunctionalityBecause the wheels are animated, the Spin100Wheel class needs to extend ActiveObject (and therefore mustcontain a run() method).Creating a wheel:● Each wheel needs an array of 5 VisibleImages (generated from the array of images passed in as aparameter to the constructor) to store the 5 images that will be visible on the canvas at any given time.● The location passed to the constructor is the location of the topmost VisibleImage. The nextVisibleImage will be 99 pixels below that, and the next 99 pixels below that, and so on.● Each wheel needs a random double generator object to generate random numbers for the amount ofticks to spin when the spin button is clicked (see more details below in the Spinning the wheel section).● Don’t forget to save a reference to the Spin100Controller object to help with scoring.● Set the number of ticks to 0, so the wheel begins stationary.● As with all ActiveObjects, the last statement in the constructor should be start();.Spinning the wheel:● Initially, the wheel’s number of ticks should be set to zero. When a wheel’s spin button is clicked, thecontroller should update the number of ticks so the wheel will start spinning. This means you will wanta method to generate a random number of ticks for the wheel to spin.● One way to implement this is to have a method called getRandomTicks(). This method should:○ First generate a random double between 0 and 1○ Based on the random number, return the minimum number of ticks (50) + a number ofadditional ticks, which indicates how many ticks a wheel should spin for. This is to allow thewheel to stop on different numbers each time by randomizing where a wheel stops cyclingthrough the array of images.○ If the random number is between 0 and 0.05, return MIN_TICKS + 1. If it’s between .05 and .1,return MIN_TICKS + 2. You should keep adding one more tick until you return MIN_TICKS + 13for when the value is between .6 and .65. From there you should subtract one less tick until youreturn MIN_TICKS + 6 when the value is between .95 and 1.■ Range of ticks to add (over the .05 increments) is(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 12, 11, 10, 9, 8, 7, 6)● After getting the random number of ticks, the controller needs to set the wheel’s number of ticks using asetter method.● To make the wheel actually spin, the run method will need to constantly check its number of ticks. Ifthe number of ticks is greater than 0, increment the index of each visible image displayed to the nextindex in the images array; in other words, for every tick, shift the images down one. Once you reachthe last index of the images array, wrap back around to the beginning (Hint: think mod operator).Then decrement the number of ticks left for this wheel to spin and pause to slow down the animation.● At the beginning of each spin, the initial delay should be set to 1. Then when the wheel delay is lessthan 20, the wheel delay should increment by 1 on every iteration of the forever loop. When the wheeldelay is greater than or equal to 20 and less than 200, the wheel delay should increment by 5. Whenthe wheel delay is greater than or equal to 200 and less than 500, the wheel delay should increment by20. This will give the illusion of a faster spin at the start which eventually slows down and stops oncethe number of ticks is zero.● Once the number of ticks is 0, the wheel needs to call a public method in controller to let the controllerknow that the wheel’s score has changed and that the Text object for the score needs to be updated.● Some additional methods to include in the class would be setters and getters for the ticks, delay, andscore. This is so that the controller can call these methods and change the wheel’s variables’ valueswhen something like the spin, finish, or reset button is pressed.3. Controller FunctionalityYou will implement Spin100Controller.java to handle creating the buttons and listening to actions performed onthe buttons.● Upon start, only the “Click to Spin P1” and “Restart” buttons should be enabled. So in your begin()method, in addition to setting up the layouts of the buttons, you should also disable the “Finish Player 1”button and all buttons associated with Player 2.● Once you have clicked “Click to Spin P1”, all buttons are disabled until the wheel stops spinning. Oncethe wheel stops spinning, update Player 1’s score. Now that you have spun Player 1’s wheel at leastonce, the “Finish Player 1” button should be enabled.● As long as Player 1’s score is less than or equal to 100, Player 1 can choose to continue spinning byclicking “Click to Spin P1” again, or click “Finish Player 1” to finish their turn. Once Player 1’s score isover 100, the controller will automatically finish the turn for Player 1.● Once Player 1 has finished, all of Player 1’s buttons are disabled and the “Click to Spin P2” button isenabled for Player 2 to start spinning. The spinning process follows the same condition as stated forPlayer 1.● Once Player 2 has also finished, all but the Restart button should be disabled. A game over messageshould be displayed. The message could announce a Tie, or announce that either Player 1 or Player 2won (see screenshots for detail).Summary of the buttons● The Spin buttons: The spin button disables itself when:○ The wheels are spinning○ The player’s score has passed 100○ The player has clicked finish after at least one spin● The Finish buttons: Each player’s finish button is disabled until they have spun at least once. It is alsodisabled when the wheel is spinning, as well as after they have finished their turn.● The Restart button: This button is always enabled except when a wheel is spinning. Once clicked:○ It changes the scores back to 0○ It resets the wheels so that 50 is at the center again○ The “Click To Spin P1” button is enabled again and the buttons are reset to the original state.Implementation Requirements for Button Event HandlingTo manage the behaviors of the 5 buttons, you must define 5 private member inner classes inside theSpin100Controller class. Use your notes from class as a reference.● Each private class must implement the ActionListener interface.● The ActionListener interface enforces that each class has the actionPerformed(ActionEvent e) methoddeclared and implemented.Having separate inner classes for each button is much better than handling all button events in oneactionPerformed() method. This is because there is a one-to-one relationship between buttons and listeners,resulting in cleaner code that is less prone to errors.Note: Remember to use getters/setters vs. directly accessing variables by name.4. Sample Screenshots:The start of the program. Bothplayer’s scores are set to 0,with the arrows pointing to 50.Only the buttons: “Click to SpinP1” and “Restart” are enabled.After Player 1 clicks “Click toSpin P1”, the score for Player1 is updated. The “FinishPlayer 1” button is nowenabled after 1 spin.Player 1 clicks “Finish Player1”, and now only “Restart” and“Click to Spin P2” buttons areenabled.Player 2 now clicks “Click toSpin P2”, the score for Player2 is updated. “Finish Player 2”button is now enabled after thefirst spin.After Player 2 clicks “FinishPlayer 2” The winner textappears. The only buttonenabled is “Restart”.This is the case when Player1’s score is over 100, thusPlayer 2 wins.In the case that Player 1’sscore exceeds 100, thebuttons “Click to Spin P1” and“Finish Player 1” areautomatically disabled,allowing P2 to begin.If both player’s scores exceed100, the game results in a tie.TurninTo turnin your code, navigate to your home directory and run the following command:&gt; cse11turnin pa7You may turn in your programming assignment as many times as you like. The last submission you turn inbefore the deadline is the one that we will collect.VerifyTo verify a previously turned in assignment,&gt; cse11verify pa7If you are unsure your program has been turned in, use the verify command. We will not take any late files youforgot to turn in. Verify will help you check which files you have successfully submitted.It is your responsibility to make sure you properly turned in your assignment.Files to be collected:Note: You must turn in all the files necessary for your program to run, including the .jar files and .png files.Note: Also, if any exceptions are thrown in the terminal, you will lose points.Source Files: Image Files: Misc:PA7indrome.javaSpin100Controller.javaSpin100Wheel.java .png (20 of them) objectdraw.jarAcme.jarREADMEEC_Spin100Controller.java (extra credit)EC_Spin100Wheel.java (extra credit)Extra Credit ( 5 points )Setup: Create copies of your regular source files and name them EC_Spin100Controller.java andEC_Spin100Wheel.java.Along with the functionality listed below, you will need to change the size of the window if you are adding theextra buttons. Set the canvas width to 1000 and the canvas height to 660.Overall Wins: 1 PointKeep track of the overall wins with a message that appears at the end of the game:Overall Wins P1: #, P2 @where # is a non-negative number indicating how many times player 1 has won the game and @ is a non-negative number indicating how many times player 2 has won the game. This message cannot overlap eitherwheel and it should be horizontally centered between the wheels. It should be 200 pixels above the verticalcenter of the canvas. The message can be in whatever color you would like besides black. In the case of a tie,neither player’s win count should change.Change Spin Direction: 1 PointAdd some new buttons and change the old ones so that each player has the option to spin up or down. Thereshould be a “P1, Spin Up” button, “P1, Spin Down” button, “P2, Spin Up” button, and “P2, Spin Down” button.To clarify, spinning up is where the numbers appear to be moving up (so the 50 goes towards the top) whereasspinning down is where the numbers appear to be moving down (so the 50 moves towards the bottom). Youcan see the new buttons in the screenshots below. Disabling the buttons should still work the same as it doesin the normal portion of the PA, just make sure to disable both the Up and Down spin buttons.Switch Starting Players: 3 PointsThe “Switch” button is enabled only at the start of each round of the game. This button should be disabled inthe middle of a game (i.e. if a spin has occurred). This allows the player who spins first to switch with the otherplayer. For instance, if Player 1 was going to start first and the switch button is clicked. then the game willrestart and Player 2 will now start first. If the restart button were then clicked, Player 2 would still be going first.Sample Screenshots:If all extra credit features are implemented, this is the initial state of the program.The overall number of wins for each player is shown when a round finishes.Player 2 can begin the round of a game when “Switch” is clicked.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：I NDIVIDUAL P ROJECT 03 - T HE L IBRARY","slug":"page47","date":"2016-11-23T03:16:42.000Z","updated":"2017-01-10T02:03:47.286Z","comments":true,"path":"2016/11/23/page47/","link":"","permalink":"http://yoursite.com/2016/11/23/page47/","excerpt":"","text":"Introduction基本思路:面向对象的基础作业,根据题目要求定义属性和成员方法注意点:实例化对象与对象调用方法的运用,一个自定义类作为另一个自定义类的属性的理解RequirementO BJECT -O RIENTED P ROGRAMMINGI NDIVIDUAL P ROJECT 03 - T HE L IBRARYProject 03 BackgroundWrite a console (text) program comprised of a main() class, CSC211Project03, a driverclass, Project03Driver, and your Textbook class.The driver class should have•a data field that is a constant array of type String called SUBJECT_LIST and is initializedto at least five different textbook subjects.•a data field, library, that is an array of Textbook objects. The library should contain10,000 textbooks. (Though you may want to test it with 10 books until you’re sure thedriver functions correctly.)• The driver class constructor should instantiate the array, library, and fill it with randomTextbook objects. Randomly select a subject for each Textbook from SUBJECT_LISTand a random pageCount for each Textbook between 500 and 1500. (These are collegetextbooks after all!)The driver class should have the following methods:• findHeaviest returns the weight of the heaviest textbook in the library•getHeaviest returns the index of the heaviest textbook in the library•computeAverageSize returns the average page count for all the textbooks•computeTotalPages returns the total number of pages in all the textbooks in library• getLibraryStats calls all of the above methods and reports on the library’s stats,including how many total textbooks are int eh library. This is the method called from themain() class.Project 3 RubricGeneral (50 Pts):• 10 pts - compiles and runs, no syntax errors• 10 pts - all Project03Driver methods commented using javadoc style comments• 5 pts - main() class, CSC211Project03, is correct• 5 pts - no magic numbers used with arrays• 10 pts - all Project03Driver data fields correctly declared• 10 pts - correct Project03Driver constructor implementationMethod implementation (50 Pts):• Correct functionality in each method listed below is worth 10 points:findHeaviest, getHeaviest,computeAverageSize, computeTotalPages, getLibraryStats","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：Assignment 1","slug":"page46","date":"2016-11-22T07:26:15.000Z","updated":"2017-01-10T02:00:53.372Z","comments":true,"path":"2016/11/22/page46/","link":"","permalink":"http://yoursite.com/2016/11/22/page46/","excerpt":"","text":"Introduction基本思路:做一个模拟售票系统,逻辑不复杂,每个功能其实就是对对应变量的值的改变或输出,跟着菜单的要求逐步完成就行,注意每个功能的测试注意点:参数的传递要注意,根据对应的操作,正确的修改对应变量的值,细节上用户体验要考虑到RequirementITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 1 of 9Assignment 1OverviewThis is an individual assignment that requires you to design, develop and test a small procedural Javaprogram.Timelines and ExpectationsPercentage Value of Task: 20%Due: 16:00 Friday 21 st October 2016 (week 7)Minimum time expectation: 10 hoursLearning Outcomes AssessedThe following course learning outcomes are assessed by completing this assessment: Identify and use the correct syntax of a common programming language Recall and use typical programming constructs to design and implement simple softwaresolutions Reproduce and adapt commonly used basic algorithms Utilise pseudocode and/or algorithms as a major program design technique Write and implement a solution algorithm using basic programming constructs Demonstrate debugging and testing skills whilst writing code Develop self-reliance and judgement in adapting algorithms to diverse contexts Design and write program solutions to identified problems using accepted design constructsITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 2 of 9Assessment DetailsThe Federation University Australia Olympic Games are about to commence! The games have beenscheduled to begin on Saturday 3rd December 2016, competitors are busy training and now it’s timeto prepare to sell spectator tickets.Your task is to design, develop and test a small application for recording ticket sales to this event.Stage 1: DesignThis stage requires you to prepare documentation that describes the function of the program and howit is to be tested. There is no coding or code testing involved in this stage. A document template hasbeen provided for your use.Requirements:1) Read through Stage 2: Program Development to obtain details of the requirements of thisprogram.2) Write an algorithm that describes how the program will operate.a. All program requirements – base, standard and advanced – must be included, even if youdo not end up including all these requirements in your program code.b. The algorithm must be structured logically so that the program would function correctly.3) Prepare and document test cases that can be used to check that the program works correctly,once it has been coded. You do NOT need to actually run the test cases in this stage; this willoccur in Stage 3: Testing.a. All program requirements – base, standard and advanced, must be included, even if youdo not end up including all these requirements in your program code.b. Make sure the test cases include checking of data entered by the user to make sure thatonly valid data is accepted. If the user enters invalid data, the user should be informed ofthis and given another chance to enter the data. NB: As we have not covered exceptionhandling, you may assume that the user will always enter an integer.c. Test cases should be documented using a template like the one below. You may includeextra information if you wish. At this stage, the Actual Result column will be left blank.Test Case Expected Result Actual ResultThe user selects to purchase Tier 1tickets.The user is prompted toenter the number oftickets to purchase.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 3 of 9Stage 2: Program DevelopmentUsing the Design Documentation to assist you, develop a Java program that records spectator ticketsales at the gate for the Federation University Australia Olympic Games, implementing therequirements outlined in this section. These requirements have been broken into three groups: Base Functionality includes the minimal level of requirements to achieve the essentialcomponents of this assignment. This group of requirements focuses on getting the code towork and on using the programming constructs we cover in class. You can expect to useconstants, variables, loops, conditional statements and arithmetic operators for theserequirements and you should look for opportunities to use these wherever you can. You will notreceive full marks for implementing a requirement, even if it works, if you have not used theappropriate programming construct to do so.At this level, you can decide if it is easier for you to code everything within a single method, orto modularize it straight away. Standard Functionality ensures the code is modularized, and that method calls are used toensure the program flows correctly. It allows data to pass from one method to another asparameters. It also includes providing a running total of tickets within an order, which is notessential for getting the program to work, but is useful information for the user to see. Advanced Functionality provides a challenge task, and is best left until all the other requirementshave been addressed. It requires looking at a Java API to find out how to use a class we havenot covered in the course, and using this to provide a countdown of days remaining until thegames commence.All three groups require that you follow coding conventions, such as proper layout of code, usingnaming conventions and writing meaningful comments throughout your program.Base Functionality:1. Display a welcome message when the program starts The welcome message should have a row of asterisks at the top and the bottom, just longenough to extend over the text. Hint: Use a For loop for this. The first line of the message should read “FEDERATION UNIVERSITY AUSTRALIAOLYMPICS” and be approximately centred in the row of asterisks by printing white spacefirst. Hint: Can you modify the For loop from the previous step to print the white spaces? A second line of the message should be blank. The third line should read “Developed by” followed by your name and a comma, then “student ID ”, then your student id, then finally “ for ITECH1000 Sem 2 2016”. The fourth line should be blank.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 4 of 92. Provide a menu from which the user can select to Purchase Tickets, View Ticket Sales or Exit.This menu should be repeated each time after the user has chosen and completed an option untilthe user chooses to Exit. The user selects an option by entering the number next to it. If aninvalid number is selected, the user is advised and shown the menu again to make anotherselection.3. When the user selects the Purchase Tickets option, provide another menu from which the usercan select Tier 1 Tickets, Tier 2 Tickets, Finalise Order or Cancel Order. The user selects anoption by entering the number next to it. If an invalid number is selected, the user is advised andshown the menu again to make another selection.a. Should the user select Tier 1 Tickets or Tier 2 Tickets, they are prompted to enter theNumber of Tickets required. After entering the number of tickets required, they arereturned to the Ticket Purchasing Menu so that they may choose to purchase additionaltickets. The user may not choose to purchase a negative number of tickets, but apurchase of 0 tickets is permitted.b. Should the user select Finalise Order:i. The sale is processed by displaying the number of each type of ticket purchasedand the total cost of the tickets in this order. A Tier 1 ticket costs $18.50; a Tier 2ticket costs $11.25.ii. A record is kept of the total cost of tickets sold, the total number of Tier 1 ticketssold and the total number of Tier 2 tickets sold. This is a combined total from allorders; there is no need to keep a record of the number of tickets in eachindividual order.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 5 of 9iii. The user is returned to the menu from Step 2.c. Should the user select Cancel Order:i. The order is cancelled and a message displayed to confirm this to the user.ii. The user is returned to the menu from Step 2.4. When the user selects the View Ticket Sales option, display the total value of ticket sales and boththe total number of Tier 1 tickets and the total number of Tier 2 tickets sold across ALL orders.Highlight this message display with a row of 50 asterisks before and after the message. After thefinal row of asterisks, redisplay the menu from Step 2.5. When the user selects Exit System, quit the program with a message to the user.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 6 of 9Standard Functionality:6. Update the Ticket Purchasing Menu so that a running total of tickets included in an order isdisplayed until the order is finalized7. Modularize the code, correctly using method calls and passing data between methods asparameters.Advanced Functionality:8. Update the Welcome Message to include a countdown of the number of days to go until thegames begin.a. Use the GregorianCalendar class to manage your dates. You will need to importjava.util.GregorianCalendar to use this library.b. The countdown must be calculated based on the number of days between the time theprogram runs, and Saturday 3rd December 2016. It should also be possible to just updatethe date within the code and have the countdown automatically recalculate the number ofdays until the games commence.c. There is no pre-defined method for finding the difference between two dates in this library.You will need to develop your own, using the features of the GregorianCalendar class.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 7 of 9Stage 3: TestingUsing a copy of the test cases developed in Stage 1: Design, test the program you have developed inStage 2: Program Development. Document your results, including both failed and successful tests.Note: Please do not leave out any failed tests. If your testing highlights that your program has notworked correctly, then the failed tests help to demonstrate that you have been testing your programproperly.To show that you have tested your program, include small (but readable) screen captures in yourActual Results as well as any explanatory comments. Microsoft Windows includes a Snipping Toolthat is useful for taking captures of the relevant parts of the screen.You may test your program in phases if you wish. Stage 2: Program Development provides threeseparate groups of functionality in the requirements, working from the minimal level of requirementsthrough to more advanced concepts. Each of these groups can be tested individually.Base Functionality:This phase requires you to check that the base functions (displaying welcome message when theprogram starts, showing a menu of options until the user chooses to exit, purchasing tickets, viewingticket sales and exiting the system) have been implemented.Standard Functionality:In addition to the Base Functionality, this section includes displaying a running total of tickets that havebeen added to an order until such time as the order has been finalized. This new functionality mustalso be tested.If you originally wrote and tested the Base Functionality by including all the code in a single method,this phase also requires that you modularize your code, and use method calls and pass data betweenmethods to ensure your program still runs correctly. This means all your code will need to be re-tested to ensure that all the previous functionality still works.Advanced Functionality:This phase requires testing the code that calculates and displays the number of days until the gamescomments in the welcoming message shown when the program starts.SubmissionYour program code and testing documentation should be zipped into a single file and loaded into theAssignment Box provided in Moodle by the due date and time.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 8 of 9Marking Criteria/RubricTaskAvailableMarksStudentMarkStage 1: Design DocumentationDevelopment of an algorithm describing how the program should function All requirements from the Assessment Details section included 1 Logical structure 1Documented test cases to validate program All requirements from the Assessment Details section included 1 Data is validated to ensure user entries are appropriate and incorrect user entriesare handled smoothly1Stage 2: Program DevelopmentA Java program addressing the requirements outlined in the Assignment Details section,including appropriate use of loops, conditional statements, constants and variables:Use of coding conventions throughout entire program, including readable and clear layout,following naming conventions and including meaningful and appropriate comments.1Base Functionality: Display of a welcome message when the program starts 1 Menu displayed until user chooses to exit 1 Purchase Tickets option to select and order a user-selected combination of Tier 1and Tier 2 tickets2 View Ticket Sales to display the total value of ticket sales and both the total numberof Tier 1 tickets and the total number of Tier 2 tickets sold1 Exit System to quit the program with a message to the user 1Standard Functionality: Running total of tickets included in an order displayed in the Purchase Tickets menuuntil the order is finalised1 Code modularized, correctly using method calls and passing data between methods 2Advanced Functionality: Countdown of days to go until the games commence included in the welcomemessage3Stage 3: TestingDocumented test results clearly showing all the testing that has been conducted and theresults of this testing. Testing of base functionality1 Testing of standard functionality1 Testing of advanced functionality1Total 20CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 9 of 9FeedbackAssignments will be marked within 2 weeks of submission. Marks will be loaded in fdlGrades, and acompleted marking sheet will be available via Moodle.Plagiarism:Plagiarism is the presentation of the expressed thought or work of another person as though it is one’sown without properly acknowledging that person. You must not allow other students to copy your workand must take care to safeguard against this happening. More information about the plagiarism policyand procedure for the university can be found at http://federation.edu.au/students/learning-and-study/online-help-with/plagiarism.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：Programming Assignment 5","slug":"page45","date":"2016-11-21T06:22:35.000Z","updated":"2017-01-04T13:46:21.349Z","comments":true,"path":"2016/11/21/page45/","link":"","permalink":"http://yoursite.com/2016/11/21/page45/","excerpt":"","text":"Introduction基本思路:模拟打高尔夫游戏,根据题目要求可以把场地看成一个线性的,所有可以用if语句和对应的距离将场地分成不同的区域(水,沙土),击球的距离是根据选用的球杆来定的，不同的球杆击球有不同的效果,根据题目要求此处用高斯函数来决定击球的距离注意点:在此题里面变量比较多,用到的循环液会嵌套起来,逻辑不能混乱,在处理细节上面,比如计分,球落地的场地也要细心RequirementProgramming Assignment 5 ( 100 Points )Due: 11:59pm Thursday, October 27thREADME ( 10 points )You are required to provide a text file named README, NOT Readme.txt, README.pdf, or README.doc, with yourassignment in your pa5 directory. There should be no file extension after the file name “README”. Your README shouldinclude the following sections:Program Description ( 4 points ) : Provide a high level description of your program. Describe what your programsdo and how you can interact with them. Make these explanations such that your grandmother or uncle orsomeone you know who has no programming experience can understand what this program does and how to useit.Write your README as if it were intended for a 5 year old. Do not assume your reader is a computer sciencemajor.Short Response ( 6 points ) : Answer the following questions:Vim related questions (keyboard commands only – no mouse actions, ASCII characters only):1. In vim, how do you move the cursor to the end of a line with a single command? To the beginning of a linewith a single command?2. How do you highlight/select a line in vim?Java related questions:3. What does the keyword static mean in regards to variables?4. What does the keyword static mean in regards to methods? Provide an example use of a static method.5. What is overriding? Give an example from a previous/current assignment.Unix related questions:6. Using the cut command, how do you extract out only the columns 5 through 13 in a file named foo?STYLE ( 20 points )Please see previous programming assignments. A full file header for your README is not needed, but you still need toput your name and cs11f login at the top. However, all other style guidelines apply to all the files ( e.g. over 80characters apply to READMEs as well. )You will be specifically graded on commenting, file headers, class and method headers, meaningful variable names,sufficient use of blank lines, not using more than 80 characters on a line, perfect indentation, no magic numbers/hard-coded numbers other than zero and +/-1, and use of accessor/mutator methods to access private fields (getters andsetters) where specified.CORRECTNESS ( 70 points )You are asked to create an interactive 3 x 3 puzzle game for pre-schoolers. The player has to drag the puzzle pieces onthe right to the correct location on the left to form a complete image. This assignment does NOT involve ActiveObjectsor require a paint() method. The correctness of this assignment is based on meeting the required functionalities listedbelow.Part 0: Overview BoardPieces PuzzlePiecesWe have a 3 x 3 puzzle, which gives us 9 puzzle pieces that are movable on the right. They can be draggedanywhere on the canvas, but not off the canvas. On the left, we have a 3 x 3 board. After a puzzle piece is draggedonto its correct location, the puzzle piece is “locked” into the board and is no longer movable.The reason “locked” is in quotes is because the puzzle piece is actually not locked. We created this illusion byhaving two different types of Pieces here: PuzzlePiece and BoardPiece. When a PuzzlePiece (movable piece on theright) is dragged onto a BoardPiece (fixed piece on the left), your program will do some verification to see if theymatch. If so, it’s going to hide the PuzzlePiece and reveal the BoardPiece with the same image as the PuzzlePiece.So it may seem like the PuzzlePiece is locked in place, but it’s actually a different BoardPiece that’s displayed onthe canvas. Now that we know the basic idea/hack behind this game, how do we implement it?Part 1: Useful InterfacesTake advantage of interfaces! We have two different kinds of Piece types here, but they share a lot in common.We’ll implement the Piece interface later in PuzzlePiece and BoardPiece classes.1. The Highlightable interface is used to draw borders and highlights around each piece:import java.awt.Color;public interface Highlightable {public abstract void showHighlight( Color color );public abstract void hideHighlight();}2. The Hideable interface is used to hide and show pieces:public interface Hideable {public abstract void show();public abstract void hide();}3. The Piece interface, which extends the two interfaces above and includes a few other methods:import objectdraw.;public interface Piece extends Highlightable, Hideable {public abstract boolean contains(Location point);public abstract boolean equals(Object o);public abstract Location getCenter();public abstract int getId();public abstract void move(double dx, double dy);}Part 2: Piece ClassesYou will create 2 Piece classes: class BoardPiece and class PuzzlePiece.Each of these classes will implement the Piece interface. For example:public class BoardPiece implements Piece { … }Each Piece class will hold the specifics about that piece:• the piece image (a VisibleImage created from passing an Image object to its constructor)• ID (integer indexed from 0 to 8 in order of left to right and top to bottom, each ID represents a piece witha distinct image)• center (a Location object that represents the center point of this piece)• borders/highlights (PuzzlePiece (the movable pieces on the right) has one black FramedRect object righton top of the edge of the image and wraps around it as the border. BoardPiece (the fixed pieces on theleft) has two FramedRect objects, one right on top of the edge of the image, and one that’s inset by 1px,so it creates a thicker outline. When the game first starts, BoardPiece should only display the outerhighlight as black.)Thus, the constructor for BoardPiece and PuzzlePiece should be identical. For example:public BoardPiece(Image img, int id, Location loc, DrawingCanvas canvas) { … }Each Piece class will also implement the methods from the Piece interface.• showHighlight() and hideHighlight() can access and change the visibility of the FramedRect objects thathighlight each piece.• show() in PuzzlePiece should show the image and the black FramedRect highlight. show() in BoardPieceshould just show the image. We will call showHighlight() when we want to display the green highlight toindicate the puzzle piece is in the correct spot on the board (more on this later).• hide() in PuzzlePiece should hide the image and the highlight. hide() in BoardPiece does nothing unlessyou plan to implement the extra credit.• contains() in PuzzlePiece determines whether some point is contained in the VisibleImage associated withthat piece (Hint: use VisibleImage’s contains() method). contains() method in BoardPiece requires a littlemore logic. If you are giving this puzzle to someone, you don’t want him/her to solve this so quickly by justdragging the PuzzlePieces close enough to the BoardPieces so they get locked in automatically. If you arethe player, you also don’t want to be forced to drag the PuzzlePiece so your cursor/PuzzlePiece fallsperfectly within the BoardPiece. So what we are going to do here is add a different check: instead ofpassing the point where the cursor is, we are going to pass the center of the PuzzlePiece we are draggingto contains(). If the center of the PuzzlePiece is within a 50 by 50 pixels square in the center of theBoardPiece, then we can say “the point is contained” in the BoardPiece. What we are really checking hereis whether the center of the PuzzlePiece is contained in the 50 x 50px square in the BoardPiece.• equals() checks if two Pieces are equal (for example, does the PuzzlePiece match with the BoardPiece inthe board grid?). This is done by checking the unique ID (0 - 8) we assigned to each piece.• getId() returns the unique ID of the Piece.• getCenter() returns the center of the Piece.• move() in BoardPiece should do nothing since BoardPieces are fixed. You would have to add someimplementation if you decide to do extra credit. move() in PuzzlePiece is in charge of moving thePuzzlePiece around. There’s one tricky thing about this method… you need to make sure that thePuzzlePieces cannot be dragged off the canvas. More specifically, the center of PuzzlePiece should not beable to move off the canvas.Part 3: class PuzzleNow we’ve set up the building blocks for this game, we can start implementing the controller Puzzle class. ClassPuzzle should extend WindowController and include main() that starts a new instance of Acme.MainFrame. Thecanvas size should be 735 by 380 pixels.Part 3a: Get ImagesNine 100px x 100px puzzle piece images are available for you in ~/../public/PA5-images/. They are numberedfrom p0 to p8 (e.g. p0.jpg, p1.jpg, …).In order to load these images into the program, use the getImage() method in class Puzzle (the main GUI controllerthat implements WindowController). For example:getImage(“p0.jpg”);We need to load 9 images into an Image array (array of Image objects). Instead of hardcoding 9 lines ofgetImage(), we can do this in a loop using some string concatenation. getImage() will return an Image object. Youshould pass each Image object as an actual argument to each the of Board/PuzzlePiece’s constructor, and insidethat Board/PuzzlePiece’s constructor, make a VisibleImage object based on the Image object.Part 3b: LayoutThe main Puzzle class will also layout the BoardPieces and the PuzzlePieces as seen in the earlier screenshots.Again, instead of hardcoding 18 different locations, we are going to use two arrays to store Locations, one forBoardPieces and one for PuzzlePieces. The good news is that the constants and the formulas of calculating theseLocations have been worked out for you:private static final int PIECES_PER_COL = 3; // can be changed to expand the puzzleprivate static final int PIECES_PER_ROW = 3; // can be changed to expand the puzzleprivate static final int PUZZLE_SPACING = 20; // num of px between PuzzlePiecesprivate static final int PUZZLE_OFFSET = 355; // offset from left side of canvasprivate static final int BOARD_MARGIN_X = 25; // left margin of the boardprivate static final int BOARD_MARGIN_Y = 40; // top margin of the boardprivate static final int SIDE_LENGTH = 100; // side length of each PieceBoardPiece with index i is located atx = BOARD_MARGIN_X + SIDE_LENGTH (i % PIECES_PER_COL)andy = BOARD_MARGIN_Y + SIDE_LENGTH (i / PIECES_PER_ROW).PuzzlePiece with index i is located atx = PUZZLE_OFFSET + PUZZLE_SPACING (i % PIECES_PER_COL + 1)+ SIDE_LENGTH (i % PIECES_PER_COL)andy = PUZZLE_SPACING (i / PIECES_PER_ROW + 1) + SIDE_LENGTH * (i / PIECES_PER_ROW).These x and y coordinates represent the upper left corners of the VisibleImage in each Piece. You can check themath if you are curious what’s up with all these mods and divides.Before you place all the Pieces onto the canvas, add a Text object as the winning message “YOU WON!” at x = 355and y = the Y value of the fourth BoardPiece. It should have font size of 55 in bold and green. Hide the winningmessage for now, and we will come back to it later (the order of creation matters here because it affects thedrawing arrangement).Now let’s put the Pieces onto the canvas. Placing the BoardPieces is easy. We already have the Image array andthe Location array for BoardPieces. We just need another array of the interface type Piece to keep track of theBoardPieces. We will go through the Image array and the Location array and create BoardPieces in order. EachBoardPiece ID should match with its index in the Piece array.For PuzzlePieces though, we want to pick one of the nine images randomly. We can do so by implementing amethod called getRandomPuzzlePiece() that takes in Location and DrawingCanvas. This method will use aRandomIntGenerator that randomly generates an integer between 0 and 8. We will first check if this randomlygenerated index represents an image that’s already used. If so, we want to get another random index until we findan unused one, because every PuzzlePiece should have a unique image. Once we’ve found an unused index, wecan create a new PuzzlePiece. We are going to return this Piece we randomly created and store a reference to it ina Piece array. We’ll do this 9 times to place all the PuzzlePieces. Note that the ID in PuzzlePiece is NOT associatedwith its random array index but with the unique piece image.To avoid using magic numbers like 8, you can create a MAX_NUM_OF_PIECES constant. In our case,MAX_NUM_OF_PIECES is 9. When we need to use this as an index, we can do MAX_NUM_OF_PIECES – 1, whichtakes care of the offset from zero-based indexing.Hooray! Now you should be able to see all the BoardPieces and PuzzlePieces on your canvas. But we are not quitethere yet. Your GUI controller (class Puzzle) needs to handle all the mouse events and the logic of verifying thePieces. Take a break before you proceed. :)Part 3c: Dragging PuzzlePieceBy PA5, you should be pretty familiar with onMousePress(), onMouseDrag(), and onMouseRelease(). The logic isstill the same. You want to keep a reference to lastPoint and find the difference between lastPoint and currentpoint. You do need to do one additional thing here, and that is keep track of which PuzzlePiece is being grabbed.You can do so by looping through the Piece array holding all the PuzzlePieces and find which PuzzlePiece containsthe point.Part 3d: Verifying PuzzlePieceHmmm… Where should you be checking if the puzzle piece has been placed (not while still dragging) in the correctspot on the board to the left? There’s only one place, and I’ll let you answer it (HINT: it is NOT in onMouseDrag()).But I’ll walk you through how to verify a puzzle piece has been placed correctly. Remember many words ago, wesaid if the center of the PuzzlePiece is within a 50 by 50 pixels square in the center of the BoardPiece, we can saythe PuzzlePiece is “contained” in the BoardPiece (this check is already done in contains()). Here, the methodsyou’ve implemented in BoardPiece and PuzzlePiece come in handy. You can use getCenter() to get the center ofthe grabbed puzzle piece and call contains() on every BoardPiece in a loop. If we were able to find a BoardPiecethat contains the center of the grabbed puzzle piece AND they are equal (matching IDs), then we can go ahead and“lock” this Piece. Again, the “locking”is done by hiding the grabbed puzzlepiece and showing the BoardPiece asdescribed in the overview. Don’tforget to show green highlightsaround the BoardPiece to let the pre-schoolers know that they’ve placedthe Piece correctly!Part 3e: Verifying VictoryAlmost there… I can hear the sound of victory! How can we check if the puzzle is finished? One easy way to do thisis having yet another array. This array will contain booleans that represent whether a Piece has been “locked”.Since the Pieces have unique IDs from 0 to 8, we can just use those as indices and mark them true as they get“locked”. The game is done after every element in this boolean array becomes true. At the moment of victory, youshould hide the green highlights around each BoardPiece and display a seamless image composed of 9 pieces. Youshould also show the winning message.And yaaaaaay, that’s the end of this assignment.RunningTo compile your Puzzle game, type this into the terminal:&gt; javac -cp ./Acme.jar:./objectdraw.jar:. Puzzle.javaTo run your Puzzle game, type this into the terminal:&gt; java -cp ./Acme.jar:./objectdraw.jar:. PuzzleYou must have all the files in the pa5 directory including Acme.jar and objectdraw.jar.Do not have any other .java source files in you pa5 directory other than the ones required for this assignment.TurninTo turnin your code, navigate to your home directory and run the following command:&gt; cse11turnin pa5You may turn in your programming assignment as many times as you like. The last submission you turn in beforethe deadline is the one that we will collect.VerifyTo verify a previously turned in assignment,&gt; cse11verify pa5If you are unsure your program has been turned in, use the verify command. We will not take any late files youforgot to turn in. Verify will help you check which files you have successfully submitted. It is your responsibilityto make sure you properly turned in your assignment.Files to be CollectedSource Files Images Misc.BoardPiece.javaHideable.javaHighlightable.javaPiece.javaPuzzle.javaPuzzlePiece.javap0.jpgp1.jpgp2.jpgp3.jpgp4.jpgp5.jpgp6.jpgp7.jpgp8.jpgAcme.jarREADMEobjectdraw.jarExtra Credit ( 5 points )Note: There are NO separate extra credit files for this assignment. Implement the extra credit in the same files as theregular assignment. Specify in your README Program Description which parts of the extra credit you haveimplemented.1. Dragging after Winning [2.5pts total]After the user has finished the game, the 9 BoardPieces should look like a complete image of an aerial view of UCSan Diego. As a part of extra credit, enable dragging this “image” around the canvas (really, you are dragging these9 pieces together). You will have to change the move() method inside BoardPiece. Don’t worry about dragging theimage off canvas (you can always resize the canvas and get it back).2. Clicking after Winning [2.5pts total]The pre-schoolers just can’t stop playing your puzzle again and again, but their teacher is not always there torestart the game for them. To make it easier for them, add a feature so that clicking anywhere on the completeimage of the puzzle will restart the game. You’d want to add an onMouseClick() and reinitialize many things (Hint:You don’t need to reinitialize the Image array or the Text object). Clicking on the white space should do nothing.NO LATE ASSIGNMENTS ACCEPTED!START EARLY!…and HAVE FUN!","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：O BJECT -O RIENTED P ROGRAMMING I NDIVIDUAL P ROJECT 02","slug":"page44","date":"2016-11-19T14:22:33.000Z","updated":"2017-01-04T13:43:45.078Z","comments":true,"path":"2016/11/19/page44/","link":"","permalink":"http://yoursite.com/2016/11/19/page44/","excerpt":"","text":"Introduction基本思路:先根据作业给的类图理清楚代码框架的意思,对应函数的意思,然后绘出图形在对应位置,书的移动的话就是不停的刷新改变书的位置形成的动画效果注意点:绘图的时候位置不容易把握,要多次尝试.在书移动的过程中注意边界RequirementO BJECT -O RIENTED P ROGRAMMINGI NDIVIDUAL P ROJECT 02Project 02 BackgroundThis is an individual programming assignment. It is not to be completed as partof a team or with a peer programming partner.Your goal is to create a program that is made up of seven classes:CSC211Project2Project2PanelStudentTextbookDrawableInterfaceDrawableStudentDrawableTextbookThe application should draw two studentsand have the left student toss a textbook thatbounces between the two students. A demo ofthe application and several files to help youget started are available for download on thecourse web site.The project’s learning objective is to use inheritance to quickly create a pair of new object classesthat take advantage of work performed in previous labs and projects. The UML below showshow these classes relate together.+getX(): int+getY(): int+getLocation(): Point+moveTo(absX: int, absY: int): void+moveTo(whereToGo: Point): void+moveBy (dX: int, dY: int): void+move (): void+getVelocityX(): double+getVelocityY(): double+setVelocity(dvX: double, dvY: double): void+getColor(): Color+setColor(theColor: Color): void+draw(pen: Graphics): void«interface»DrawableInterface+tossBook(): void-Location: Point-xVelocity: double-yVelocity: double-shirtColor: Color-myBook: DrawableTextbookDrawableStudent-getBookInitials: String-checkBounds(pen: Graphics): void-Location: Point-xVelocity: double-yVelocity: double-bookColor: ColorDrawableTextbook+getName: String+getBook: Textbook+getHealth: double+getKnowledge: int+setName(theName: String): void+learnSomething(numPages: int): int-name: String-book: Textbook-health: double-knowledge: intStudent+getSubject: String+getPageCount: int+getUnreadPageCount: int+getWeight: double+readPages(numPages: int): int-subject: String-pageCount: int-unreadPageCount: intTextbookREQUIREMENTS FOR EACH CLASS CAN BE FOUND BELOW:The Textbook ClassYou should re-use your Textbook class from Project 1. To help resolve any issues or errorsyou may have had in implementing the class, a model solution has been posted on the courseweb site in the Project02 Starter Package.The Student ClassYou should re-use your Student class from Project 1. To help resolve any issues or errors youmay have had in implementing the class, a model solution has been posted on the course website in the Project02 Starter Package.The Interface DrawableInterfaceIn Lab 06 you designed the Java interface DrawableInterface and implemented it in theBall and Block classes. In this project, you will re-use that interface. The requirements for theinterface DrawableInterface can be found in the UML diagram above. This interface and itsmethods should be fully documented using javadoc style comments.The DrawableStudent ClassThe DrawableStudent class represents the visualization of a university student. It shouldhave all the characteristics and behaviors of a Student, but also implement theDrawableInterface. You should implement all methods described in the interface,similar to the steps you took in Lab 06, except, instead of using a data field for the x-position and a data field for the y-position, use a single Point object.Because we need to draw our textbook, the Textbook data field of our parent will not beenough. We need to create our own DrawableTextbook data field, myBook. Yet, we stillwant to take advantage of the parent class implementation, so at the end of the constructor,call setBook(myBook) to replace the default parent class Textbook with yourDrawableTextbook.The DrawableStudent class needs a tossBook method that sets the velocity of theDrawableTextbook. You only need to set the x-velocity so the textbook moves to the right.If all the classes are implemented properly, the textbook will sense when it gets to the rightside of the window and revers direction back to the student.The DrawableTextbook ClassThe DrawableTextbook class represents the visualization of a university-level textbook. Itshould have all the characteristics and behaviors of a Textbook, but also implement theDrawableInterface. You should implement all methods described in the interface, similar tothe steps you took in Lab 06, except, instead of using a data field for the x-position and a datafield for the y-position, use a single Point object.You can use the following Java code to implement the DrawableTextbook class draw method:public void draw(Graphics pen){checkBounds(pen);pen.setColor(bookColor);pen.fillRect(xPosition, yPosition, 50, 70);pen.setColor(Color.DARK_GRAY);pen.setFont(new Font(“Monospaced”, Font.BOLD, 20));pen.drawString(getBookInitials(), xPosition, yPosition+50);}This method calls two private DrawableTextbook methods, getBookInitials andcheckBounds that you must implement.The checkBounds method should perform similar to the checkPosition method in the twoprevious labs. If the book has moved to the edge of the window, the velocity in that directionshould be reversed and the book moved back into the window if it moved off.Since this method is a DrawableTextbook method, we don’t have access to the Paneldimensions. You can use the following code to get the clipping rectangle for the Panel by askingthe Graphics object pen:Rectangle edgeRect = pen.getClipBounds();The method getBookInitials creates and returns a string made up of the first letter of eachword in the textbook subject. Here are pseudo-code statements that perform the task:String bookSubject = some string to parseString initials = bookSubject.substring(0,1);for (int i = 0; i","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：Assignment 3","slug":"page43","date":"2016-11-18T15:21:53.000Z","updated":"2017-01-04T13:28:08.650Z","comments":true,"path":"2016/11/18/page43/","link":"","permalink":"http://yoursite.com/2016/11/18/page43/","excerpt":"","text":"Introduction基本思路:判断逻辑表达式的真假,根据优先级从里往外一层一层的解表达式,最后的到表达式的值注意点:题目中符号的值是给定的,不用自己定义,在或与非结合的时候表达式的值的计算要注意RequirementAssignment 3Instructor: Musard BalliuOctober, 2016In this assignment, you will implement an object-oriented application to deter-mine the truth value of boolean circuits. A boolean circuit is a logical formulaconsisting of boolean variables a,b,x,y,···, negation (NOT, written as !), con-junction (AND, written as ∧) and disjunction (OR, written as ∨). For example,(a ∧ b) ∨ (c ∨ !(b)) is a boolean circuit on variables a,b and c. The truth valueof a boolean circuit is either true or false, and it can be determined when-ever the truth values of all variables of the circuit are fixed. For example, ifa = true,b = false and c = true, the truth value of the boolean circuit aboveis true. An assignment of truth values to the boolean variables of a circuit iscalled a truth assignment for that circuit.Two circuits are equivalent iff they have the same truth value for all possibletruth assignments of their variables. For example, the circuit a ∧ a is equivalentto the circuit a, and the circuit !(a∨b) is equivalent to the circuit !(a)∧!(b). Thecircuit a∧b is not equivalent to the circuit a∨b, since, for instance, if a = falseand b = true, the truth value of the first circuit is false, and the truth value ofthe second circuit is true.The free variables of a circuit are the variables used in that circuit (withoutrepetitions). For example, the free variables of the circuit (x ∧ y) ∨ !(x) are xand y.The taskIn this assignment, you are given two classes, Assignment.java and Circuit.java,and they are already implemented for you. In particular, the method equals(),implemented in Circuit.java, allows to determine whether or not two circuits areequivalent.1DIT948-2016, Assignment 3The goal of this assignment is to complete the implementation of subclassesVariable.java, Not.java, And.java e Or.java of the superclass Circuit.java. Con-cretely, you have to complete the implementation of the methods isTrueIn(),freeVariables() and toString() for each subclass (and a few other methods,constructors and instance variables). The methods have the following specifica-tion:• isTrueIn(Assignment a) determines whether a circuit is true for a givenassignment a.• freeVariables() returns an array containing the free variables of a cir-cuit, in any order and without repetitions.• toString() returns a string representation of the circuit.You also have to implement a main class, CircuitMain.java, that creates twocircuits !(a ∧ b) and !(a) ∨ !(b) and checks whether or not they are equivalent.Finally, you have to create n random circuits of maximal depth 5, calculate theirtruth value, and print to the console both the (string representation of) circuitsand their truth values, for a given positive integer n provided as input by theuser.In order to get a VG, you must implement a graphical user interface (GUI) thathandles the features in class CircuitMain.java.The specification of each method is provided as commented java files, includedin the following sections and available for download fromhttp://www.cse.chalmers.se/ musard/teaching/programming2016/dit948-2016/Assign3 2016.zipThe interface, example sessionThe set of all variables used in a random circuit is ”v”,”w”,”x”,”y”,”z”,”a”,”b”,of which the variables ”v”,”y”,”a” are true in the assignment (and, conse-quently, the remaining variables are false). The class CircuitMain has a mainmethod which, when executed, should lead to an user session of the followingkind:Welcome to the DIT948 circuit oracleI will now check equivalence for the following circuits:Circuit 1: !((a /\\ b))Circuit 2: (!(a) \\/ !(c))2DIT948-2016, Assignment 3The result is: falseHow many random circuits should I generate? 5I have created the following random circuits:1. (((b \\/ (y \\/ z)) \\/ b) /\\ z) : false2. (v /\\ (((a /\\ v) /\\ (b \\/ w)) \\/ ((z \\/ a) /\\ !(y)))) : false3. !((!(!(v)) /\\ z)) : true4. y : true5. (v \\/ !(!((z /\\ v)))) : trueSimilarly, the GUI implementation may result in an interactive session as below.The classesClass Variable.java/ This is a subclass of Circuit implementing Variable in a Circuit */public class Variable extends Circuit {3DIT948-2016, Assignment 3// Private instance variable,// name, a String representing a variable// code here// Constructor with parameterspublic Variable(String name) {// code here}/ String representation of a variable of a circuit /public String toString() {// code here}/ Returns the name of the variable /public String getName() {// code here}/ Returns true if the variable is true in the assignment /public boolean isTrueIn(Assignment assignment) {// code here}/ Returns the array of free Variables in this Variable. /public Variable[] freeVariables() {4DIT948-2016, Assignment 3// code here}}Class Not.java/ This is a subclass of Circuit implementing the negation of a Circuit /public class Not extends Circuit {// Private instance variable,// negated, a Circuit to be negated// code here// Constructor with parameterspublic Not(Circuit negated) {// code here}/ String representation of the negation of a circuit /public String toString() {// Code here}/ Returns true if the negation of the circuit is true in the assignment /public boolean isTrueIn(Assignment assignment) {// code here}/5DIT948-2016, Assignment 3 Returns the array of free Variables in the negated circuit. The order of variables is not important, however, a variable should appear exactly once in the array (no repetitions) /public Variable[] freeVariables() {// code here}}Class And.java/ This is a subclass of Circuit implementing the conjunction of a left Circuit and a right Circuit/public class And extends Circuit {// Private instance variables,// left, the left Circuit// right, the right Circuit// code here// Constructor with parameterspublic And(Circuit left, Circuit right) {// code here}/** String representation of the conjunction of a left circuit and a right circuit /public String toString() {// code here}6DIT948-2016, Assignment 3/ Returns true if the conjunction of the left circuit and the right circuit is true in the assignment*/public boolean isTrueIn(Assignment assignment) {// code here}/ Returns the array of free Variables in the conjunction of a left circuit and a right circuit. The order of variables is not important, however, a variable should appear exactly once in the array (no repetitions) /public Variable[] freeVariables() {// code here}}Class Or.java/ This is a subclass of Circuit implementing the disjunction of a left Circuit and a right Circuit /public class Or extends Circuit {// Private instance variables,// left, the left Circuit// right, the right Circuit// code here// Constructor with parameterspublic Or(Circuit left, Circuit right) {// code here7DIT948-2016, Assignment 3}/ String representation of the disjunction of a left circuit and a right circuit/public String toString() {// code here}/** Returns true if the disjunction of the left circuit and the right circuit is true in the assignment /public boolean isTrueIn(Assignment assignment) {// code here}/* Returns the array of free Variables in the disjunction of a left circuit and a right circuit. The order of variables is not important, however, a variable should appear exactly once in the array (no repetitions)*/public Variable[] freeVariables() {// code here}}Remarks and NotationYour are NOT allowed to introduce additional (static or instance) variables inthe class templates. However, you can implement additional methods, if needed.Classes Assignment.java and Circuit.java can be used as APIs and you are notallowed to change their implementation.8DIT948-2016, Assignment 3The GUI provided earlier is just an example. Feel free to implement your ownfancy version, so long as it contains the basic tasks as required by the assignment.Grading• To get a G, you do not need to implement a graphical user interface.• To get a V G, it is necessary implement all tasks in the assignment.Note that these requirements are necessary, but not sufficient, to get therespective grades (see Administrative matters).Administrative mattersStrive for readable code with appropriate comments! While the ultimate test ofa program is that it does what it is supposed to do, we should be able toread the program and understand it.The assignment is to be completed in groups of two students. (Groups of differentsize should first be agreed with the course instructor.)Solutions must be uploaded to the GUL system by 23:55 on October 19.Please note: The submission must be made via GUL. It’s no good sendingit to me via email, either before or after the deadline!Only Java source files should be uploaded, no class files. Your Java files shouldbe put in a zip-archive with the following name:assign3_author1_author2.zipwhere author1, author2 are the surnames (family names) of the group members.You must also supply a README-file (README.txt) containing the names ofthe authors and their social security numbers, together with a brief statementabout each author’s contribution. For example, “author1 has been responsible foruser input and author2 for the program logic”. A statement such as “All authorshave contributed equally to all aspects of the program” is not acceptable.Note that each author must submit individually via the GUL (even thoughit is the same program!). Only students who submit via the GUL can be graded.All comments etc. will be posted on the course web page.9DIT948-2016, Assignment 3Once the deadline has passed, each group must explain solutions to the TAsduring the first Thursday supervision session. Exceptions are to be agreedwith the instructor and the TAs. Group members are expected to know andexplain all parts of the code despite their statement of contribution.10","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：Task 3 Cryptography","slug":"page42","date":"2016-11-16T19:21:23.000Z","updated":"2017-01-11T09:11:33.977Z","comments":true,"path":"2016/11/17/page42/","link":"","permalink":"http://yoursite.com/2016/11/17/page42/","excerpt":"","text":"Introduction基本思路:对字符串的加密与解密,作业中的加密是简单的对应字符换成密码中的字符,密码长度为26个不重复字符如密码为bcdefghyjklmnopqrstuvwxyza 那对应文章中的a字母都换成b字母,b字母换成c字母,类推解密的时候倒过来就行注意点:给你一篇密文文章,得到他密码的方法是作业中统计字母出现频率的高低,如果密文中b出现频率最高,而现实中假设人们用a字母最多,那b字母就是a字母的密码RequirementINFO1103 Introduction to Programming, Semester 2, 20161Task 3: CryptographySubmission deadline: 5pm on Saturday, 15 th October (Week 11)Submission: Submit a zip file containing your Encrypter.java, SecretMessages.java andFrequencyDecryption.java files via the online system PASTA.Weight: 7 marks = 7% of your final mark.This assessment must be completed individually.IntroductionYou, being a studious student, open this task description, ready for whatever challenge you may need to face.However, you are suddenly faced with a big problem! Your instructors have literally encrypted a large sectionof the task description!What!Uq hyygd hugk wyr’sk ckbuzakjkc qaud ikddmok. Byxojmq - rhmquyxd!Lk jkmhhw ayzk wyr’sk kxfywkc cyuxo qaud mdduoxikxq.(Lk bkjqmuxhw kxfywkc ljuquxo uq!)Lk qayroaq uq lyrhc tk xubk qy amsk dyik zjuekd nyj qak nujdq qajkk zkyzhkqy nuxuda qak mdduoxikxq.Cy wyr qauxg wyr byrhc tk yxk yn qaydk zkyzhk?Qy tk khuouthk, wyr irdq amsk zmddkc mhh yn qak xyx-aucckx qkdqd yxZMDQM.Un wyr amsk zmddkc qakdk qkdqd, qakx prubghw bakbg zumeem. Amdmxwyxk imck m zydq qamq dmwd…‘Au kskjwyxk. Qaud iuoaq tk m tuq jmxcyi, trq prujgw pryggmd mjk p-rjuyrdhw p-rqk!!!’Un xyq, wyr iuoaq tk qak nujdq qy nuxuda!Qy bhmui wyrj zjuek, imgk drjk wyr’sk zmddkc mhh qak ZMDQM qkdqd.Un wyr amsk, qakx imgk m zydq qamq dmwd kvmbqhw qak dmik qauxo mdmtysk.Qamq ud, imgk m zydq qamq dmwd:‘Au kskjwyxk. Qaud iuoaq tk m tuq jmxcyi, trq prujgw pryggmd mjk p-rjuyrdhw p-rqk!!!’XYQK: Nkkh njkk qy zydq mxyxwiyrdhw, trq imgk drjk qaud zydq ud zrthub, dy yqakjd gxyl wyr’sknuxudakc.Qak dkbjkq ikddmok nyj dkbyxc zhmbk ud: ‘Pryggmd pryqk pryggmd pruqk prubghw.’.Zhkmdk zydq qaud ux nyhhyl-rz cudbrdduyx dkbquyx yn qak nujdq zydq un wyr mjk dkbyxc! :)Nuxmhhw, qak dkbjkq ikddmok nyj qaujc zhmbk ud: ‘Zkcmxqub zjyojmiikjd zkjnyji zjmbqumhhwzkjnkbqhw… zkjamzd’.Momux, zhkmdk zydq qaud ux nyhhyl-rz cudbrdduyx dkbquyx yn qak nujdq zydq un wyr mjk qaujc! :)Xyq nujdq, dkbyxc yj qaujc, trq dquhh lmxq qy fyux ux yx qak nrx? Imgk rz wyrj ylx qmrqyojmi mxc zydquq ux qaknyhhyl-rz cudbrdduyx dkbquyx.INFO1103 Introduction to Programming, Semester 2, 20162Nuxmhhw, qakjk mjk frdq m nkl qauxod lk lmxqkc qy dmw.Dyikquikd, wyr iuoaq nuxc qamq qak yjckjkc hudq yn iydq byiiyx hkqqkjd ux yxk qkvqud dhuoaqhw cunnkjkxq njyi qak yqakj.Qamq’d ygmw qayroa! Wyr bmx dquhh rdk qaud ikqayc, trq luhh mhdy xkkc qy rdk dyik frcokikxq qy nuvmxw kjjyjd.Mhh juoaq, qamq’d kskjwqauxo!Lk ayzk wyr amc nrx, mxc luda wyr oyyc hrbg nyj qak jkdq yn qak byrjdk! :)Nooooo!!!How can this be? How can you do your assignment when half of it is gibberish!? You didn’t ask for a taskdescryption! As you are thinking this, something suddenly occurs to you. You are a Java programmer now!You have all the skills you need to crack this silly cipher, and you’re going to do it!Before You BeginRemember that this task is here to help you improve your programming skills. When doing this task, youmight find some parts tricky, but this is normal and also a good thing (if we were never challenged, we wouldnever learn anything!). The most important things are to start this task as soon as you can, to ask questionswhen you need help and to be persistent! It’s often good to work on one part of the assignment at a time, thensubmit to PASTA to see how you went with it. Try to be creative when approaching problems - usually thereare many ways to do something. We hope you enjoy this cryptography-themed task! :)Part 1 – Your Own Secret MessagesIn the first part of this assignment, your task is to write a program to encrypt and decrypt your very own secretmessages using a substitution cipher! This substitution cipher will involve swapping each letter of the alphabetwith a different letter and sometimes also removing spaces. For example, maybe “a” might be replaced with“e”, “b” might be replaced with “a”, “c” might be replaced with “f” and so on.In order to encrypt and decrypt these kinds of messages, the sender and receiver must both know a secret key.A key is a set of rules that tell you which letters to swap with which. One way that you can represent this keyis with a string that contains all of the letters from a to z exactly once. The first letter in the string should bethe letter that replaces “a” when encrypting, the second letter in the string should be the letter that replaces“b”, the third letter should be the one that replaces “c” etc.For example, if the string is “bzcdefghijklmnopqrstuvwxya”, then “a” would be replaced with “b”, “b” wouldbe replaced with “z”, “z” would be replaced with “a” and everything else would stay the same. So, a word like“zebra” would become “aezrb”.When decrypting, the reverse would be done: “b” would be replaced with “a”, “z” would be replaced with“b”, “a” would be replaced with “z” and everything else would stay the same. So, “aezrb” would become“zebra”.All right, with that in mind, are you ready to make your own secret messages?INFO1103 Introduction to Programming, Semester 2, 20163Step 1 ‐ Getting the skeleton codeIn this task description, there is a section called Setting Up. Please read this section carefully for informationabout the skeleton code and follow the instructions to set up your workspace.Step 2 – Understanding the Encrypter classFor this part of the assignment (i.e. Part 1), we will be focusing on only two of the three skeleton code classes:Encrypter and SecretMessages. You could think of the Encrypter class as a set of instructions formaking encrypters. That is, things that can encrypt and decrypt secret messages. Each encrypter has its ownspecial key for encrypting and decrypting messages, and also a setting for removing whitespace. (Recall thatin programming, all characters that are not visible when displayed are called collectively whitespace. Thus,the whitespace includes the normal space “ ” but also the tab “\\t”, new line “\\n” and some other characters.)This option to remove whitespace is useful, because messages withoutspaces are harder to guess. For example, it might be easy to guess thatsomething like “T od Dto” by looking at word length, but “TodDto”would be harder!Sometimes you might not want to remove whitespace, though,because then it’s more difficult to read the message after decryptingit. For example, “IamMia” is more difficult to read than “I am Mia”.Perhaps when testing your code, it would be nicer if the decryptionwas very easy to read. So, in some cases, not removing whitespacecould be helpful.This is why each encrypter has a removeSpaces setting. If removeSpaces is set to true, then the encrypterwill remove all whitespace when encrypting. If it is set to false, then the encrypter will not remove whitespace.Note that the encrypter should never remove whitespace when decrypting, as this just makes the messageunnecessarily difficult to read.Step 3 – Writing the Encrypter ClassYou are welcome to complete this task in any order you like, but if you’re not sure where to begin, try startingwith the getKey and isRemovingSpaces methods in the Encrypter class.The blue comments above each method tell you exactly what the method should do, and give you informationabout input and output. Please read this carefully!After you have written a method, it’s a good idea to check that it works correctly. You can do this by submittingyour code to PASTA. Even if you have only written one method, you can still submit your code. Rememberthat you are allowed as many attempts as you like, so there really is no harm in doing this. To submit yourcode, first make sure your code compiles (i.e. no red errors in Eclipse), then follow the submission instructionsat the end of this task description.If anything seems unfamiliar, try looking at the lecture slides, tutorial questions and textbook sections onobject oriented design. Also, here are a few hints that you might find useful when completing these methods!INFO1103 Introduction to Programming, Semester 2, 20164Hint 1 If you have a character and want to check if it is a letter or whitespace, you can use the Charactermethods isWhitespace and isLetter.Here’s an example of how you could check if the character ‘T’ is a letter:if (Character.isLetter(‘T’))System.out.println(“This is a letter”);Hint 2 You can easily check if a letter character is lowercase or uppercase using the following Charactermethods: isUpperCase, isLowerCase.Here is an example of how you could check if the character ‘B’ is uppercase:if (Character.isUpperCase(‘B’))System.out.println(“This character is an uppercase letter!”);Hint 3 Want to get the lowercase equivalent of an uppercase letter, or the uppercase equivalent of alowercase letter? Well then, these Character methods are just what you need: toUpperCase,toLowerCaseHere’s an example of how you could get ‘B’ in lowercase:char lowercaseB = Character.toLowerCase(‘B’); //lowercaseB will be ‘b’Hint 4 Say you have a character which is a lowercase letter, and you want to know its position in thealphabet. For example, ‘a’ is in position 0, ‘b’ is in position 1, ‘c’ is in position 2 etc.Here’s a simple way you can do it (note that charName is the name of the character you’re interestedin).int position = charName - ‘a’;How does this work? Well, charName and ‘a’ are converted to certain integers. ‘a’ is converted to97, ‘b’ is converted to 98, ‘c’ to 99 etc. (see this table for referencehttps://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html ). Then, these integers aresubtracted.So, something like ‘c’ – ‘a’ becomes 99 – 97, which is 2. Ah! And 2 is the position of ‘c’ in thealphabet. :D.To find the position of an uppercase letter, just convert it to lowercase first and follow the sameprocess!Hint 5 What about going backwards? What if you know the position of a letter in the alphabet and youwant to know what character it is? Well, we can do something similar to before!Here’s how we could find the character in position 4 of the alphabet:int character = (char) (4 + ‘a’); //character will be eWhy is this e? Well, ‘a’ is converted to 97, so we have 4+97, which is 101. Then, we convert 101to a character and get ‘e’.INFO1103 Introduction to Programming, Semester 2, 20165Step 4 – SecretMessages ClassNow that we’ve made our Encrypter class, it’s time to use it!Write a program in the class SecretMessages that creates an encrypter and allows the user to do variousthings with this encrypter.This encrypter should initially: use the key “zabcdefghijklmnopqrstuvwxy” to encrypt and decrypt messages be set to not remove spacesThe program should give the user 5 different choices of things to do with the encrypter:1. encrypt a message2. decrypt a message3. check the key4. change the key5. change the space-removal mode.After the user has made a choice, the program should use the encrypter to perform their choice. Then, it shouldallow them to make another choice and it should perform that action. It should keep allowing the user to makechoices until they decide to quit. See the next section for some examples.Example Input/OutputThe following are some examples of input/output. Note that the black text is output, and the green text isinput.Example 1:What would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit1Enter a message to encryptQuokkas are amazing! :DThe encrypted message is: Ptnjjzr zqdzlzyhmf! :CWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit2Enter a message to decryptPtnjjzr zqd zlzyhmf! :CThe decrypted message is: Quokkas areamazing! :DWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quitqQuitting. Goodbye.INFO1103 Introduction to Programming, Semester 2, 20166Example 2:What would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit1Enter a message to encryptDo you like quokkas?The encrypted message is: Cn xnt khjdptnjjzr?What would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit5Changing modeWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit1Enter a message to encryptDo you like quokkas?The encrypted message is: Cnxntkhjdptnjjzr?What would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quitqQuitting. Goodbye.Example 3:What would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit3This is the key: zabcdefghijklmnopqrstuvwxyWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit4Enter a new keyquokkaThe new key was invalid so the key couldn’tbe changedWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit4Enter a new keyabcedfghijrstuvwxyzklmnopqThe key was successfully changedWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quit3This is the key: abcedfghijrstuvwxyzklmnopqWhat would you like to do?1 ‐ encrypt a message2 ‐ decrypt a message3 ‐ check the key4 ‐ change the key5 ‐ change space modeother ‐ quitqQuitting. Goodbye.INFO1103 Introduction to Programming, Semester 2, 20167Part 2 – Descryption DecryptionIn the last section, you made your own encrypter to encrypt and decrypt your own secret messages. Thisworked by swapping letters around. You also saw that you could remove spaces to make those messages moredifficult to decrypt. Of course, if you wanted to go a step further, you could also remove capitalisation andpunctuation. This would leave just a big block of letters.If someone handed you a long block of letters like that and you had to decrypt the message without the key,what would you do? It might seem like a difficult task, but we can use a special trick!Say you read a text in plain English, and found that the most common letter was “e”. Then, you read anencrypted message and found that the most common letter was “z”. Would you be able to guess what that “z”actually was? Probably! If the most common letter in English was ‘e’, then there would be good evidence tothink that that “z” was actually an “e”!You could do something similar with the rest of the letters! You could get a list of all the letters in Englishranked based on how frequently they occur and a list of all letters in the encrypted message ranked in the sameway. Then you could try to match up the letters in the lists to guess the key!Of course, this might not always work out exactly. For example, it might be tricky trying to decrypt a novelwith no e’s in it! (https://en.wikipedia.org/wiki/Gadsby_(novel) ). However, it can be useful in giving you ageneral idea of which letter could be which, and you could try out different combinations! Generally, thelonger the encrypted message, the better this method will work.With all of this in mind, it’s time to finally discover what the encrypted part of the task description says!The encrypted message is quite short, which means that the distribution of letters not exactly the same asgeneral English. So, to make things a little simpler, we are providing a reference text to use. If you count thenumber of times each letter appears in the reference text, and sort the letters based on how often they appear,the list will be the same as the encrypted text.A reference text of standard EnglishThis is some sample text to use as a reference. Have you heard of quokkas? They’re reallycute Australian animals that seem like little roos with big puffy cheeks! If you want tosee one, the best way is to fly to Perth, then catch a ferry over to Rottness island.There are apparently about 10,000 on Rottness island. Wow! Sometimes, if you have superbselfie skills, you can take a selfie with them! They often look like they’re smiling,which makes them very photogenic! Tortoises are also very q-ute. They have shells, yousee. Tortoises might eat juicy fish. Did you hear fish is ‘poisson’ in French? Tortoisesare better than fish. Juice is tastier than wine. Is juice a good prize?Nnnnnooooooooooooo! This sentence is still strange. quip, quid, quiz, quote, quit. Gooddogs/ pups meet bugs under beds. Ponds. Pepper. Mind mood.*Actually spelt “Rottnest”, but we needed less t’s….Your task now is to finish the class FrequencyDecryption. We have written many of the methods for you– you only need to write getKey and printTaskDescription.What could the secret message say?INFO1103 Introduction to Programming, Semester 2, 20168Example OutputThe secret message is:Well, we can’t tell you what the secret message is in the example output, butit should be in this form at least. Blah blah blah blah blah blah blah blahblah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blahblah blah blah blah blah etc.Setting UpSetting up your workspaceIn Eclipse, create a project “info1103_task3”. In this project, create a package “cryptography”. Then, createthree classes within this package: Encrypter, SecretMessages and FrequencyDecryption.Downloading the skeleton codeDownload the skeleton code from PASTA for these three classes. Then, you can either import these classes,or copy and paste the skeleton code into each of the classes you made.Methods to completeTake a quick look at the skeleton code. You’ll notice that, in some methods, there is one of the followingcomments://TODO complete this method//TODO complete this constructorThese are the methods that you will need to write for this assignment. You don’t need to modify any of themethods that don’t have one of these comments – we have already done these for you!NOTE: we recommend that you read the rest of the task description before you start writing any of themethods!!INFO1103 Introduction to Programming, Semester 2, 20169Methods already return values!You might notice that, in some of the methods you need to complete, we have added a return statement tothe skeleton code. For example,public String getKey(){return “”; //TODO delete this when you write this method}This has been done to make your code compile. That way, you can submit to PASTA even if you haven’twritten some of the methods.When you start writing a method, delete this return statement and replace it with your own code.Method headersEach method has a header, such as:public boolean setKey(String newKey)Please do not modify these headers at all because we use them to test your code.Additional methodsYou are welcome to add any additional methods to the skeleton code if you would like to.Method CommentsFinally, you’ll notice there are blue comments above each method, which describe what each method does,what the parameters should be, and what the method will return depending on the input. Before writing anymethods, it’s very important to read these comments carefully, so you can make sure your method does exactlywhat it should!Submission InstructionsSubmitting in PASTA1. Before submitting, you should zip your source code files. Open the folder containing the classesEncrypter.java, SecretMessages.java and FrequencyDecryption.java. If you havetrouble finding the src folder, first find and open your workspace folder. Then, open the folder“info1103_task3”. The src folder will be inside. Navigate into the src folder, right click on the“cryptography” folder and choose “Send to -&gt; Compressed (Zipped) folder”.2. Log in to PASTA (http://info1103.it.usyd.edu.au/) with your Unikey login and password.Note: If you are off-campus, you will need to establish a VPN connection to access PASTA. This means installinga program called “VPN client” on your computer and running it every time when you use PASTA off-campus.Instructions how to do this are available here:INFO1103 Introduction to Programming, Semester 2, 201610http://staff.ask.sydney.edu.au/app/answers/detail/a_id/519/~/how-do-i-download-and-install-the-vpn-client-to-access-the-university-network%3FIf you have problems with VPN, try synchronising your password:https://www.auth.usyd.edu.au/extro/pwresync/If this doesn’t work, contact the ICT helpdesk: http://sydney.edu.au/ict/student/contact/3. Find Task 3 and press “Submit”. Then press “Choose File” and attach the zipped source files, thenpress “I accept” (after reading the University policy on academic honesty).4. If you see a message indicating that your code is queued for testing under Task 3, this means that yourcode has been uploaded successfully.5. If you see a red error box, you need to fix any problems indicated before your submission will beaccepted.6. Once your program has been tested, the page will tell you to refresh for results, so refresh the page.You should see green, red and grey boxes. Each box corresponds to a test; a red box indicates that yourprogram has failed the respective test, a green box indicates that your program has passed the test, anda grey box indicates that the test is hidden (you will not see the result of the test until after the duedate).7. If you have red boxes, you can see which tests were not passed by clicking on the task name. Correctthe errors (go to Eclipse, re-write your code and test it carefully) and then submit again in PASTA.8. For further help on using PASTA, check the INFO1103 User Manual, or post a question on Piazza.You can submit as many times as you want. Please make sure that your program compiles and runs beforeyou submit it in PASTA. Your last submission will be the one that will be marked.Marking5 marks will be allocated for the Encrypter and SecretMessages classes (core part of the task) and 2marks for the FrequencyDecryption (extension part of the task).Your mark is the percentage of the tests that you have passed. For example, if you pass half of the tests for thecore part of the task and all of the tests for the extension, you will receive 50% of 5 marks + 100% of 2 marks= 4.5 marks total. If you do not attempt the extension part of the test, the maximum mark you can get is 5/7.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Python代写：Introduction to Computer Programming with Python","slug":"page41","date":"2016-11-16T01:11:23.000Z","updated":"2017-01-04T04:01:50.296Z","comments":true,"path":"2016/11/16/page41/","link":"","permalink":"http://yoursite.com/2016/11/16/page41/","excerpt":"","text":"Introduction一个天气数据的处理系统，需要用到array，在线的API接口，数据异常处理等等，根据获取的天气数据做相关处理（增删改查统计等等），最后还有sample run的示例辅助测试。RequirementCS 8: Introduction to Computer Programming with PythonSpring 2016Project 2Assigned: Wednesday, February 24 Due: Tuesday, March 29 11:59 PMOverviewBlackjack, or 21, is the most widely-played casino banking game in the world. The goal isto build a hand of cards that values as close to 21 as possible without exceeding it. First,here is the terminology used in the game. Hit: Take another card for your hand Stand: Stop taking cards Bust: Exceed a value of 21 in your hand Push: Tie with the dealerThe cards are valued as follows.Rank ValueAce 11 or 12–10 Face valueJack, Queen, King 10Of particular note, an Ace can be considered either value 11 or 1. Given rational strategy,it will be considered 11 unless that will cause a bust, in which case it will be considered 1.In each hand, play proceeds as follows.1. The dealer takes one card, which the player can see.2. The player is given two cards.3. The player has the option to hit, or take one additional card. The player can hit asmany times as desired, until they reach or exceed 21, or decide to stand (stop takingcards).14. If the player did not bust (exceed 21), the dealer takes cards until she reaches 17 orhigher (i.e., the dealer will hit on 16 or fewer points, and stand on 17 or more points).5. If the player busts, she immediately loses, and the dealer will not draw more cards.If the dealer busts, the player wins. If the player and dealer have the same total, it isa push. Otherwise, the winner is the one with higher point total.6. If the player loses, she loses her bet. If the player wins, she wins her bet. If the handis a push, the bet is returned (i.e., no gain or loss).In this project, you will program a functional Blackjack game by first coding the basic logicof the game, then gradually adding features.2Lab Session 1, Feb 24–Feb 25Activity 1In this activity, you will code the logic of the game using simplifications, rather than tacklinga full Blackjack game all at once. Instead of selecting a card and then determining its value,you will instead randomly generate a card’s value from between 2 and 11. You will alsoassume that the bet is always $25.Note that randomly generating a card’s value is not an accurate way to simulate draws. In areal deck, there are more cards worth 10 than there are, e.g., cards worth 5. Consider otherways in which this version of Blackjack will not be exactly the same as real-life Blackjack.You will add features to make the game more realistic in later activities.1. Write a main() function that asks the user for their name, and initializes their startingmoney to $1,000.2. Write a loop in main() that will play a hand of blackjack, then ask the user if they wantto play another hand (as long as they still have money to bet). You will play a handby calling the play_hand(name) function (which does not yet exist). This functionshould return the change in the player’s money (positive if they win, negative if theylose), and you should use this value to update their amount after each hand.3. Write the play_hand(name) function. In this function, you will need to track therunning total of the cards that the dealer and player have been dealt. Deal one cardto the dealer and two to the player. Prompt the player for their action (hit/stay)until they reach or exceed 21, or choose to stay. Then, deal cards to the dealer untilthey reach or exceed 17. Determine the winner, and return the change in the player’smoney (i.e., 25 if they won, -25 if they lost, and 0 if the hand was a push).Here is an example run after completing this stage:Name? BillBill has $1,000Dealer received card of value 2Bill received card of value 9Bill received card of value 5Dealer total: 2Bill total: 14Move? (hit/stay) hBill received card of value 6Dealer total: 23Bill total: 20Move? (hit/stay) sDealer received card of value 4Dealer total: 6Bill total: 20Dealer received card of value 5Dealer total: 11Bill total: 20Dealer received card of value 10Dealer total: 21Bill total: 20Dealer winsBill has $975Play again? (y/n) yDealer received card of value 4Bill received card of value 3Bill received card of value 7Dealer total: 4Bill total: 10Move? (hit/stay) sDealer received card of value 2Dealer total: 6Bill total: 10Dealer received card of value 5Dealer total: 11Bill total: 10Dealer received card of value 5Dealer total: 16Bill total: 10Dealer received card of value 6Dealer total: 22Bill total: 10Dealer bust4Bill has $1,000Play again? (y/n) yDealer received card of value 3Bill received card of value 11Bill received card of value 10Dealer total: 3Bill total: 21Dealer received card of value 7Dealer total: 10Bill total: 21Dealer received card of value 3Dealer total: 13Bill total: 21Dealer received card of value 11Dealer total: 24Bill total: 21Dealer bustBill has $1,025Play again? (y/n) nOnce you have completed these steps, show your TA your program.5Activity 2In this activity, you will improve the drawing of cards. You will use the strategy we’velearned in lecture for encoding information in a way that the computer can store it: trans-form the information into a number. In this activity, use an integer to store each card, andrepresent them as follows.Rank int encoding Point valueAce (A) 1 112 2 23 3 34 4 45 5 56 6 67 7 78 8 89 9 910 10 10Jack (J) 11 10Queen (Q) 12 10King (K) 13 10Now, you can randomly generate a card from Ace to King, rather than randomly generatinga value. You will modify your program so that you can determine how to display each card,as well as what value it has.1. Write a function value_of_card(card) that takes as a parameter an int-encodedcard as described above (i.e., an int value from 1 to 13) and returns its point value asdescribed above.2. Write a function string_of_card(card) that takes as a parameter an int-encodedcard as described above and returns the card’s string value for printing during thegame.For example, string_of_card(5) should return “5”, and string_of_card(12) (aQueen) should return “Q”.3. Modify the play_hand function to generate a random card, rather than a random cardvalue. When adding a card to the player or dealer’s total, use value_of_card(card),and when displaying a card, use string_of_card(card).Here is an example run after completing this stage:Name? Bill6Bill has $1,000Dealer received 2Bill received ABill received KDealer total: 2Bill total: 21Dealer received ADealer total: 13Bill total: 21Dealer received 9Dealer total: 22Bill total: 21Dealer bustBill has $1,025Play again? (y/n) yDealer received KBill received 6Bill received QDealer total: 10Bill total: 16Move? (hit/stay) hBill received 6Dealer total: 10Bill total: 22Bill bustBill has $1,000Play again? (y/n) nOnce you have completed these steps, show your TA your program.7Lab Session 2, Mar 2–Mar 3Activity 3In this activity, you will save the player’s game and allow them to resume. You will use fileI/O as discussed in lecture. You will save and restore the player’s name and money total.1. Write a function save(name, money) that saves the user’s name and money to thefile blackjack.save.Hint: In order to restore this information successfully, you should save these twopieces of information on separate lines of the file.2. Write a function restore() that attempts to read the user’s name and money fromthe file blackjack.save. If it is successful, it should return these values as a string andan int, respectively. If it fails, it should return ‘’, -1 to indicate it was unsuccessful.3. Modify function main() to call save(name, money) before quitting.4. Modify function main() to call restore() when starting up. If the load was successful,ask the user if they would like to resume or start a new game. If it was unsuccessful,simply start a new game.Here is an example run after completing this stage (nothing has changed yet, because thereis no saved game to load):Name? BillBill has $1,000Dealer received KBill received QBill received 3Dealer total: 10Bill total: 13Move? (hit/stay) hBill received 4Dealer total: 10Bill total: 17Move? (hit/stay) hBill received ADealer total: 10Bill total: 28Bill bust8Bill has $975Play again? (y/n) yDealer received QBill received JBill received 6Dealer total: 10Bill total: 16Move? (hit/stay) hBill received JDealer total: 10Bill total: 26Bill bustBill has $950Play again? (y/n) nHere is an example of the load functionality when running the program again:Resume saved game ‘Bill’? (y/n) yBill has $950Dealer received KBill received 7Bill received QDealer total: 10Bill total: 17Move? (hit/stay) sDealer received KDealer total: 20Bill total: 17Dealer winsBill has $925Play again? (y/n) nFinally, here is an example of starting a new game even though a saved game exists:9Resume saved game ‘Bill’? (y/n) nName? PhilPhil has $1,000Dealer received 4Phil received 3Phil received JDealer total: 4Phil total: 13Move? (hit/stay) hPhil received 10Dealer total: 4Phil total: 23Phil bustPhil has $975Play again? (y/n) nOnce you have completed these steps, show your TA your program.10Activity 4In this activity, you will allow the player to change their bet before each hand.1. Write a function input_bet(bet, money) that accepts parameter for the current betand amount of money available, and returns the bet input from the user. Performinput validation on the following requirements:The bet must be a whole number, cannot be negative, and cannot be greater than theavailable money. If the user presses enter without typing anything, use the existingbet value (if valid). The user can bet 0, which means they want to quit the game.2. Modify main() to call input_bet(bet, money) before every hand instead of prompt-ing for y/n for another hand. If the user bets 0, save their game and quit.Now, you will need to pass the current bet to the play_hand function, and modifythis function so it returns the correct change in the player’s money when they win orlose.Here is an example run after completing this stage:Name? BillBill has $1,000Bet? (0 to quit, Enter to stay at $25) 1500Cannot bet more than $1,000Bet? (0 to quit, Enter to stay at $25) FiftyBet? (0 to quit, Enter to stay at $25) 500Dealer received JBill received 10Bill received 10Dealer total: 10Bill total: 20Move? (hit/stay) hBill received QDealer total: 10Bill total: 30Bill bustBill has $500Bet? (0 to quit, Enter to stay at $500)Dealer received ABill received 5Bill received K11Dealer total: 11Bill total: 15Move? (hit/stay) hBill received ADealer total: 11Bill total: 26Bill bustBill has $0Game overOnce you have completed these steps, show your TA your program.12Lab Session 3, Mar 16–Mar 17Activity 5In this activity, you will improve the card drawing functionality even further. In real life,you cannot draw 5 Aces in a single hand. However, if we’re only generating random cards,this is possible. Therefore, for each hand, you will create a deck of cards, shuffle it, anddraw from it.1. Write a function new_deck() that returns a list containing 4 Kings, 4 Queens, etc.using the integer encoding from Activity 2.Hint: Use nested loops.2. Write a function shuffle_deck(deck) that returns a shuffled version of the deck.Hint: Use the random module.3. Modify play_hand() so that it creates and shuffles a deck at the start of each hand.Instead of randomly generating cards, “draw” them from the shuffled deck. Be surethat you do not draw the same card from the deck multiple times (e.g., by removingthe card you draw from the deck).Unless you know how to count cards, the output after this activity will not look verydifferent. However, your distribution of cards will be more realistic. You should run yourprogram to ensure that you are still getting random-looking cards, and not drawing thesame cards over and over again.Once you have completed these steps, show your TA your program.13Activity 6In this activity, you will modify your encoding of cards so that it stores both the rank (A–K)and the suit (♣, ♦, ♥, ♠).1. Modify new_deck() so that it creates a list of cards where each card is a tuple of size2. Store the int value first, then a string value representing the suit.Hint: You may be able to copy and paste the suit symbols directly into your texteditor. If not, you can use the following escape sequences to include the suit symbolsin a string literal in Python.Suit Escape sequence♣ \\u2663♦ \\u2662♥ \\u2661♠ \\u26602. Modify value_of_card to account for the change in encoding of cards.3. Modify the string_of_card to print both the rank and suit of the card.Here is an example run after completing this stage:Name? BillBill has $1,000Bet? (0 to quit, Enter to stay at $25) 100Dealer received 10♦Bill received 6♦Bill received 2♠Dealer total: 10Bill total: 8Move? (hit/stay) hBill received A♠Dealer total: 10Bill total: 19Move? (hit/stay) sDealer received A♣Dealer total: 21Bill total: 19Dealer wins14Bill has $900Bet? (0 to quit, Enter to stay at $100) 0Once you have completed these steps, show your TA your program.15Lab Session 4, Mar 23–Mar 24Activity 7In this activity, you will modify your program to improve its output. Instead of keepingtrack of only the total points of the player and dealer, you will keep track of their full handas a list of cards.1. Write function string_of_hand(hand) that uses the string_of_card(card) func-tion to return a string of an entire hand (encoded as a list of cards).2. Write function value_of_hand(hand) that uses the value_of_card(card) functionto return the value of an entire hand of cards.3. Modify the function play_hand so that it keeps track of the hands of the player anddealer, rather than just the total points for their hand. Then modify your output sothat it prints the hands instead of individual cards.4. Modify your function value_of_hand(hand) so that it correctly adds the value ofAce.Recall the rule: if an Ace of value 11 would make the hand bust, it is considered tobe value 1 instead. Thus, an Ace alone is worth 11, an Ace and a King is worth 21,and two Aces is worth 12.Hint: It may help to create a list of values for each card. For example, if the userhas two Aces, first create the list of values [11, 11], then modify it according to therule.Here is an example run after completing this stage:Name? BillBill has $1,000Bet? (0 to quit, Enter to stay at $25) 100Bet: $100Dealer’s hand: 10♥Value: 10Bill’s hand: J♠ 2♣Value: 12Move? (hit/stay) hBet: $100Dealer’s hand: 10♥Value: 1016Bill’s hand: J♠ 2♣ 3♣Value: 15Move? (hit/stay) hBet: $100Dealer’s hand: 10♥Value: 10Bill’s hand: J♠ 2♣ 3♣ 7♠Value: 22Bill bustBill has $900Bet? (0 to quit, Enter to stay at $100)Bet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣Value: 6Move? (hit/stay) hBet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣ 3♣Value: 9Move? (hit/stay) hBet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣ 3♣ 9♣Value: 18Move? (hit/stay) hBet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣ 3♣ 9♣ A♥17Value: 19Move? (hit/stay) sBet: $100Dealer’s hand: 10♦ 4♣Value: 14Bill’s hand: 4♥ 2♣ 3♣ 9♣ A♥Value: 19Bet: $100Dealer’s hand: 10♦ 4♣ K♠Value: 24Bill’s hand: 4♥ 2♣ 3♣ 9♣ A♥Value: 19Dealer bustBill has $1000Bet? (0 to quit, Enter to stay at $100)Bet: $100Dealer’s hand: A♣Value: 11Bill’s hand: 10♣ 7♣Value: 17Move? (hit/stay) hBet: $100Dealer’s hand: A♣Value: 11Bill’s hand: 10♣ 7♣ 7♦Value: 24Bill bustBill has $900Bet? (0 to quit, Enter to stay at $100)Bet: $10018Dealer’s hand: 8♠Value: 8Bill’s hand: 6♣ K♥Value: 16Move? (hit/stay) hBet: $100Dealer’s hand: 8♠Value: 8Bill’s hand: 6♣ K♥ A♠Value: 17Move? (hit/stay) sBet: $100Dealer’s hand: 8♠ 5♠Value: 13Bill’s hand: 6♣ K♥ A♠Value: 17Bet: $100Dealer’s hand: 8♠ 5♠ 8♦Value: 21Bill’s hand: 6♣ K♥ A♠Value: 17Dealer winsBill has $800Bet? (0 to quit, Enter to stay at $100)Bet: $100Dealer’s hand: 4♦Value: 4Bill’s hand: 2♦ J♥Value: 12Move? (hit/stay) sBet: $10019Dealer’s hand: 4♦ A♥Value: 15Bill’s hand: 2♦ J♥Value: 12Bet: $100Dealer’s hand: 4♦ A♥ A♦Value: 16Bill’s hand: 2♦ J♥Value: 12Bet: $100Dealer’s hand: 4♦ A♥ A♦ 10♥Value: 16Bill’s hand: 2♦ J♥Value: 12Bet: $100Dealer’s hand: 4♦ A♥ A♦ 10♥ 8♦Value: 24Bill’s hand: 2♦ J♥Value: 12Dealer bustBill has $900Bet? (0 to quit, Enter to stay at $100) 0Once you have completed these steps, show your TA your program.20Bonus ActivityThis optional activity is less guided. Completing it will result in up to 8 bonus projectpoints. In this activity, you will output the money the user has after each hand, in orderto graph the result using a spreadsheet program.A csv file, or comma-separated values, is a set of rows where each field is separated by acomma. In this bonus activity, after each hand, output the hand number and total moneythe user has, to a row in the file blackjack.csv. The data, including the hand number,should continue to accumulate even if the user has saved and resumed their game.An example of such an output might be:1,9752,9503,9754,10005,10256,10507,1025…Once you accomplish this, play at least 20 hands, then open your blackjack.csv file ina spreadsheet program such as Excel or Google Sheets. Draw a line graph showing theamount of money you had over those hands.SubmissionSubmit your .py file as described at https://cs.pitt.edu/ ~ bill/8/#submission.In addition, please include a plain text file entitled README.txt that answers the followingquestions.1. Which features of your program are working properly, and which are not?2. What was the hardest part about this project? How did you overcome it?3. What feature do you wish you could have added to this project?If you complete the Bonus Activity, submit an image file of your graph, as well.21","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Java代写：CM0718 Program Design and Implementation","slug":"page39","date":"2016-11-14T00:22:13.000Z","updated":"2017-01-04T03:58:13.721Z","comments":true,"path":"2016/11/14/page39/","link":"","permalink":"http://yoursite.com/2016/11/14/page39/","excerpt":"","text":"Introductionjava实现一个带gui版本的贷款记录系统，需要完成贷款记录系统的一些基本的功能操作，用swing完成gui的设计，然后需要生成javadoc文档最后自己需要进行黑盒和白盒测试RequirementCM0718 Program Design and ImplementationAssignment 2, 2015-16M J BrockwayIssued Teaching week 9 in classes and on module web pagesDue 23:59 on Friday 13 May, 2016. Links will be provided on the eLP forelectronic submission of your work.Marking and feedback will be available within the following 3 weeks in classor via an appointment, or via e-mail.Weighting towards Module 70%Learning Objectives Covered The following learning objectives are eitherfully or partially covered by this assignment:1. Analyse and specify a programming problem.2. Design a high-level solution to the problem using object oriented andgeneral imperative programming language constructs.3. Write, compile, execute, test and debug an OO program, which maps thehigh-level design onto concrete programming constructs, using appropriatedocumentation standards and software tools.4. Critically evaluate the methodologies and conceptual tools used in devel-oping solutions to programming problems.The two main themes of this assignment are programming graphical user inter-faces in Java and using inheritence in Java.The work is set in week 9 of the module by which time you will have coveredthe key concepts required to complete the work. However, you may find thatsome of the material discussed after the Easter Vacation may be of use in yourimplementation of the program.1Problem SpecificationYou are going to provide a version of the loans recording system (assignment 1)with a GUI and some extra functionality.The system needs to be expanded to include items for sale as well as items forloan. The system should hold a price and a number in stock for a sale-item,and a borrower and a return-date for a loan item. Thus there will be two typesof Item in the collection.1. LoanItem: consisting of item ID and item description plus a borrower anda return date; the ID consists of the letters LN followed by a three-digitnumber;2. SaleItem: consisting of item ID and description plus a price and a numberin stock; the ID consists of the letters SL followed by a three-digit number;You are provided with two classes as a starting point for the work:• Item a class representing a single item entry in the system. This classcontains only the ID and description; you will need to extend it to includethe extra data (borrower name and loan date (a long integer) in case ofLoanItem and description and quantity in case of SaleItem).• ItemCollection a class representing the collection of item records, andcontaining functions to save the item data (in text format) to a data file,and to load item data from the file.There is also a sample data file, containing IDs and descriptions only, and aMain.class which illustrates loading from the data file into the item collection,and saving of the item collection to the data file. More on these classes below.RequirementsThe following are essential functional requirements of the program:1. The system needs to be expanded to include items for sale as well as itemsfor loan, as above.• The Item class needs to be extended to classes LoanItem (record-ing borrower and return data as per assignment 1) and SaleItem,recording price and number in stock in addition to ID, description.• The ItemCollection class needs to be extended also.The ExtendedItemCollection class will inherit the ArrayListand use this to store the two types of Item in one list, but will needextra methods to support the functions set out below.2In particular, the Items in the collection will be a mixture of LoanItemsand SaleItems; your code needs to be able to distinguish these.2. Your program should provide the following functions -(a) issue a loan-item on loan;(b) check back in a loan-item;(c) sell some quantity of a sale-item (and update of the number in stock);(d) list all entries;(e) list all loan-item entries;(f) list all loan-items currently on loan;(g) list all sale-item entries;3. The user interface must be a GUI.Figure 1: A GUI for the applicationGeneral Points1. You must make use of inheritance in developing this program. This shouldinvolve you in extending the given Item and ItemCollection classes. Al-3though you may be given the source files, your program you MUST NOTmake any changes to these files.2. All interactions must be via a GUI. Typically you can expect to make useof buttons, text areas, and text fields. Your GUI should look somethinglike that depicted in figure 1.3. The program should consist of a number of classes each with well definedfunctionality. There should be a driver class to set things going; a GUIclass to provide the user interface; classes concerned with the addressbook.4. Your program should deal with error conditions by producing an errordialogue window when the use makes a mistake (Consider the use of JOp-tionPane dialogues for the error dialogues. This will require a little inves-tigation on your part.)5. Input could be via the ‘generic’ dialogues provided by JOptionPane; oryou could try making your own custom dialogues extending JDialog class.6. All classes must be fully documented using Javadoc conventions.7. The code you produce must adhere to the published course coding stan-dards. Failure to adhere to the standards will lead to a loss of marks.8. You will be expected to test your program against a suitable set of sit-uations. In the documentation you should describe your testing strategy(see below).DesignYou must produce design documentation. This will include a class diagram forthe system, a short explanation as to the general purpose of each of the classesyou have produced and their key methods; and a justification for any designdecisions you have made.ImplementationYou must provide listings for your program. The code must adhere to the Javastyle standards as defined for the module.TestingYou are expected to test your code. During the module we looked at strategiesfor testing programs. You must apply these strategies to your work.4The testing section of your documentation indicates the approach you havetaken to verifying and validating your system. Just as you should not conveythe design of your system by presenting the code or even listing the classes,you should not merely list the tests performed. Rather, discuss how tests wereselected, why they are sufficient, why a reader should believe that no importanttests were omitted, and why the reader should believe that the system will reallyoperate as desired when in use.1. Strategy: An explanation of the overall strategy for testing: Black boxand/or white box, integration, kinds of test beds or test drivers used,sources of test data, test suites. You might want to use different techniques(or combinations of techniques) in different parts of the program. In eachcase, justify your decisions.2. Test Data: A set of tables showing the test data you used for each class,etc. The format of the test documentation should be as follows: for eachtest case in the tables,• a unique ID• a brief description of the purpose of the test• the pre-conditions for running the test• the test data• the expected resultReflectionYou must provide a final critical evaluation of your work.The reflection section is where you can generalize from specific failures or suc-cesses to rules that you or others can use in future software development. Whatsurprised you most? What do you wish you knew when you started? How couldyou have avoided problems that you encountered during development?1. Evaluation: What you regard as the successes and failures of the devel-opment: unresolved design problems, performance problems, etc. Identifywhich features of your design are the important ones. Point out designor implementation techniques that you are particularly proud of. Dis-cuss what mistakes you made in your design, and the problems that theycaused.2. Lessons: What lessons you learned from the experience: how you mightdo it differently a second time round, and how the faults of the design andimplementation may be corrected. Describe factors that caused problemssuch as missed milestones or to the known bugs and limitations.53. Known Bugs and Limitations: In what ways does your implementationfall short of the specification? Be precise. Although you will lose pointsfor bugs and missing features, you will receive partial credit for accuratelyidentifying those errors, and the source of the problem.This should be 1 to 2 pages long.DeliverablesYou are expected to submit the following items:1. Your working Java classes, source code and project files (if approriate).JUnit test classes and sources should be included. Your Java source codeshould(a) be fully commented in the JavaDoc style;(b) adhere to the defined coding standards.2. a .jar file containing your application classes.3. The HTML documentation produced by JavaDoc.4. A report containing the following sections:(a) A cover page giving your name, University ID, and module details;(b) Design documentation as outlined above;(c) All the test documentation outlned above;(d) Your reflection and critical evaluation, as outlined above(e) Brief instructions on running your program (this will not be marked);Submission is electronic. Electronic Copies of your work should be sub-mitted via the assignment mechanism on the eLP (Blackboard). Separate linkswill be provided for (1) a ZIP containing your java source, classes, etc, yourjar file and your Javadoc-generted documentation; and (2) your report, in PDFformat.Academic integrityYou must adhere to the university regulations on academic conduct. Formalinquiry proceedings will be instigated if there is any suspicion of plagiarism orany other form of misconduct in your work. Refer to the Universitys AssessmentRegulations for Northumbria Awards if you are unclear as to the meaning ofthese terms. The latest copy is available on the University website.6Classes ProvidedYour have been given the following .class files from which you will build yournew system:• Entry.class• AddressBook.classThe documentation for each class is also provided but you should not count onseeing the source code. It is intended that you use the functionality providedby these classes without modifying them in any way.To use these classes1. In BlueJ create the project for the assignment2. Copy the .class files into the folder created for this project. They mightNOT appear immediately inside BlueJ although later on you may seethem.3. Now start to add your own classes.AssessmentFeedback will be provided at the end of the semester, about 3 weeks aftersubmission, by inerview or by e-mail.The marking for the assignment is designed to reflect the general guidance givenon the University’s web site for the assessment of postgraduate work. Somemodifications to the generic criteria have been made to better reflect the natureof the assignment. The marking scheme is set out below.70-100 Distinction Excellent work providing evidence to a very high level of theknowledge, understanding and skills appropriate to level 7. All learningoutcomes met, many at high level. Marks at the high end of this rangeindicate outstanding work where all learning outcomes are met at a highlevel. Excellent in all the specific areas of the assessment criteria listedbelow for the assignment; evidence of successful independent learning asdemonstrated by the implementation of optional features in the program;use of up-to-date material from a variety of sources; critical evaluationand creative use of theory60-69 Commendation Commendable work providing evidence to a high levelof the knowledge, understanding and skills appropriate to level 7. Alllearning outcomes met, many are more than satisfied. Good in all or7most of: the specific assessment criteria listed below for the assignment;evidence of independent learning; critical evaluation and creative use oftheory55-59 Pass Satisfactory work providing evidence of the knowledge, understand-ing and skills appropriate to level 7. All learning outcomes are met. Sat-isfactory in all or most of the assessment criteria listed below.50-54 Pass Adequate work providing evidence of the knowledge, understandingand skills appropriate to level 7 but only at a bare pass level. All learningoutcomes are met (or nearly met and balanced by strengths elsewhere).Adequate in all of (or most of, with balancing strength elsewhere) of thecriteria listed below.40-49 Fail The program fails to achieve the basic pass criteria specified below.Work is not acceptable in providing evidence of the knowledge, under-standing and skills appropriate to level 7. May be adequate in some butnot all of the assessment criteria listed below.1-39 Fail Work is not acceptable and provides little evidence of the knowledge,understanding and skills appropriate to level 7. Few of the learning out-comes are met. Inadequate in terms of the various criteria given below asa basis for judging the work.0 Fail Work not submitted OR Work giving evidence of serious academicmisconduct (subject to regulations in ARNA Appendix 1) OR Work show-ing no evidence of the knowledge, understanding and skills appropriate tolevel 7. None of the learning outcomes are met1. Basic functionality: 20 marks. You must have produced code for the GUI,which must compile. The program must provide via the GUI the basicservices provided by the original AddressBook class, e.g. add an entry,find an entry, delete an entry, list all.2. Coding style and quality: 20 marks.• Judicious use of comments, including Javadoc comments;• Good layout, good naming• Good level of class and function decomposition• Simple methods; appropriate use of Java language features.3. Correctness: 20 marks• Robust and correct user interface• Errors handled cleanly.• Significant use of Java object-orientation: inheritence, polymorphism.• Good use of GUI features: there are marks for exploring beyond thebasics.8• Well structured listeners, with helper functions.• Program logic is correct.4. Testing: 20 marks• JUnit: a comprehensive set of the JUnit tests; JUnit features (setup,asserts) appropriately used.• The test cases provided to test the program are documented in thereport as asked, and justified.5. Report: 20 marks• Design documentation: class diagram and description of roles ofclasses and their methods; explanation of key design decisions.• Critical evaluation, including issues arising from exploration of ad-vanced GUI features.9","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：Assignment 2","slug":"page38","date":"2016-11-13T14:12:33.000Z","updated":"2017-01-04T03:59:21.084Z","comments":true,"path":"2016/11/13/page38/","link":"","permalink":"http://yoursite.com/2016/11/13/page38/","excerpt":"","text":"Introductionjava的网络编程，主要是一个FileSender 发送类和一个FileReceiver接收类， 考察了网络编程的基础知识，CRC32 Checksum验证，消息头的封装和解封，数据的传输等等知识RequirementPage 1 of 6Assignment 2IntroductionIn this assignment, you will transfer a file over UDP protocol on top of an unreliable channelthat may either corrupt or drop packets randomly (but always deliver packets in order).Writing Your ProgramsYou are free to write your programs on any platform/IDE that you are familiar with.GradingYour programs will be graded according to their correctness using a grading script:• [2 points] Programs are compilable on sunfire, program execution follows specifiedJava commands (see sections below).• [1 point] Programs can successfully transfer a file from sender to receiver when channel isperfectly reliable (i.e. no error at all).Page 2 of 6• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofdata packet corruption.• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofACK/NAK packet corruption.• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofdata packet loss.• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofACK/NAK packet loss.• [1 point] Programs can successfully transfer a file from sender to receiver in the presenceof both packet corruption and packet loss.To conclude a successful file transfer, received file must have identical content as thesent one (use command cmp to check it on sunfire). Your program should work forboth text and binary files, and for both small files and large files (a few MBs).Grading script doesn’t care what messages your programs print on the screen. It just checksif the received file is exactly the same as the sent one in respective test cases.• [2 points] (Who runs faster?) Time taken for your programs to transfer an enormous file(more than 10MB) in the presence of both packet corruption and packet loss will be noteddown. The fastest batch of student programs will receive 2 marks and slower programs thatare still faster than average will receive 1 mark. JYou may apply the knowledge gained from this or other courses as appropriate. However,since the objective of this assignment is to design a fast network transmission protocol,you are NOT allowed to play tricks (e.g., data compression) to gain unfair advantageover your peers. Please consult the teaching team if you are unsure if certain techniquescan be used or not.A Word of AdviceThis assignment is complex and time-consuming. You are suggested to write programsincrementally and modularly. For example, deal with data packet corruption first, then ACKpacket corruption, then data packet loss, etc. Test your programs after every single majorchange. Take note that partial credit will be awarded even if your programs don’t meet all listedrequirements.Page 3 of 6Overall ArchitectureThere are three programs in this assignment, FileSender, UnreliNET andFileReceiver. Their relationship is illustrated in Figure 1 below. The FileSender andFileReceiver programs implement a file transfer application over UDP protocol. TheUnreliNET program simulates the transmission channel that transmits packets unreliably andrandomly corrupts or loses packets. However, for simplicity, you can assume that this channelalways delivers packets in order.Figure 1: UnreliNet Simulates Unreliable NetworkThe UnreliNET program acts as a proxy between FileSender and FileReceiver.Instead of sending packets directly to FileReceiver, FileSender sends all packets toUnreliNET. UnreliNET may introduce bit errors to packets or lose packets randomly. Itthen forwards packets (if not lost) to FileReceiver. When receiving feedback packets fromFileReceiver, UnreliNET may also corrupt them or lose them with certain probabilitybefore relaying them to FileSender.The UnreliNET program is complete and given. Your task in this assignment is to develop theFileSender and FileReceiver programs so that a file can be successfully transferredfrom sender to receiver in the presence of possible packet corruption and packet loss. Thereceived file should be identical to the file sent. You may need to implement techniques learntin lecture, including sequence number, acknowledgement, timeout and retransmission, toensure that packets are correctly delivered.FileSender ClassThe FileSender program is basically a file uploader that opens a given file and sends itscontent as a sequence of packets to UnreliNet. UnreliNet would then corrupt/losepackets with certain probability before relaying them to the FileReceiver program.To run FileSender on sunfire, type command:java FileSender For example:java FileSender ../test/cny.mp3 localhost 9000 gxfc.mp3sends the file cny.mp3 from directory (relative path) ../test to UnreliNet running inthe same host at port 9000. UnreliNet will then pass the file to your FileReceiverprogram to be stored as gxfc.mp3.UnreliNET FileSender FileReceiverPage 4 of 6(Note: Windows system uses a different file separator ‘\\’, e.g., ..\\test\\cny.mp3)You may assume that during testing, your sender program will be supplied with the correctpath and filename (no more than 100 bytes long). No input validation is needed.UnreliNET ClassThe UnreliNET program simulates an unreliable channel that may corrupt or lose packetswith a certain probability. This program is given and shouldn’t be changed.To run UnreliNET on sunfire, type command:java UnreliNET For example:java UnreliNET 0.3 0.2 0.1 0.05 9000 localhost 9001listens on port 9000 and forwards all received data packets to FileReceiver running on thesame host at port 9001, with 30% chance of packet corruption and 10% chance of packet loss.The UnreliNET program also forwards ACK/NAK packets to FileSender, with 20% packetcorruption rate and 5% packet loss rate.Packet Corruption ProbabilityThe UnreliNET program randomly corrupts or loses data packets and ACK/NAK packetsaccording to the specified parameters P_DATA_CORRUPT, P_ACK_CORRUPT P_ACK_LOSS andP_ACK_LOSS. You can set these values to anything in the range [0, 0.3] during testing (setting atoo large corruption/loss rate may result in a very slow file transmission).If you have trouble getting your code to work, it might be advisable to set them to 0 first fordebugging purposes.FileReceiver ClassThe FileReceiver program receives a file from FileSender (through UnreliNET) andsaves it in the same directory as the FileReceiver program, with a filename specified byFileSender.To run FileReceiver on sunfire, type command:java FileReceiver For example:java FileReceiver 9001listens on port 9001 and dumps the bytes received into a file whose name is given by sender.Page 5 of 6Running All Three ProgramsYou should first launch FileReceiver, followed by UnreliNET in the second window.Finally, launch FileSender in a third window to start data transmission. All programs shouldreceive user input from command-line argument only. Please always test your programs inlocalhost to avoid the interference of network traffic on your programs.The UnreliNET program simulates unreliable communication network and runs infinitely.Once launched, you may reuse it in consecutive tests. To manually terminate it, press + c.The UnreliNET program prints out information that is helpful in debugging your programs.However, we will disable such outputs in speed test.The sender and receiver programs shouldn’t communicate with each other directly – all trafficshould be forwarded by the UnreliNET program. The sender program should terminateproperly (e.g., no exception, no infinite loop) once transmission finishes. However, you mayleave the receiver program running infinitely (i.e., no need for receiver to detect end oftransmission and terminate, but DO remember to close the file output stream at the end).Self-defined Header/Trailer Fields at Application LayerUDP transmission is unreliable. To detect packet corruption or packet loss, you may need toimplement reliability checking and recovery mechanisms at application layer. The followingheader/trailer fields are suggested though you may have your own design: Sequence number ChecksumNote that each packet FileSender sends should contain at most 1000 bytes of applicationdata (inclusive of self-defined header/trailer fields), or UnreliNET program will reject it.Computing ChecksumTo detect bit errors, FileSender should compute checksum for every outgoing packet andembed it in the packet. FileReceiver needs to re-compute checksum to verify the integrityof a received packet.Please refer to Assignment 0 Exercise 3 on how to compute checksum using Java CRC32 class.Timer and Timeout ValueSender may have to maintain a timer for unacknowledged packet. You are suggested to use thesetSoTimeout() method of Java Socket class.You shouldn’t set a timeout value that is larger than 200ms, or your program might be too slowin transmitting data and thus get killed by the grading script.Page 6 of 6Reading/Writing Values to Header/Trailer FieldsThe number of header/trailer fields and the sequence of their appearance in a packet is theagreement between sender and receiver (i.e. an application layer protocol designed by you).As discussed in tutorial 3, to give value to a header field of a 4-byte integer, you may considerByteBuffer class from java.nio package. An example is shown below.At sender side:int length = 1000;// allocate a 4-byte array to store converted integerbyte[] pktLen = ByteBuffer.allocate(4).putInt(length).array();// copy content of pktLen to the beginning of output buffer of pktSystem.arraycopy(pktLen, 0, buffer, 0, pktLen.length);At receiver side:// extract the first 4 bytes of a packet as the integer ‘length’ByteBuffer wrapper = ByteBuffer.wrap(pkt.getData(), 0, 4);int length = wrapper.getInt();","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Network","slug":"Network","permalink":"http://yoursite.com/tags/Network/"}]},{"title":"C代写：Chat Room","slug":"page37","date":"2016-11-12T13:22:33.000Z","updated":"2017-01-04T03:53:16.980Z","comments":true,"path":"2016/11/12/page37/","link":"","permalink":"http://yoursite.com/2016/11/12/page37/","excerpt":"","text":"Introduction用c语言写一个多人聊天室，大致要求就是做一个能够实现自由加入和退出的聊天室。 一个人发送信息其他人都能收到，消息发送成功要有个提示。每个人加入和退出也会有提示，前面的英文有举例。多人聊天的时候可以分辨出来那句话是谁发的。Requirementyou will implement a multi-user chat program. In C program please.The Bare MinimumThe minimum requirement is for a central server that can accept two connections.Either client can then type a message, which is then sent to the server. The serverrelays the message to the other client. A sample run of the program might look like thefollowing:&gt; ./chat 127.0.0.1What is your screen name? &gt;&gt; KitCKitC has joined the chat.Linda has joined the chat.&gt;&gt; Hi, Linda. Are we having our meeting later today?[Your Message Has Been Sent]Linda: No. I’m really busy writing our paper anda couple other people have conflicts.&gt;&gt; Okay. Thanks![Your Message Has Been Sent]&gt;&gt; exitKitC has left the chat.This is only an example interface, but shows the minimum requirements of sendingmessages between the clients. A confirmation that your message has been sent by theclient is also a requirement at this level.Level 2 RequirementsIn Level 2, a few more features may be added. In the example above, there werenotifications when a user entered or left the chat. Level 2 code should add this feature.At this level, the server should be able to accept multiple connections | not just two.That means that the server needs to keep track of who sent a message and distributeit to all of the other clients except the one who sent it.Buffet FeaturesIf you have time or interest, you can add any or all of the following features.Private messages between clients (Something like @replies in Twitter)Sending a message to a subset of clientsAdd some pretty formatting to the messages (like colors, line wrapping, etc.)","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写：Bonus Lab (Chat Program using Message Queues)","slug":"page35","date":"2016-11-11T14:32:43.000Z","updated":"2017-01-04T03:50:07.945Z","comments":true,"path":"2016/11/11/page35/","link":"","permalink":"http://yoursite.com/2016/11/11/page35/","excerpt":"","text":"Introductionunix的IPC通讯，涉及到消息队列，共享内存等等多进程知识，是操作系统的必须课程RequirementIn this assignment you are to develop a chat program between two users, similar to theone already available on the UNIX system called talk. When two instances of yourprogram are being run simultaneously on the system, a user typing in one instance will beable to send the message typed to the user running the other instance of the program.User interface can be a very simple one by using printf() and scanf() functions of the Cprogramming language. IPC mechanism is going to be developed using Message Queues.Important: You should design your code so that when the user is waiting to type amessage, at the same time messages are being retrieved from the queue if they arrive in it.This requires multi-threaded program.SpecificsIPC Introduction and namingUnder UNIX operating system, apart from pipes and signals as primitive type of IPC,from System V release new techniques were added: message queues, semaphores andshared memory. You can investigate the status of IPC facilities on the system by enteringipcs –b on the command prompt. IPC Message queues will exist even after the processcreating it terminates, thus it should be manually removed with the ipcrm –q command, since IPC resources on a system are limited.IPC system calls related to the Message Queues that is the mechanism of choice for theIPC are: msgget for allocating an IPC or gaining access to an existing queue. msgctl tocontrol an IPC, modify its status and/or remove it. Lastly, for sending and receivingmessages msgsnd and msgrcv are used.Once an IPC facility is created using the msgget function, an IPC identifier is returned bythe system. The user creating the IPC facility identified by the returned identifier shouldspecify the access permissions. Header defines the IPC permissions structurecalled: ipc_perm. Also, needs to be included in every program before thesys/ipc.h is included.The unique system-wide identifier identifies message queues. To create such an identifierof type key_t defined in the file, ftok() function should be used. If ftok() iscalled with the same arguments from two different processes, the same key would beproduced, thus two different processes would be able to access the same IPC facility.For example:key_t key;key = ftok(“.”, 123);First argument is the reference to an existing accessible file (in UNIX, file “.” – areference to the current directory is always available and accessible). Second argument issome integer, referred to as an id. There are also constants to be passed as an ID: forexample IPC_PRIVATE that assures that returned key is always unique.Creating Message QueueA message queue is created using the msgget system call. If successful, a non-negativeinteger is returned which is a message queue identifier that can be used in subsequentcalls that reference it. First parameter is the key returned by ftok(), and the secondparameter is the access permission that is of the same format as the chmod commandparameter. Passing 0777 would give read and write permissions to everyone on thesystem. To verify proper access permissions are made, once the queue is created, you canobserve set permissions with the ipcs –b command described at the beginning of thissection. Furthermore, use the IPC_CREAT flag ORed with the 0777 to assure that thequeue is created if it does not exist or if it already exist, an identifier to it is simplyreturned.For example:mq_handle = msgget(key, IPC_CREAT | 0777);if(mq_handle&lt;=-1) {printf(“Error creating message queue\\n”);perror(“MQ Sample”); / print the error /return(1);}Obtaining information about the message queueUsing the msgctl function and the IPC_STAT flag passed to it, information about thequeue, its owner, number of bytes on the queue, number of messages, etc…can beobtained. An include file needs also to be included in the program.For example:struct msqid_ds *info;int ret;…ret = msgctl(mq_handle, IPC_STAT, info);if(ret==-1) {printf(“Failed to obtain message queue information\\n”);perror(“MQ Sample”);exit(1); }printf(“# of messages on queue: %d\\n”, info-&gt;msg_qnum);Communicating through Message QueueA message is defined in the struct msgbuf in the include file . First field ofthe structure, mtype, is an user-defined positive integer id, agreed between the programsusing the message queue to selectively retrieve the messages from it. Suppose, 4programs (instances of the chat program) are using the same message queue, in that casethe following should be done to assure proper bi-directional communication:Instance 1 Instance 2 Instance 3 Instance 4Instance 1 – 12 13 14Instance 2 21 – 23 24Instance 3 31 32 – 34Instance 4 41 42 43 –For example:Instance 1 will use mtype=12 to send a message to the Instance 2 and also Instance 1 willretrieve messages that have mtype=21. Instance 2 will use mtype=12 to retrieve messagesfrom the queue from the Instance 1 and it will use mtype=21 to send a message to theInstance 1. Thus, we assure that there is a bi-directional communication on the samechannel (same message queue) that is shared by many instances of the same chat programand messages are not delivered to the wrong instance.msgsend()msgsend() takes four parameters and it returns 0 on success and –1 on failure setting theerrno global variable to a pre-specified number that can be examined to retrieve the error(or by using perror() function to get a meaningful message).First parameter is the identifier of the message queue. Second parameter is the pointer tothe actual message. Third parameter is the size of the message obtained by using thesizeof operator, and the last parameter is the flags. IPC_NOWAIT is one flag, whichcauses a non-blocking send (send would block if the queue was full) or a zero can bepassed if no flags are needed).msgrcv()msgrcv() takes five parameters. First one is the queue identifier. Second one is the pointerto where the received message will be placed (receiver’s end structure should have thefirst member as ulong to assure message type can be correctly written). Third one is themaximum size of the message that can be received. Fourth parameter specifies whichmessages should be received: an identifier used in mtype at the sender’s side or 0 toretrieve all messages. Fifth parameter is the flags. IPC_NOWAIT is to create a no-blocking receive and MSG_NOERROR is not to produce any error if the messagereceived is bigger than the maximum size specified. If MSG_NOERROR is not specifiedand message received is larger than the maximum specified size an error will occur.msgrcv() returns –1 on failure or number of bytes received if it is successful. On error, italso sets errno global variable able to be retrieved using perror().SubmissionYou should submit your C program on Carmen along with details on how to run it andanything else that would allow the grader to grade your work.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"unix","slug":"unix","permalink":"http://yoursite.com/tags/unix/"}]},{"title":"C代写：Bonus Lab (Chat Program using Message Queues)","slug":"page36","date":"2016-11-11T14:32:43.000Z","updated":"2017-01-04T03:51:37.928Z","comments":true,"path":"2016/11/11/page36/","link":"","permalink":"http://yoursite.com/2016/11/11/page36/","excerpt":"","text":"Introductionc语言的纸牌游戏，规定用链表实现功能，包括创建4种花色，洗牌，发牌等功能的实现。最后还提供了sample方便测试，这个题目属于阶段性题目的一部分，以后还会有相应的扩展Requirement1ECE175 Computer Programming for Engineering ApplicationsHomework Assignment 8Due Date: Tuesday April 12, 2016 11:59 PM, via D2LConventions: Name your C programs as hwxpy.cwhere x corresponds to the homework number and y correspondto the problem number.Write comments to your programs. Programs with no comments will receive PARTIALcredit. For each program that you turn in, at least the following information should beincludedAuthor:Date created:- Brief (two lines) description of the program:Submission Instructions: Submit your .c files via D2L Dropbox.Problem 1 (60 pts): Write a C program to1) Create a full deck of 52 cards that are in order. In other words, for each of the foursuits, the cards should be in order from Ace (1) through King (13).each card is consisted ofsuit [clubs (♣),spades (♠),hearts (♥), or diamonds (♦))a face (1(Ace) – 10, Jacks (J), Queens (Q), and Kings (K))To simulate the deck, and each of the players’ hands, you MUST use a dynamic list ofcards with the following typetypedef struct card_s {char suit;int face;struct card_s *listp;} card;At the HW demo time, you will be asked to print the deck that you create.2) shuffle the deck (52 cards), using the following algorithm:(a) For each card in the deck, get a random number in the range of 0 to 50 to beused as the index of the element to swap that card with, i.e.if deck[0] holds the Jack of clubs (J ♣) and the random number generated was24, and deck[24] holds the 9 of diamonds (9♦), thenafter the first swap, deck[0] would hold the 9 of diamonds (9♦) and24] would hold the Jack of clubs (J ♣). You would then proceed todeck[1], find a random index of a card to swap with, and swap those cards,etc.(b) Repeat step (a) at least 100 times.Note: You must seed the random number generator with a call to time() withsrand(). [see sec 2.22 Random numbers in your Zyante book]At the HW demo time, you will be asked to print the deck after the shuffle is done.3) deal the cards (after shuffling the deck) by giving one card to the user/player,followed by one card to the computer/dealer, followed by one card to the2user/player, etc. until each player get 8 cards. There are only 2 players(computer/dealer and one user/player).The player’s hand is represented as a dynamic list of cards. The list is populatedwith the cards drawn by the player.The dealer’s hand is represented as a dynamic list of cards. The list is populatedwith the cards drawn by the dealer.Note: the card(s) added to each of the player/dealer’s hand (drawn from the deck)must be added to that player/dealer’s linked list correctly and MUST be removedfrom the deck.At the HW demo time, you will be asked to print both computer’s hand and user’s handNote: your program can do one of the followings (pick one):♣, ♠, ♥, ♦OR display club, spade, heart, diamondSample code execution 1:Note: your program will NOTget exactly these shufflecards since rand() is used!Note: you can see that the shuffledcards are distributed to each hand inan alternate fashion and starts with aplayer/user hand.- 1st card from the shuffled one is 4 ofclub which is assigned to player’shand- 2nd card from the shuffled one is 2of spade which is assigned tocomputer’s hand- 3rd card from the shuffled one is 10of spade which is assigned to player’shand- etc.3Sample code execution 2:Note: your program will NOT getexactly these shuffle cards sincerand() is used!Note: you can see that the shuffled cards aredistributed to each hand in an alternate fashionand starts with a player/user hand.- 1st card from the shuffled one is A ♦ which isassigned to player’s hand- 2nd card from the shuffled one is 6 ♦ which isassigned to computer’s hand- 3rd card from the shuffled one is 5♣ which isassigned to player’s hand- etc.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C代写：Software Tools and Systems Programming","slug":"page34","date":"2016-11-10T15:12:56.000Z","updated":"2017-01-04T03:41:48.727Z","comments":true,"path":"2016/11/10/page34/","link":"","permalink":"http://yoursite.com/2016/11/10/page34/","excerpt":"","text":"Introductionc语言的数据结构，联系完成二叉搜索树和B树的实现和操作，给了函数声明的模板，在linux下编译，makefle也是自己写，最后通过makefile编译然后完成测试工作RequirementTHE UNIVERSITY OF WESTERN ONTARIODEPARTMENT OF COMPUTER SCIENCELONDON CANADASoftware Tools and Systems Programming(Computer Science 2211b)ASSIGNMENT 5Due date: Thursday, March 31, 2016, 11:55 PMAssignment overviewObjectives. The purpose of this assignment is to get experience with• advanced data structures,• manipulation of pointers and C constructs,• dynamic allocation and and deallocation of memory,• organizing code in multiple files,• writing Makefile to compile your code.In this assignment, you are to write a C program to implement a sparse matrix structure(2D array) indexed by a pair of strings using binary search trees.Assignment basic requirements. The code should be well documented and logicallyorganized. The comments should be proper. Your code should be tested carefully beforesubmitting it, especially for boundary cases, such as empty data-structures. Avoid segmen-tation fault and memory leak.1 PreliminariesIn this assignment, you will implement the following data structures.Binary search treeThis will be implemented with pointers and structures. The key type is a pair of strings (apair of pointers to char) which will be used later as indices of the matrix structure. Thedata type can be any type and in this assignment it is float.The type definitions for key and data in C are the following.typedef float Data_Item;typedef char Sub_Key;typedef struct {Sub_Key key1; Sub_Key key2} Key;You will need a function to generate a key from a pair of strings, a function to print a key,a function to print a data, and a function to compare two keys.1int key_comp(Key key1, Key key2);Key key_gen(Sub_Key key1, Sub_Key key2);void key_print(Key key);void data_print(Data_Item data);The type definitions for binary search trees are the following:struct Bst_Node {Key key;Data_Item data;struct Bst_Node left, right;};typedef struct Bst_Node BStree_node;typedef BStree_node** BStree;The operations for binary search trees are the following.BStree bs_tree_ini(void);Allocate memory of type BStree node, set the value to NULL, and return a pointer to theallocated memory.void bs_tree_insert(BStree bst, Key key, Data_Item data);Insert data with key into bst. If key is in bst, then do nothing.Data_Item bs_tree_search(BStree bst, Key key);If key is in bst, return a pointer to key’s associated data. If key is not in bst, returnNULL.void bs_tree_traversal(BStree bst);In order traversal of bst and print each node’s key and data.void bs_tree_free(BStree bst);Free all the dynamically allocated memory of bst.A Matrix Indexed by a pair of StringsThe matrix structure will be implemented as Matrix using BStree.The type definition in C is the following.typedef BStree Matrix;typedef Sub_Key Index;The operations are the following.Matrix matrix_construction(void);Matrix construction using bs tree ini();Data_Item matrix_get(Matrix m, Index index1, Index index2);2If at location (index1, index2) in Matrix m, the value is defined, then return a pointer tothe associated data. Otherwise, return NULL.void matrix_set(Matrix m, Index index1, Index index2, Data_Item data);Assign data to Matrix m at location (index1, index2).void matrix_listing(Matrix m);Print values in the Matrix m (with bs tree traversal()).void matrix_destruction(Matrix m);Free allocated space (with bs tree free()).2 Organizing the code into multiple filesFor this assignment you are to organize the code in the following way:• In the file datatype.h, define the type Data Item, the type Sub Key, the type Key, anddeclare prototypes of the functions for type Data Item and type Key.• In the file datatype.c, implement the functions for type Data Item and type Key.• In the file bs tree.h, define the type BStree node, the type BStree and declare proto-types of the operations on BStree.• In the file bs tree.c, implement the functions on BStree.• In the file matrix.h, define the type Index and the type Matrix and declare prototypesof the operations on Matrix.• In the file matrix.c, implement the functions on Matrix.• In the file main.c, your program will1. create a new Matrix.2. read from stdin, or redirect from a file, string pairs (a pair of strings, i.e. twostrings, per line) and then calculate occurrences of each string pair read using theMatrix created.3. print the data in the Matrix4. free all allocated memory spaces for the Matrix and terminate.A sample input is given below.bba aaaab aabbba aaaab abbbba aaa3A sample output is given below.String 1 String 2 Occurrenceaab aab 1aab abb 1bba aa 2bba aaa 13 Creating a Makefile to compile the source codeYou are asked to create a Makefile to compile your source code. When “make” is typed,an executable program called “mymatrix” is generated. Typing “make clean” cleans all thefiles generated by “gcc”.4 Testing your programYou should implement BStree first and then test it to make sure it is correct before imple-menting Matrix.Your program should have no segmentation fault, no memory leak. Your program shouldprint all the elements correctly.You should test your program by running it on Gaul. Capture the screen of your testing byusing script command.4","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写：BULK FOOD STORE PROGRAM","slug":"page33","date":"2016-11-08T19:02:46.000Z","updated":"2017-01-04T03:39:43.727Z","comments":true,"path":"2016/11/09/page33/","link":"","permalink":"http://yoursite.com/2016/11/09/page33/","excerpt":"","text":"Introduction初级的c语言入门知识，完成一个散装食品商店程序，考察点包括程序格式要求，用户界面是否美观，c语言基础知识的应用，还有异常的处理等。Requirement1BULK FOOD STORE PROGRAMInstructions:Develop a C program which has to have all the required functions and features listed below.Other than these, you are free to create/add other functions/features that you feel may beuseful for the application.You are required to develop this program BY YOURSELF!!! The program that you submit MUSTBE THE FINAL VERSION, and MUST BE YOUR OWN WORK!!You MUST NOT COPY any CODE from ANYBODY ELSE. If your program is found to bethe same as any other student with just a few variable names changed or a few lines of codechanged, both YOU and the OTHER person(s) will be assigned a MARK of ZERO as well as besubject to disciplinary action under the ACADEMIC Misconduct Policy !!!To avoid this from happening to you, you must NEVER give any type of COPY of your code toanybody else until at least 1 week after the project due date.LATE SUBMISSIONS GET A MARK OF 0 !The program and project document must be submitted onWednesday March 16, or Thursday March 17, or Friday March 18,2016 during your corresponding Lab. Sessions.You are required to submit the following:A program called PROJECT.C and the screenshot of your program output.Project Assessment:The marks will be assigned on the following basis:1. Program Format - programmer’s block, indentation, and adequate comments2. User Interface - appearance to users, ease of use, checking for out of range input3. No compile or run time errors4. Functionality and StructureThe basic functions/features for the application as required, applying topics such as #defines,if..else, loops, switch/case, etc.Project Marking SchemeMarks will be assigned as follows:Program Functionality: 2 marksProgrammer’s block and comments: 1 markProgram Clarity/Organization: 1 markEase of use, format and appearance to the user: 1 markTotal: 5 Marks2Description:1. Required Functionalities:When the program initializes, the user should be presented with the following MAIN MENU:BULK FOOD STORE PROGRAMItem Description Cost/lb # Pounds SubtotalA candy 4.55 0.00 $ 0.00B Flour 1.50 0.00 $ 0.00C Soup 2.88 0.00 $ 0.00D Walnuts 5.25 0.00 $ 0.00E Rice 1.05 0.00 $ 0.00F Noodles 0.35 0.00 $ 0.00G Sugar 0.92 0.00 $ 0.00H Cake 1.45 0.00 $ 0.00total pounds = 0.00 SUBTOTAL $ 0.00Avg. Cost/lb = 0.00 HST Amount $ 0.00TOTAL Amount $ 0.00Your choice (R to RESET, Q to quit) ==&gt;32. Required Functionalities (continued):(i) Your program should accept ONLY UPPER/lower Case characters A-H (or a-h) aswell as R and Q (or r and q).(ii) All other user input for choice should cause an AUDIBLE BEEP, and not be accepted.If the user enters a letter (Upper or Lower case) from A-H (or a-h), it should thenprompt the user for the number of POUNDS.(iii) Pounds should be a floating point value. Negative values for POUNDS should causean AUDIBLE BEEP and not be accepted.(iv) The number of POUNDS should be multiplied by the COST/LB value to generate asubtotal to 2 decimal places for that ITEM. The ITEM SUBTOTALS should beadded together to give the SUBTOTAL at the bottom.(v) The HST tax amounts should be generated for the bottom SUBTOTAL to give theTOTAL Amount.(vi) The number of POUNDS column should be added together to get the TOTALPOUNDS. You should then take the SUBTOTAL COST at the bottom and divide itby the TOTAL Pounds to get the Avg Cost/lb.(vii) Remember that you cannot divide by 0, so this will have to be taken into account beforedisplaying this value at start up and after choosing Reset.(viii) When the user chooses to Quit, the program should display a message and ask the userto:HIT ANY KEY TO CONTINUE…before ending the program.4 PROGRAM REQUIREMENTS:Variables: Any variables used in the program must be a LOCAL VARIABLE with the function.When the program first starts, all POUNDS should be set to 0.00Defines: The program must include the following defines:#define A “Candy “#define A_P 4.55#define B “Flour “#define B_P 1.5#define C “Soup “#define C_P 2.88#define D “Walnuts “#define D_P 5.25#define E “Rice “#define E_P 1.05#define F “Noodles “#define F_P 0.35#define G “Sugar “#define G_P 0.92#define H “Cake “#define H_P 1.45Changing a #define(s) should change Description and/or Cost/lb accordingly.Programmer’s Block:The programmer’s block must include the following, in your screenshot as well:FULL NAME:STUDENT ID:LAB SECTION:LAB DAY AND TIME:DESCRIPTION:Please note that this is an individual project and each student should submithis/her project individually.The printed hard copy of the project should be submitted to me in the first tenminutes of your corresponding Lab. Sessions.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：CCIT4020, HKU SPACE Community College","slug":"page32","date":"2016-11-07T20:09:46.000Z","updated":"2017-01-03T09:48:56.860Z","comments":true,"path":"2016/11/08/page32/","link":"","permalink":"http://yoursite.com/2016/11/08/page32/","excerpt":"","text":"Introduction完成一个库存管理和记录系统，从inventory.txt文件中读取相关数据， 然后包括增删改查等相关功能，属于c语言的基础入门级别的题目RequirementICP Project 15-161 / 6Introduction to Computer Programming (ICP)CCIT4020, HKU SPACE Community College, 2015-2016 Semester 2Course Project Guidelines: Inventory Management and Record System1) IntroductionNowadays, an inventory management and record system is important to manage all relatedinventories in a logistics corporation for shipping and delivery. In this project, a simple andeffective inventory management and record system is developed in order to record, search andback up the data of various items in the company. To avoid any conflict between different datatypes and any other programming bugs, Input data validation processes are necessary to beemployed and developed in the system.1.1) File Format for data storage:In this project, one data file “inventory.txt” is required to back up the data. The “inventory.txt”file contains various data for each item (Name of item, Item number, Subject, Weight, Quantity,Recipient, Final destination, and Delivery status). In this project, we assume that the maximumnumbers of item records are 50 and the maximum numbers of characters for name of item,recipient, destination and delivery status) are 30.The format and example of data stored in the data file “inventory.txt” are listed as follows:Name of item #1Item number #1Subject #1Weight #1Quantity #1Recipient #1Final Destination #1Delivery Status #1Name of item #2Item number #2Subject #2Weight #2Quantity #2Recipient #2Final Destination #2Delivery Status #2Name of item #3Item number #3Subject #3Weight #3Quantity #3Recipient #3Final Destination #3Delivery Status #3...ICP Project 15-162 / 6The example of items records stored in the data file is listed as follows:Net Wi-Fi Router1001Electronics2.0 kg1Chan Tai ManKowloon BayDeliveryFujo Apple Gift SetFood25521.2kg1Cheung Wai MingYuen LongArrivalKoppo Men JacketFashion30030.5kg2Lee Siu YuSha TinWarehouse...ICP Project 15-163 / 62) Project RequirementsIn this project, students are required to form groups in the same class (4 to max. 5 students pergroup) to develop a C program (Standalone Console-Based Application) for the inventorymanagement and record system. The C program for this system must include two parts: (1) BasicFunctions (group part), and (2) Extra Functions (individual part).The example of Basic Functions (group part) of the system is shown as follows:2.1) Requirements for Basic Function (Group Part)The following functions must be supported in the system: Main Menu: in the main() functiono Show menu page when the program is executed or selected option is completed.o After the main menu is shown, wait for user to input a number (or character) fromoptions above. Option ‘1’: Add new item record(s)o Add a new item in the system and store the information of such item in a data file“inventory.txt”.o Record “Name of item”, “Item number”, “Subject”, “Weight”, “Quantity”, “Recipient”,“Final destination” and “Delivery status”.o Ask user to add another new item (if Yes, repeat the step; if No, go back to menu page).ICP Project 15-164 / 6 Option ‘2’: Display item(s)o Load and display the items in the system from the corresponding data file“inventory.txt”.o Display all the item information (Name of item, Item number, Subject, Weight, Quantity,Recipient, Final destination, and Delivery status) line by line on screen. Option ‘3’: Modify item record(s)o Update the existing item record and store it to the corresponding data file.o Ask user to change another item record (if Yes, repeat the step; if No, go back to menupage). Option ‘4’: Delete item record(s)o Delete the existing item record and update the records in the data file.o Ask user to remove another item record (if Yes, repeat the step; if No, go back to menupage). Option ‘5’: Search item informationo Search and display the item information you searched on screen from the correspondingdata file “invenotory.txt”.o Ask user to search another item record (if Yes, repeat the step; if No, go back to menupage).2.2) Requirements for Extra Function (Individual Part)Each group member is required to develop an extra function (e.g. create a new Option ‘6’ or a newfunction, etc.) and integrate to the system for this project. These extra functions can be contributedand integrated to the system so as to perform various specific tasks or related purposes. There is noconstraint on the function features (except user login with password).Input dataAdd data for next itemICP Project 15-165 / 63) Submission3.1) Softcopiesa) Programming Codes and Files:Softcopies must be submitted to SOUL by a group representative before the deadline. (Grouprepresentative is necessary to compress all files/folders into single file for submission)o Save in a FOLDER named “icpClassNo_GroupNo_Basic” Source (.c) files: All program files with the basic function only Executable (.exe) file: Executable file “icpClassNo_GroupNo_Basic.exe” Data files: Data is stored in txt (or dat) fileo Save in a FOLDER named “icpClassNo_GroupNo_Basic&amp;Extra” Source (.c) files: All program files with the basic and extra functions Executable (.exe) file: Executable file “icpClassNo_TeamNo_BasExtra.exe”. Data files: Data should be stored in txt (or dat) file. A readme file can be attached in the folder to give details of the extra functions(Remark1: Two folders – Both 1) Basic function, and 2) Basic with Extra Functions are necessaryto submit for program comparison and verification)(Remark2: Programming codes or statements must include comments for description orexplanation)b) Project Presentation PowerPoint file: named icpClassNo_GroupNo.ppt (or .pptx),The contents of the presentation PowerPoint includes:- Job distributions,- Overview of project,- Programming techniques used in the basic functions, and- Programming techniques used in the extra functions,(Remarks: Full programming codes are not necessary to show on the PowerPoint slides.)c) Project Submission Form (scanned file)3.2) Project Presentation and DemonstrationProject Presentations will be held in Lesson 12. Each group has about 7 minutes includingpresentation, demonstration, etc.- All group members must participate in the presentation.- The presentation must be well-prepared as the tight presentation schedule.- A presentation PowerPoint is needed during the presentation.ICP Project 15-166 / 63.3) HardcopiesThe following materials must be submitted during the presentation.- Project Submission Form and Project Extra Function Forms for all members- Project Presentation PowerPoint (print with four slides per page and double-sided oneach A4 paper)(Important Remark: Double-check the contents in your submission, if they are the most updatedversions.)References:Website for DHLhttp://www.dhl.com.hk/tc.htmlWebsite for UPShttps://www.ups.com/hkWebsite for Taobao (delivery)http://world.taobao.com/~ END ~","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：assign2","slug":"page31","date":"2016-11-07T14:04:34.000Z","updated":"2017-01-03T09:46:19.372Z","comments":true,"path":"2016/11/07/page31/","link":"","permalink":"http://yoursite.com/2016/11/07/page31/","excerpt":"","text":"Introduction本题主要考试面向对象的类的设计思路，完成一个名字叫21点的纸牌游戏，分别设计了card类，deck类，hand类，player类，dealer类，game类完成各种功能，最后main集成驱动测试额外要求是如果牌面相同的话在比一次，对代码风格也有要求。RequirementGrading: EVERY assignment in this course is graded by demoing your work for10 minutes with a TA. You are required to meet with a TA within two weeks fromthe due date to demo, and you receive an automatic 50 point deduction forfailure to do so. If you miss a scheduled appointment, you will be penalized 10points for rescheduling within 1 day (24 hours), 25 points within 7 days (1 week),and 50 points for anything outside of a week. Your job is to convince the TA thatyour program works correctly, i.e. show your TA how to use/break your program☺(90 pts) Implementation: Problem StatementYou will write a program to play blackjack using C++ classes. Blackjack is a cardgame that has a dealer and 1 or more players who are trying to get a hand closest to 21without going over. Aces can be 1 or 11, whichever is to your advantage, and all facevalue cards (Jack, Queen and King) have a value of 10.The players begin with a specific amount of money, and only the players can betagainst the dealer. First, everyone decides how much he/she wants to bet. Then,everyone is dealt 2 cards face up, and the dealer gets one face up and one face down.Each player decides whether to receive another card or not without going over 21. Ifthe player goes over 21 (or busts), then he/she immediately loses their bet from theirtotal playing money. After all players finish receiving cards, then the dealer turns overthe card that is facing down, and the dealer must receive a new card if the total is below17 and stay/hold if the total is 17 or above. The players with totals over 21 immediately lose their bet from their playing total. If the dealer goes over 21, then the players with 21 and under all win their bet,which is added to their playing total. If the dealer is 21 or under, then the players with card totals less than the dealerlose their bet from their playing total, and those players with card totals greaterthan the dealer win their bet, which is added to their playing total. Players who have the same card total as the dealer neither win nor lose, theirplaying total remains unchanged. Players who have a card total of 21, blackjack, win 1.5% their bet to their playingtotal.You will be required to have the following classes and members. However, youmay add more members and functions, based on your design. You will make .cppfiles for each class, .h, interface file. Make sure you include the correct .h fileswith the .cpp files.//card.h interface fileclass card {private:int value; //1-13char suit; //4 each: club, spade, heart, diamondpublic://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//deck.h interface fileclass deck {private:card cards[52];int num_cards;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//hand.h interface fileclass hand {private:card cards;int num_cards;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//player.h interface fileclass player {private:hand p_hand;int playing_total;int card_total;int bet;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//dealer.h interface fileclass dealer {private:hand d_hand;int card_total;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//game.h interface fileclass game {private:deck cards;player players;dealer game_dealer;int num_players;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};Your program must be able to: Setup a deck of 52 cards with spades, clubs, diamonds, and hearts of 2-10, Jack,Queen, King, and Ace for each suit. Shuffle the deck of cards before playing any game. Determine how many players and the playing total for each. Make sure that a player’s bet is less than or equal to the playing total. Determine when a full deck has been dealt, and reshuffle. You should not have any memory leaks in your program.Extra Credit (10 pts):In blackjack, if a player starts with doubles (cards with the same value), then the cardscan be split into different hands. The player is given two cards, one for each hand, andthe dealer now gets two cards for a different hand. After the first hand is played, thenthe second hand is played between the dealer and the player who split.(10 pts) Program Style/CommentsIn your implementation, make sure that you include a program header in your program,in addition to proper indentation/spacing and other comments! Below is an exampleheader to include. Make sure you review the style guidelines for this class, and begintrying to follow them, i.e. don’t align everything on the left or put everything on one line!http://classes.engr.oregonstate.edu/eecs/spring2016/cs162-001/162_style_guideline.pdf/** Program: play_game.cpp Author: Your Name Date: 04/20/2016 Description: Input: Output:**/Electronically submit your C++ program (.h, .cpp, and Makefile files, not yourexecutable!!!) and your test files as a tarred archive by the assignment due date, usingTEACH.You must tar these files together using the following command:tar –cvf assign2.tar card.h, card.cpp, deck.h, deck.cpp, hand.h,hand.cpp, player.h, player.cpp, dealer.h, dealer.cpp, game.h, game.cppplay_game.cpp Makefile*NOTE: The easiest way to upload your program from ENGR to TEACH is to map anetwork drive to your home directory on ENGR. Mac or Windows, See:http://engineering.oregonstate.edu/computing/fileaccess/","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：Review Programming in C++","slug":"page30","date":"2016-11-06T15:14:24.000Z","updated":"2017-01-03T09:25:55.774Z","comments":true,"path":"2016/11/06/page30/","link":"","permalink":"http://yoursite.com/2016/11/06/page30/","excerpt":"","text":"Introduction写一个统计城市欢迎度的管理系统，涉及到指针操作，从文件读取信息。增删改查求平均值等等基本功能，还要自己创建makefile，在linux平台下运行，最后完成测试RequirementGrading: EVERY assignment in this course is graded by demoing your work for10 minutes with a TA. You are required to meet with a TA within one week afterthe due date to demo. You are penalized for failure to see a TA within the week ormissing a scheduled appointment. In either case, if you are within 1 day (24hours) of the deadline, you lose 10 points. If you are within 7 days (1 week) of thedeadline, then you lose 25 points, anything outside of a week from the deadlineto demo is an automatic 50 point deduction. Your job is to convince the TA that yourprogram works correctly, i.e. show your TA how to use/break your program☺During your time in programming, you will undoubtedly run into a situation where youwill need to go through information more than once or need to perform the same taskover and over. The way we as programmers accomplish this is through the use ofloops and functions.(90 pts) Implementation: Problem StatementYou will write a program to compare state and county information. You musthave the following structs in your program.struct county {string name; //name of countystring city; //name of cities in countyint cities; //number of cities in countyint population; //total population of countyfloat avg_income; //avg household incomefloat avg_house; //avg household price};struct state {string name; //name of statestruct county c; //name of countiesint counties; //number of counties in stateint population; //total population of state};You will receive the number of states and filename from the user as command-linearguments. The number supplied with the –s option is the number of states to becreated and the text following the –f option is the filename with the state/countyinformation: a.out –s 2 –f states1.txtThis would create a dynamic array of 2 states on the heap, and you would read the restof the information about the state and counties from a file. Each line in the file willcontain the information for each state and county in the following order:State_name state_pop #_countycounty_name county_pop county_income county_house #_cities city_nameExample:Oregon 1000000 2Benton 53000 100000 250000 1 CorvallisLane 80000 50000 150000 2 Eugene SpringfieldSouth_Carolina 1000000 2Anderson 80000 100000 80000 2 Anderson PendletonPickens 50000 50000 20000 2 Clemson PickensYour program must define the following functions, with the exact prototypes:bool is_valid_arguments(char info[]);state create_states(int);void get_state_data(state );county create_counties(int);void get_county_data(county );void delete_info(state );In addition to these functions above, you need to determine the other functions you willneed to print information answering the following information: the state with the largest population, the county with the largest population, the counties with an income above a specific amount, (You must get input fromthe user for this!!!) the average household cost for all counties in each state, the states in sorted order by name, the states in sorted order by population, the counties within states sorted by population, the counties within states sorted by name.You need to separate your files into interface and implementation and create a Makefileto handle the compilation. Create a state_facts.h, which has the struct type for statesand counties, as well as the function declarations for your program. Now, separate yourfunction definitions into a state_facts.cpp file and your main function into arun_facts.cpp file. Now, create a makefile that will create a state_facts executablegame and clean your files.Your program must be able to: Print a usage message to the user when too few arguments are supplied orwhen the options are not –s or -f. You do not need to recover from this, justhandle by printing a message. Print an error message and recover, when the user doesn’t supply positive,non-zero integer for the states value. Print an error message and recover, when the player doesn’t supply a validfilename to open. Provide the stats for the states. Continue to ask for new states and new filename. Make sure you do not havea memory leak!!!!!(10 pts) Program Style/CommentsIn your implementation, make sure that you include a program header in your program,in addition to proper indentation/spacing and other comments! Below is an exampleheader to include. Make sure you review the style guidelines for this class, and begintrying to follow them, i.e. don’t align everything on the left or put everything on one line!http://classes.engr.oregonstate.edu/eecs/spring2016/cs162-001/162_style_guideline.pdf/** Program: run_stats.cpp Author: Your Name Date: 04/08/2016 Description: Input: Output:**/Electronically submit your C++ program (.h, .cpp, and Makefile files, not yourexecutable!!!) and your test files as a tarred archive by the assignment due date, usingTEACH.You must tar these files together using the following command:tar –cvf assign1.tar facts.h facts.cpp run_facts.cpp Makefile test.txt**NOTE: The easiest way to upload your program from ENGR to TEACH is to map anetwork drive to your home directory on ENGR. Mac or Windows, See:http://engineering.oregonstate.edu/computing/fileaccess/","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：Assignment","slug":"page29","date":"2016-11-06T00:26:44.000Z","updated":"2017-01-03T09:24:18.899Z","comments":true,"path":"2016/11/06/page29/","link":"","permalink":"http://yoursite.com/2016/11/06/page29/","excerpt":"","text":"Introductionc++实现一个动态数组，不能使用stl的vector， 动态数组需要实现自己的内存扩展，constructor和destructor， 然后还有题目要求的tail，head， sort等等函数。最后在main里面完成自己实现的函数的单元测试RequirementP a g e | 1CMPSC 122 – Intermediate ProgrammingAssignment #4Spring 2016Due Date: Monday, March 28, 2016Total Points: 100Implement a generic (template) class called MyArray. A generic class is a general version of a class; itis a homogenous data structure that handles multiple data types. MyArray will be similar to C++arrays but will not be constrained to a fixed size. The array size will grow dynamically when the userinserts an element to a full array. The class should not use vectors. Instead, you should usedynamic memory allocation (a dynamic array).The class should use three member variables:- myarray: the dynamic array- size: the current size of the array- used: the number of elements currently used in the arrayThe class should have the following functionalities:? A default constructor that initializes the size of the array to 5.? A default destructor that frees the dynamic memory that was allocated.? int length( ) a method that returns an integer value indicating the number of elementscurrently used in the array.? void insertHead(Item i) a method that inserts a new item making it the first element in thearray. If the array is full, then a new dynamic array of double the size should replace theexisting array.? void insertTail(Item i) a method that inserts a new item making it the last element in thearray. If the array is full, then a new dynamic array of double the size should replace theexisting array.? void deleteHead( ) deletes the first element in the array.? void deleteTail( ) deletes the last element in the array.? void sortAscending( ) sorts the elements of the array in ascending order. Use bubbleSort todo that.? void sortDescending( ) sorts the elements of the array in descending order. UseinsertionSort to do that.? C++ allows the overloading of the [ ] operator. This feature makes it possible to accessan element in a MyArray object in an array-like behavior. Overload this operator andmake sure to have boundary checks using assertions. If the user tries to access anelement outside the range of the array or at a location that is not used yet then an errormessage should be displayed on the screen.For example, the following code:P a g e | 2MyArray a1;cout &lt;&lt; “Number of elements in a1= “ &lt;&lt; a1.length() &lt;&lt; endl;a1.insertTail(35);a1.insertTail(45);a1.insertHead(55);a1.deleteTail();for(int i =0; i &lt; a1.length(); i++)cout &lt;&lt; a1[i] &lt;&lt; endl;Will result in:Number of elements in a1= 05535If we try any of the two instructions the result should be an assertion error:cout &lt;&lt; a1[4]; //Subscript uninitialized.cout &lt;&lt; a1[14]; //Subscript out of range.Write a main( ) method that provides a menu driven interface that allows the user to test whethereach member function of myArray is working properly. The menu should provide the followingfunctionalities:o Create a new array: allows the user to create an array of one of the following types: bool, char,double, float, int, stringo Get Length: the current number of elements used in the arrayo Insert a new element at the head of the arrayo Insert a new element at the tail of the arrayo Delete the first elemento Delete the last elemento Sort the elements in ascending ordero Sort the elements in descending ordero Print all the elements in the arrayo Quit the programWhat to hand inPlease submit your C++ source file electronically through Angel.","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：ECE 275 ­ Project 3","slug":"page28","date":"2016-11-04T21:24:54.000Z","updated":"2017-01-03T09:22:46.548Z","comments":true,"path":"2016/11/05/page28/","link":"","permalink":"http://yoursite.com/2016/11/05/page28/","excerpt":"","text":"Introductionc++模拟一个汽车运动模型，文件输入运行轨迹，车辆情况等等。根据一些数学和物理的公式，计算最后的汽车运动情况，同时考虑到c++的类的设计，要求类设计完好。control类，driver类，read类，write类等等功能分离使得思路更加清晰代码明了RequirementUsageUsage: catcar controlInputs stateOutputsRequirements SummaryCreate a C++ program that reads control inputs for a self­driving car from an input file. The program will simulate the car’sstate over the time horizon given by the control inputs, and write the results to an output file. The major problem is: the inputfile was written in such a way that the control inputs are stored out of order!Assignment NameThe assignment name for this assignment is: ​catcar1. Kinematic Model SimulationIn this project, you will create a program that controls an autonomous vehicle from an input control file. The only problem isthat the input controls are jumbled, since a function that operated on the linked list that stored them was badly designed: theywere stored in order in a queue, but the queue was designed by a Visual Basic programmer who doesn’t understand memory.They printed the nodes out by order of memory address of the list nodes, instead of by the node order prescribed by the nextpointers.So you need to put them back in the right order before proceeding. This program will read in time value at which thiscommand should be executed, then the commanded speed, and tire angle. The duration of the command is the differencebetween this command’s time value, and the next time value (when the nodes are in order), at a maximum of 201 ms. If thereare any durations longer than 201 ms, the input file should be declared invalid, and no simulation should take place.With this sequence of commands, you should save the vehicle’s state at each time step. During the execution of controlcommands, this program will record the vehicle’s state as it moves (or stands still), and save the output states to a file.2. File Format2.1 controlInputsFor this assignment, the input text file will consist of control information, each line contains sample time (in seconds),commanded vehicle velocity (m/s), and tire angle rate (radians/s), with elements separated by whitespace (even the firstnumber could be padded by a whitespace in the front). All values should be stored as doubles.0.06 5 0.5230.02 20 ­0.5230.07 8 00.00 0 0In this example, at time 0.06 the vehicle should take in as its input command a velocity of 5, with a tire­angle rate of 0.523,for 0.01 seconds. The duration of 0.01 is determined by looking at the next time step (after the vector is confirmed to besorted), and taking the difference (0.07 ­ 0.06).Clearly the above example is an extreme case of driving aggressively. Your program should run regardless of the unlikelycontrol inputs, as long as the below conditions are met:­ The rst element of the sorted list must be at exactly time 0.­ Commanded tire angle rate must be between [?­0.5236, 0.5236] radians/sec (i.e., / 6 radians/sec). ±π­ Commanded velocity must be between [0, 30] m/s;­ Time values must be non­negative; and­ Duration between sorted input objects must be between [5, 201] ms.If any of these are violated for any input value in the file, then the ​controlInputs file is deemed invalid, and an emptyoutput file is written. If at any time a line fails to parse, then the file should be declared invalid. This policy is for safety: youwouldn’t want to start controlling an autonomous car if you accidentally passed in the wrong file, and it started somehowparsing lines!2.2 outputFileThis assignment should output a file with information on the state values of the vehicle throughout its journey. The format forthis file is one called csv (comma separated values), and is common for inputting data into MATLAB. Each output entry is asfollows:t,x1,x2,x3,x4\\nWhere t is the time at which this state value was measured, and the values in x are given by the kinematic equation (1). Theprecision for each value should be whatever is the default when using C++ iostream methods.If the control inputs are determined to be invalid, you should create an empty file with the name provided from the commandline.3. Vehicle ModelYou are developing a vehicle simulator, which describes the kinematic motion of a front­steered, two­wheel drive vehicle.The vehicle you are simulating is visually depicted below. The equations of motion for this vehicle are provided in (1).x​1 ​ = ​u​1 ​ cos(​x​3​ ) cos(​x​4​ )(1)x​2 ​ = ​u​1 ​ cos(​x​3​ ) sin(​x​4​ )x​3 ​ = ​u​2x​4 ​ = ​u​1 ​ (1/L) sin(​x​3​ )Where ​x​1 is translational forward motion, ​x​2 is translational left/right motion, x​3 is the tire angle, and ​x​4 is the heading of thevehicle. For control inputs, ​u​1 represents vehicle velocity, and ​u​2 represents angular rate of change for the tire angle. Thewheelbase L is defined in the Vehicle.h header file.Using a simple discretization of these differential equations with a duration ​t​, we can use the following equations for motion:x​1​ (​t​+∆​ t​ )​ ​ = ​x​1​ (​t​) + ∆​ t​ ​u​1​ (​t​)​ ​ cos(​x​3​ (​t​)) cos(​x​4​ (​t​)) (2)x​2 ​ (​t​+∆​ t​ ) = ​x​2 ​ (​t​) +​​∆​ t​ ​u​1​ (​t​)​ ​ cos(​x​3​ (​t​)) sin(​x​4​ (​t​))x​3 ​ (​t​+∆​ t​ )​ ​ = ​x​3 ​ (​t​) + ​​∆​ t ​ u​2​ (​t​)x​4 ​ (​t​+∆​ t​ ) = ​x​4 ​ (​t​) + ​​∆​ t ​ u​1 ​ (​t​) (1/L) sin(​x​3​ (​t​))The value for ​x​3 (tire angle) must always be between [?­0.5236, 0.5236] radians/sec (i.e.,/ 6 radians/sec). If a value is ±πcommanded outside this range, then ​x​3 should saturate using the above range. Ex: If the tire angle rate is commanded to bethe value 0.7156, the tire angle rate should equal the maximum value of 0.5236.The heading should always be between [0, 2 ). If the heading is a negative value, the heading should be converted into the πrange [0, 2 ) by repeatedly adding 2 . Ex: If the heading is ­.5 , the heading can be converted to ­0.5 +2 = 1.5 . π π π π π πDefined values are present for these ranges inside of ​State.h4. Class designsThe following class definitions must be used for the indicated classes. You may (if you wish) create your own classes to doother tasks. The below classes are prescribed in whole (or in part):Input​, ​State​, ​Vehicle​ (must use exact prescribed class definitions)DataSource​, ​DataSink​, ​Director​ (are at your discretion, except for the sort method prescribed).4.1 Classes that must use prescribed definitionsPlease use the exact interfaces for Vehicle, State, and Input, or your alpha release may not compile. These are the only classesfor which the design is fixed.4.1.1 InputThe ​Input class holds the values for the u variables used in the kinematic model. Its interface is included on Piazza as aresource for this Project.4.1.2 StateThe ​State class is similar to Input, and its interface is included on Piazza as a resource for this Project. However, it doesensure that tire angle values and heading values stay within the designated ranges if the setters for the class are called.4.2 VehicleThe ​Vehicle class executes a control input for the designated duration. The interface is included on Piazza as a resource forthis Project.The ​Vehicle keeps its own state, receives a control input, and updates its state. The initial state value for the ​Vehicle isx​1 = 0, x​2​=0, ​x​3 = 0, and ​x​4 = 0, e.g., (0, 0) position, tire angle of 0, and heading of 0. The ​Vehicle class assumes that anyinvalid input values have been removed, so it does not do any error checking. The class does not permit anyone to update itsstate, except by providing an ​Input​ object through the ​stateUpdate​ method prescribed in the header file.4.3 Classes left largely to your design discretionAnything you want to add to the interface for ​DataSource​, ​DataSink​, or ​Director​ is up to you.The ​DataSource class keeps a vector of ​Input objects (control inputs), in order. Likewise, the ​DataSink class keeps avector of ​State​ objects (state outputs), in order.The ​Director​ is used to pass ​Input​ values along to the ​Vehicle​.Hint​: The ​bool data type is defined in C++, so it won’t work if you try to include the headers from previous projects. Use,instead, the builtin type from C++ for bool functionality.5. Recommended Functional DecompositionIn C++, global functions are a sign of a bad design. Rather, you provide methods inside the scope of a class. If you use globalfunctions for this assignment, you will receive significant design deductions. Just like in C programs, your main functionshould be small. If yours includes lots of logic, rather than depending on the methods of classes, you will receive significantdesign deductions.5.1 Reading Control InputsDefine a class method (not a global function) that reads all the control inputs from a provided filename. As you read them in,don’t worry about how they’re sorted. The inputs will be stored in a vector in the class. I think you can figure out which classthis should be.5.2 Sorting Control InputsPuts the control inputs in order of their timestamp. The interface for the sort function should be:void​ sort (); ​// performs qsortIf your algorithm does not perform quicksort, you will receive a deduction. Insertion and bubble sort are each unacceptable.You should write your own sort routine, not use the sort routines in STL or any other library. You are, of course, welcome touse other implementations to confirm that your qsort implementation is working, as part of your own tests. The inputs will bealready be stored in a vector in the class. I think you can figure out which class this should be.5.2.1 Validating Control InputsThis method should be part of the ​DataSource​ class. The interface for this method should be:// should be called only after the vector is sorted// returns true if the vector in Input objects is validbool ​validate ();The vector of ​Input​ objects is invalid if any of the criteria from Section 2.1 are discovered.5.3 Writing State OutputsDefine a class method (not a global function) that writes a vector of ​Output objects to a file of the provided filename. Ithink you can figure out which class this should be.5.4 Driving the CarOnce you have an (ordered) set of control inputs, you need a ​Director to coordinate the consumption of inputs, and saveeach output. The ​Director will take the next Input (stored and sorted by the ​DataSource​) to the vehicle, fetch thatOutput​, and store it in the output vector in the ​DataSink​. When the last ​Input is consumed, a duration of 200 ms shouldbe used. After simulating this ​Input​, the simulation is ended. In order to do this, the ​Director will “contain” a ​Vehicleobject, and decide how to interact with it.Part of the assignment is coming up with and writing the pseudocode for this algorithm, in order to stage your design.5.5 What goes in main, then?In your main function, you should instantiate your classes, check your arguments and return the usage statement. Put all thelogic and error handling for file I/O, initialization of the ​Vehicle​, etc., in your methods as defined in your other files and inthe order that makes sense. You want your main to be very simple, so that if you want to reuse your code, you can do sowithout a main function.Generally, part of assignments going forward include coming up with and writing the pseudocode for this algorithm, in orderthat your design can be performed in stages. To bootstrap this process, we provide as an example how to sketch an algorithmis pseudocode below:check usageopen input file, and output fileexecute director while inputs execute input(s) save output(s)write and close output file, input file6. Alpha SubmissionYour alpha assignment is to implement the Vehicle class methods, and turn in your ​Vehicle.cpp file to the dropbox calledProject 3 (alpha) on D2L. We will use your file with our own main function and test files, to check the behavior of each ofthe ​Vehicle methods we prescribe. Use the same ​vehicle.h ​file given above and provided from the website, or be indanger of your alpha not compiling.As a note, you will have to complete your implementation of ​Input and ​State in order to test your alpha on your own.Submit only your ​Vehicle.cpp ­­ ​do not submit implementations for Input and Output​, we will use our own. We havealready included ​Input.h and ​State.h in our ​vehicle.h interface definition, but you may need to include otherheaders for standard C++ functionality in your cpp file. We do not recommend including headers for other custom classes inyour cpp file, since you will not be submitting those headers or their implementation.","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：FinalProject-SuperString.v3","slug":"page27","date":"2016-11-04T10:34:24.000Z","updated":"2017-01-03T09:19:06.729Z","comments":true,"path":"2016/11/04/page27/","link":"","permalink":"http://yoursite.com/2016/11/04/page27/","excerpt":"","text":"Introduction自己实现一个类似stl的string库的superstring，对string功能进行扩展，包括自己实现 ==, !=, &gt;, &lt;, &gt;=, &lt;=.等操作符的重载，构造函数，find函数，trim函数，insert，replace，还有类型转换等等函数的实现，难度不大，但是工作量很大。RequirementSET-252 C Programming #2Homework: SuperString – Final Project ( 30% of your final grade )Warning: You fail the course if you fail the final project.Warning: Your final grade for the course cannot be higher than your final project grade.Warning: You cannot consult with any student that has already completed this project.Warning: You cannot view, use or reference any code for this project written by students that have taken this course in the past.Step 1Implement the following class header file (i.e. write the cpp file).You may add any other properties and/or methods that you need. You might want to check with me before adding them just to make sure you’re on the right track.Write a main function that will test all the different methods. Make sure your main function is easy to read and understand. I recommend you use regions and procedures to break up the logic. You can easily comment out a call to previously made procedures so you can test only the current procedure that you are working on.You may use any string functions you want (e.g. strlen, strstr, etc).You may not use the built-in String class.In addition to the methods listed below, overload the following operators with all reasonable parameters (i.e. char, const char , CSuperString &amp;): ==, !=, &gt;, &lt;, &gt;=, &lt;=.NONE of the class methods other than the constructors or the assignment operators ( = and += ) should change m_pstrSuperString.You must assign the value back to the class instance to make it permanent. For example:ssBuffer = ssBuffer.ToUpperCase( );Minus one letter grade for any memory leak. Minus two letter grades if there are a lot of memory leaks.Minus one letter grade if replace with substrings doesn’t work correctly.Minus one letter grade if self assignment doesn’t work correctly (e.g. ssBuffer = ssBuffer.ToUpperCase( ); ).Minus one letter grade if you don’t solve the double call problem. The following should display correctly:printf( “Left( 2 ): %s, Left( 4 ): %s\\n”, ssBuffer.Left( 2 ), ssBuffer.Left( 4 ) );Splitting the code up into two lines is not the solution.Add the following procedure to your tests and make sure it executes without errors.void MuahahahTest1( ){CSuperString ssTest;cout &lt;&lt; “Muahahah Test #1: “ &lt;&lt; ssTest &lt;&lt; endl; }Add the following procedure to your tests and make sure it executes without errors.void MuahahahTest2( ){CSuperString ssTest = “I Love Star Wars and I Love Star Trek”;ssTest = ssTest.Replace( “Love”,”Really Love Love” );cout &lt;&lt; “Muahahah Test #2: “ &lt;&lt; ssTest &lt;&lt; endl; }I recommend you start with just the following methods, get those working and code, test and run additional methods one at a time: constructor, initialize, assignment operator, deep copy, to string and print.Next, I’d recommend you get all the other constructors done.After that, I’d recommend you get all the “to ” methods done.// ——————————————————————————–// Class: CSuperString// ——————————————————————————–class CSuperString{ private: char m_pstrSuperString; public: // Constructors CSuperString( ); // Parameterized/Copy constructors // CSuperString ssBuffer( “I Love Star Trek” ); // CSuperString ssBuffer( 3.14159f ); CSuperString( const char pstrStringToCopy ); CSuperString( const bool blnBooleanToCopy ); CSuperString( const char chrLetterToCopy ); CSuperString( const short shtShortToCopy ); CSuperString( const int intIntegerToCopy ); CSuperString( const long lngLongToCopy ); CSuperString( const float sngFloatToCopy ); CSuperString( const double dblDoubleToCopy ); CSuperString( const CSuperString &amp;ssStringToCopy ); // Destructor virtual ~CSuperString( ); long Length( ) const; // Assignment Operators void operator = ( const char pstrStringToCopy ); void operator = ( const char chrLetterToCopy ); void operator = ( const CSuperString &amp;ssStringToCopy ); // Extra credit for numeric parameters // Concatenate operator void operator += ( const char pstrStringToAppend ); void operator += ( const char chrCharacterToAppend ); void operator += ( const CSuperString &amp;ssStringToAppend ); // Extra credit for numeric parameters friend CSuperString operator + ( const CSuperString &amp;ssLeft, const CSuperString &amp;ssRight ); friend CSuperString operator + ( const char pstrLeftSide, const CSuperString &amp;ssRightString ); friend CSuperString operator + ( const CSuperString &amp;ssLeftString, const char pstrRightSide ); long FindFirstIndexOf ( const char chrLetterToFind ); long FindFirstIndexOf ( const char chrLetterToFind, long lngStartIndex ); long FindLastIndexOf ( const char chrLetterToFind ); long FindFirstIndexOf ( const char pstrSubStringToFind ); long FindFirstIndexOf ( const char pstrSubStringToFind, long lngStartIndex ); long FindLastIndexOf ( const char pstrSubStringToFind ); // Do not change original string. For example: // cout &lt;&lt; ssBuffer.ToString( ) &lt;&lt; endl; // I Love Star Trek // cout &lt;&lt; ssBuffer.ToUpperCase( ) &lt;&lt; endl; // I LOVE STAR TREK // cout &lt;&lt; ssBuffer.ToString( ) &lt;&lt; endl; // I Love Star Trek const char ToUpperCase( ); const char ToLowerCase( ); const char TrimLeft( ); const char TrimRight( ); const char Trim( ); const char Reverse( ); const char Left ( long lngCharactersToCopy ); const char Right ( long lngCharactersToCopy ); const char Substring ( long lngStart, long lngSubStringLength ); const char Replace ( char chrLetterToFind, char chrReplace ); // Hard const char Replace ( const char pstrFind, const char pstrReplace ); const char Insert ( const char chrLetterToInsert, long lngIndex ); const char Insert ( const char pstrSubString, long lngIndex ); // Subscript operator char&amp; operator [ ] ( long lngIndex ); const char&amp; operator [ ] ( long lngIndex ) const; const char* ToString ( ); bool ToBoolean ( ); short ToShort ( ); int ToInteger ( ); long ToLong ( ); float ToFloat ( ); double ToDouble ( ); // cin &gt;&gt; ssBuffer; // cout &lt;&lt; ssBuffer; friend ostream&amp; operator &lt;&lt; ( ostream &amp;osOut, const CSuperString &amp;ssOutput ); friend istream&amp; operator &gt;&gt; ( istream &amp;isIn, CSuperString &amp;ssInput ); // Don’t forget the comparison operators!!!};","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：COMP1040_HW2","slug":"page26","date":"2016-11-03T04:24:58.000Z","updated":"2017-01-03T09:15:46.141Z","comments":true,"path":"2016/11/03/page26/","link":"","permalink":"http://yoursite.com/2016/11/03/page26/","excerpt":"","text":"Introduction一个c++的小练习题，练习class的使用。实现一个Point类和circle类，包括构造函数还要一些基本函数的方法，计算圆的面积，最后在main函数创建对象完成测试。RequirementDefine a class called Point.The Point class should contain a constructor which takes float x and float y as parameters.Save these arguments as class variables.Give the class appropriate getters and setters.Define a class called Circle.The Circle class should contain a constructor which takes Point center and float radius asparameters.Save these arguments as class variables.Give the class appropriate getters and setters.The class should have a toString method which should return the contents of the class as a String inthe form: Circle at x:50, y:25, radius:20.The Circle class should have an additional method called calculateArea() which returns the area ofthe circle.Create a Circle object and test it a number of times by changing the radius of the object andcalculating the area.For example:Circle at x:50.0, y:25.0, radius:20.0Area: 1256.6371Circle at x:50.0, y:25.0, radius:70.0Area: 15393.805","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：CS2401 STL Container","slug":"page25","date":"2016-11-02T07:25:28.000Z","updated":"2016-11-03T08:20:05.177Z","comments":true,"path":"2016/11/02/page25/","link":"","permalink":"http://yoursite.com/2016/11/02/page25/","excerpt":"","text":"IntroductionSTL容器的Lab作业，基础用法，并不难，只不过要过测试集，细节方面还是要注意的。RequirementThe purpose of this lab is to gain some familiarity with an STL Container, and the use of an external iterator. For this lab you will NOT be creating any classes of your own. In fact you can do the whole lab in the main, although I think that you will see that it is highly advisable to have at least one non-member function since there is a task that is repeated.Begin by copying the file names.txt to your working directory. This file has a long list of first names, all taken from some of my classes. Briefly open it and look at it, or just skim through it with more names.txtAt the top of your program #includeas well as iostream, string, and fstream. Declare a multiset that is capable of holding strings.Fill the multiset with all the names in the file. (Since there are no spaces in the names you can use &gt;&gt; or getline.)Now declare an iterator that is appropriate for traversing the multiset. Set it to the beginning of the multiset full of names, and walk through the list, outputting each name it finds. (There are a lot of them, so you may want to separate them with spaces instead of putting one on each line.)Run and test this program. Your name should be somewhere in the list. (Note that the names are now in alphabetical order.)Here is the place where you want to pass your STL container to a non-member function, since we are doing something that is basically the same three times in a row. If you do you should pass the container by const and reference, since it is large. You will probably want one additional parameter.Declare two iterators.Move one of them through the list to the first name that begins with ‘M’. Since you know it is returning a string, you will know that (it).at(0) will return the first character in that string.Now set the second iterator equal to the first. Use it to count how many M names there are in the list. Print this number out.Using the second iterator, print out all the M names in reverse alphabetical order. (Remember that these are bidirectional iterators, so you –it works to go backwards.)Now do the above three steps for all the ‘C’ names and then for all the ‘Q’ names.If I had asked for ‘Y’ (I didn’t) the output would look like:There are 3 Y names in the listThey are:Yujia Yuanhang YingjieThis program has no user interaction. When you have it working, simply start a script file, run the program once, and close the script file.Submit your source code and the script file to Blackboard.","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写：CMSC132 Six Degrees of Kevin Bacon","slug":"page24","date":"2016-11-01T05:12:24.000Z","updated":"2016-11-03T08:18:34.588Z","comments":true,"path":"2016/11/01/page24/","link":"","permalink":"http://yoursite.com/2016/11/01/page24/","excerpt":"","text":"Introduction这次需要代写的Java编程作业，考察Graph的知识点，读文件构造Graph，然后按条件用BFS搜索，并最终输出结果。Requirementn this project, you write a program that will help you play the “Six Degrees of Kevin Bacon” game. This game is played on a graph of movies and actors/actresses who starred in them. The Bacon Number is defined as follows: Kevin Bacon has a Bacon Number of 0; people who co-starred in a movie with Kevin Bacon have a Bacon Number of 1; people who co-starred in a movie with someone who has a Bacon Number of 1 in turn have a Bacon Number of 2; and so on. Given any actor/actress, the goal of the game is to establish their Bacon Number by a sequence of movies and co-stars. As shown in Figure 1, Bill Murray has a Kevin Bacon number of 1, because co-starred in “Wild Things”, while Cameron Diaz has a Kevin Bacon Number of 2, because she she co-starred with Bill Murray in “Charlie’s Angels”.For example, using the “action” data set given below, we can show that “Al Pacino” has a Bacon Numberof 3 as follows:Pacino, Al Heat (1995)Rosales Jr., Thomas Lost World: Jurassic Park, The (1997)Richards, Ariana Tremors (1990)Bacon, KevinKevin Bacon (0) starred in Tremors with Richards, Ariana (1) who starred in Lost World: Jurassic Park, The (1997) with Rosales Jr., Thomas (2) who starred in Heat (1995) with Pacino, Al (3). If we use the “all cast” data set given below, we can show that “Al Pacino” has a Bacon Number of 1 as follows:Pacino, Al Boffo! Tinseltown’s Bombs and Blockbusters (2006)Bacon, KevinKevin Bacon (0) starred in Boffo! Tinseltown’s Bombs and Blockbusters (2006) with Pacino, Al (1). Inter- estingly this works way in the past as well:De Rosselli, Rex Lion’s Claws, The (1918)Brinley, Charles Adventure in Sahara (1938)Lawrence, Marc (I) Big Easy, The (1987)Goodman, John (I) Death Sentence (2007)Bacon, KevinTurns out that Rex De Rosselli died in 1941 and yet he has a Bacon Number of just 4. Actually Rex really has a Bacon Number of 3 but we need to use a much bigger data set “cast.all.txt” to show this:De Rosselli, Rex Dangerous Adventure, A (1922)McCullough, Philo Chamber of Horrors (1966)Danova, Cesare Animal House (1978)Bacon, KevinWe have included two data sets suitable for the program in the archive above (the data sets are courtesy of Robert Sedgewick):action06.txt (4.4 MB, only action movies)cast.all.txt (64 MB, all movies from the 2014 IMDB)The format of these data sets is rather simple: Each line is a movie, and each movie consists of several fields separated by the “/“ character. The first field is the name of the movie itself, all the following fields are the names of actors and actresses starring in the movie. For example:Heat (1995)/Daniels, Max/Perry, Manny/Marzan, Rick/Pacino, Al, …Heat After Dark (1996)/Kitami, Toshiyuki/Sugata,…Heated Vengeance (1985)/Dye, Cameron/Walker, Robert (III), …Reading this data is not complicated, but we hand you the parsing code anyway so you can focus on the search algorithm instead.In order to find the smallest Bacon Number for an actor we proceed as follows: First we identify the vertices for both Kevin Bacon and the actor in question (you already have that code). Then we start a breadth-first search at the vertex for Kevin Bacon; as we do this we keep track of the “previous vertex” that got us to the one we’re currently investigating. Once we find the vertex for the other actor, we are done: We just have to print out the path that got us here. This implementation of BFS is the only thing you have to write for this problem!You will implement following functions in the given project:1.Degree of separation from Kevin Bacon:2.Degree of separation between any two actors/actresses:3.Search actor/actress/movie:4.List cast of a movie or movies of an actor/actress:5.ExitSelect:Here is what each menu item does:Finds the Kevin Bacon number of an actor/actressFind the shortest distance between any two actors/actresses.Actors with same name has a Roman number after their names. You can enter the name and search the exact name in the database. For example, Emma Watson’s name appeared as “Watson, Emma (II)” in the movie database.If input is a movies, it lists all the case. If the input is an actor/actress, it lists all the movies he/shestarred in.terminate the program.The “Graph” class, “Bag” class are fully implemented for you. The Graph class represents an undirected graph of vertices named 0 through V - 1. It supports the following two primary operations: add an edge to the graph, iterate over all of the vertices adjacent to a vertex. It also provides methods for returning the number of vertices V and the number of edges E. Parallel edges and self-loops are permitted. This implementation uses an adjacency-lists representation, which is a vertex-indexed array of Bag objects. All operations take constant time (in the worst case) except iterating over the vertices adjacent to a given vertex, which takes time proportional to the number of such vertices.You will have add the mapping relationships between vertex symbols (name of a movie, actor, acres) and vertex number in “SymbolGraph” class. For example: in Graph 2, vertex 0 and vertex 5 can represent movies and other vertices represent actors/actresses. You also have to implement to methods to find the shortest path between two given vertices. All edges have the weight of 1. Therefore, you can also use BFS to find the shortest distance between two vertices.Before you are sure your program is running correctly, test your code with a smaller database base. Start with a file that only has 5-10 movies and actors/actresses. If you think your program is working, then try with “action06.txt”, (4.4 MB, only action movies). To try “cast.all.txt”, 64 MB, all movies from the 2014 IMDB, 300,000 movies, 900,000 actors/actresses, you have to allocate larger memory for your project. Google it for instructions to do that. If you run your program from coo and line you specify memory size in your command line. Following command allocate 2gb memory for JVM to run KevinBacon.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Python代写：CP164 Stacks","slug":"page23","date":"2016-10-30T01:32:24.000Z","updated":"2016-11-03T08:16:13.928Z","comments":true,"path":"2016/10/30/page23/","link":"","permalink":"http://yoursite.com/2016/10/30/page23/","excerpt":"","text":"Introduction这次需要代写的是一个关于Stack的Lab作业，由于是Lab作业，工作量并不大，都是基本的Stack操作。Requirementsing Versus Extending an ADTNote: In this and future labs we make a distinction between using an ADT and extending an ADT. You must be clear on this distinction:Using an ADTWhen asked to use an ADT write a program that is implementation independent, i.e. the program uses only ADT methods (such as those for a stack) and works for either the array or linked implementation of a data structure. Do not change any code in the ADT implementation files such as stack_array.py.Extending an ADTWhen asked to extend an ADT you are going to add new methods to an ADT, meaning that you are going to add code to one or both of the array or linked implementation of a data structure, such as stack_array.py.The Stack ADT (Abstract Data Type)A stack is a data structure that follows LIFO (Last In, First Out) rules. Data is added to the top of a stack and removed from the top of a stack. The Stack ADT provides methods for manipulating data in a stack.A reminder of some important points of ADT use are:No matter what the underlying implementation of the stack programs should access a stack only through these methods.As a corollary to the first point, the stack can be implemented in any number of ways so long as any given implementation follows the ADT function requirements. The implementation must invisible to the program using the Stack ADT.A stack may store any type of data, although all the data it stores should be of the same type.The following code imports a stack class and the Food class then initializes a stack:12345from stack_array import Stackfrom food import Foods = Stack() …The line:1from stack_array import Stackimports the Stack class from the library file stack_array.py. This library file can be replaced by any other file that implements the Stack ADT methods.The line:1from food import Foodgives access to the methods in the food.py library file as above.The line:1s = Stack()creates a stack named s. The stack is now ready to accept data.Project ReferencesAs we work through the term we will be creating a number of different data structures and adding more functionality to the Food library already written. Making sure that each new project has the latest version of a data structure or Food library is difficult to do if we are reduced to copying and pasting our pydev modules into each new project. Fortunately, Eclipse provides a much better mechanism to reference code. Setting up Project References allows you to link one Pydev project to another, and to use the code from one project in another with the import and from … import * statements already shown. Nothing needs to be changed in your source code.To make a reference from one project to another in Eclipse, right click on a project name in the Navigator pane. From the resulting pop-up menu click on Properties and then on Project References in the resulting dialog box.Click on the check box of all projects that you wish to reference from the current project. In this example the project album is already selected, and the project data_structures will be added as a reference. Once this is done all of the classes in both album and data_structures will be available through import statements.A few things to keep in mind when using project references:All referenced projects must be open when attempting to run a program.Submit all referenced projects as part of your Eclipse archive (.zip) file when submitting exercises or the markers will not be able to run your programs. You may select multiple projects to include in an Eclipse archive file.Do not use the same Pydev module names in two different referenced projects or Eclipse will not know which one an import statement is supposed to be referring to.Project references go one way only. If the project stacks references the project data_structures, then data_structures should not reference stacks. Circular references are a very bad idea.Upon occasion referenced projects may become ‘out of sync’ with the project that references them. To fix this, right-click on the project and choose Refresh to update Eclipse from the file system.Array-based StacksThe file stack_array.py is a text file containing the basic outline of the array-based Stack class. Copy this code into the Pydev module stack_array.py in your login_data_structures project (where login is your Network login). Thus, a student with the Network login barn4520 should name their projects barn4520_Food and barn4520_data_structures.) The Lab Instructor will walk you through this library and discuss its inner workings.Tasks(If you were unable to complete Lab 1 correctly, you may use these files: food.py, food_utilities.py, and foods.txt as the basis for your lab. These files will not be available until after the labs for the previous week are completed.)For the appropriate tasks you may download and use the Food class definition in food.py from Lab 1.For all of your data structures (stacks, queues, BSTs, etc.), put your code into libraries in your Pydev project login_data_structures.For the stack_array library complete the implementations of the is_empty, pop, and peek methods. These methods extend the Stack ADT.Write and test the following function:12345678910111213def array_to_stack(s, a): “”” ——————————————————- Pushes contents of a onto s. Use: array_to_stack(s, a) ——————————————————- Preconditions: s - a Stack object (Stack) a - a Python list (list) Postconditions: The contents of a are moved into s, a is empty. ——————————————————- “””Add this function to a Pydev module named utilities in your login_data_structures project so that you have easy access to it later.Write and test the following function:12345678910111213def stack_to_array(s, a): “”” ——————————————————- Pops contents of s into a. Use: stack_to_array(s, a) ——————————————————- Preconditions: s - a Stack object (Stack) a - a Python list (list) Postconditions: Contents of s are moved into a, s is empty. ——————————————————- “””Add this function to the Pydev module named utilities in your login_data_structures project.Write and test the following function:1234567891011121314151617181920def stack_test(a): “”” ——————————————————- Tests Use: stack_test(a) ——————————————————- Preconditions: a - list of data (list of ?) Postconditions: the methods of Stack are tested for both empty and non-empty stacks using the data in a: is_empty, push, pop, peek ——————————————————- “”” s = Stack() # tests for the stack methods go here # print the results of the method calls and verify by hand returnAdd this function to the Pydev module named utilities in your login_data_structures project.Use a list of integers to test your stack code.Re-use stack_test, but this time pass it a list of Food data. (Use the data in foods.txt).","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"为什么你需要编程作业代写帮助？","slug":"page22","date":"2016-10-27T18:22:24.000Z","updated":"2016-11-03T08:11:41.662Z","comments":true,"path":"2016/10/28/page22/","link":"","permalink":"http://yoursite.com/2016/10/28/page22/","excerpt":"","text":"IntroductionRequirement为什么你需要编程作业代写帮助？计算机编程一直都不是一个简单的领域，即使是对于那些痴迷于计算机编程的同学，乃至大神们，也很难掌握所有的理论和概念。但是，教授、讲师们不可能延长课时，让同学们有充分时间去领悟其中的精髓，甚至是精通计算机编程。那有什么办法可以让同学们熟练掌握计算机编程呢？7*24的图书馆学习吗？当然不是！俗话说的好，“火车跑得快，全靠车头带”，同学们需要的是一名专业的工程师，在前方带领大家。为什么你需要一名专业的工程师指导？同学们寻求作业代写帮助往往有下面几个原因：没有足够的时间编程，理论概念太多需要时间梳理，不知道如何调试，无法修复Bug等等。其实这些原因并不特别，在我们工程师的日常工作中，这些也都是司空见惯的事情：项目明天要上线，技术调研需要时间整理汇总，生产环境不让调试，程序有Bug等等。当我们工程师自己解决不了的时候，也是去询问更资深的工程师，甚至专家。在他们帮忙解决问题、敲代码调试的时候，我们工程师也是坐在旁边观摩学习的。专业工程师指导的好处有哪些？首先，可以随时方便的获得在线帮助，尽可能专业地回答你相关领域的问题，包括理论问题、作业讲解、例题辅导，代码调试等等，甚至可以发给你参考材料的网址，省去了你在图书馆埋头的时间。其次，专业的工程师都不会轻易放弃。对于专业的工程师来说，解决难题就是一种挑战，没有理由放弃任何难题。讲解的程序通常都是高品质的代码，结合了工程师多年的一线经验，会让你感受到醍醐灌顶，茅塞顿开的畅快。最后，专业的工程师能快速理解需求，为每名同学量身定制最实惠的价格！","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写：CIS304 Bank Account Application","slug":"page21","date":"2016-10-27T03:32:14.000Z","updated":"2016-11-03T08:09:33.396Z","comments":true,"path":"2016/10/27/page21/","link":"","permalink":"http://yoursite.com/2016/10/27/page21/","excerpt":"","text":"Introduction用Java Swing作为GUI，从文件中读取信息并显示，实现逻辑，整体控件不多，很基础的作业。RequirementWhat to turn inUse Export Project in NetBeans to export your project to a zip file, name it YourLastName_FirstName_project.zip. Send the file as a single attachment through Blackboard. The subject of this email is YourLastName_FirstName_project.NoteWrite your name as a comment line at the very beginning of each .java program: 1 point deducted for each file without your name at top.Besides this documentation, I also provide you a text file, accounts.txt (described below). You should download this text file into the directory of your Netbeans project for your programs. Make sure when accessing this text file programmatically, your program just uses the file name without explicitly providing a path (so called relative path). For instance,1File accountFile = new File(“accounts.txt”);For more information about the absolute path, refer to chapter 18 lecture slides. Failing to use the relative path loses 4 points.SuggestionsStart early and start from simple – this is VERY important. For example, begin from the week when the project is available. As the first step, you construct the GUI but not implement functions for button clicks.For the give function buttons, you may start to implement the Exit function first, and then the functions of Deposit and Withdraw buttons.Always keep a copy of your working code before you implement more requirements.Requirements in summary1) Develop a Java GUI application that reads account information from the provided text file (accounts.txt), shows all account numbers in a JComboBox, and displays other GUI controls as shown in Fig. 1;2) Exit button : Quit the application;3) Deposit button: Make a deposit to a selected account;4) Withdraw button: Make a withdrawal from a selected account;5) Transfer To button: Make a transfer from a selected account to a beneficiary account;Requirements in detailsGUI in generalOnce the program starts, it reads all account information from accounts.txt (each row in the file is a account record and is in the format ofaccountNumber&lt;&gt;openDate&lt;&gt;customerName&lt;&gt;balanceThe openDate is in the format of year/month/day.) It then fills a JComboBox with all account numbers and shows other GUI controls as in Fig. 1. Your program must be able to “read” the file of this format programmatically because when I test your project, the file content (not the format) will be changed.When you select an item (account number) from the JComboBox, the corresponding values for openDate, customerName, and balance will be shown in the three read-only text fields, and the Deposit, Withdraw, and Transfer To buttons become enabled, see Fig. 2.ExitClicking this button to close the frame and exit the program.Instead of using mouse to click the button, pressing Alt + x will also trigger the Exit button.Deposit(After selecting an account number from the JComboBox), clicking the Deposit button will popup a window as shown in Fig. 3 asking you to enter a deposit amount for the selected account. Hint: this dialog window is generated by JOptionPane.showInputDialog().If you enter a non-negative number, such as 100, the amount will be deposited to the account. See Fig 4 - the balanced is adjusted accordingly. The accounts.txt file should also be updated accordingly as well.If you clicking Cancel in Fig. 3, nothing will happen to this account.If an invalid deposit amount is entered in Fig. 3, such as -100 or $100, you will see an error message as shown in Fig 5.Hint: this dialog window is generated by JOptionPane. showConfirmDialog().Withdraw(After selecting an account from the JComboBox), clicking the Withdraw button will popup a window as shown in Fig. 6 asking you to enter a withdrawal amount for the selected account.If you enter a non-negative number, such as 100, and if the account balance is sufficient, the withdrawal will be made from the account successfully. See Fig. 7, the balanced is adjusted. The accounts.txt file should also be updated accordingly as well.If you clicking Cancel in Fig. 6, nothing will occur to this account.If an invalid withdrawal amount is entered in Fig. 6, such as -100 or $100, you will see an error message as shown in Fig 8.If a withdrawal amount is greater than the balance, you show an error message and stop the withdrawal.Transfer To(After selecting an account from the JComboBox), clicking the Transfer To button will popup a window as shown in Fig. 10 asking you to enter a beneficiary account number.If a valid account number (any number existing in the JComboBox) is entered, after click OK button, a window like Fig. 11 pops up asking for amount to transfer.If a valid amount is entered, and the balance is not less than this amount and sometimes the sum of this transfer amount and a transfer fee, the transfer will be succeeded as shown in Fig. 12 and 13. The transfer fee is only applied to account with the balance less than $10000 which is specified in AccountConstants interface (more about AccountConstants see end of this document).If an invalid beneficiary account number (i.e., a number which does not exist in the account number JComboBox) is entered in Fig. 10, Fig. 14 shows the error message.If the balance is not sufficient for the transfer amount, Fig. 15 shows the error message.If the balance is not sufficient to cover both transfer amount and transfer fee (when such a fee applies), Fig. 16 shows the error message.Design requirementsYou must have the following five classes (at least 5 points deduction for missing a required class).AccountConstants – contains two constants, CHECKING_BALANCE_THRESHOLD (value is 10000) and TRANSFER_FEE (value is 2.0). For this project, the business rule is as follows:When making a transfer to a beneficiary account, if the balance of the transferring account is less than CHECKING_BALANCE_THRESHOLD, TRANSFER_FEE is deducted from the balance after the transfer is made. If the balance is not sufficient to cover both CHECKING_BALANCE_THRESHOLD and TRANSFER_FEE (if the fee applies), the transfer should not be made. If the balance of transferring account is not less than CHECKING_BALANCE_THRESHOLD, TRANSFER_FEE is waived for this transfer.Account – transferTo() method is abstract. deposit() and withdraw() are not abstract. If you need, feel free to define other methods, such as getBalance(), in the Account class.CheckingAccount: extends Account and implements the transferTo method (refer to the above diagram). The returned value of transferTo method is defined as follows.return 0: transfer successful and without transfer feereturn 1: transfer successful and with the transfer fee appliedreturn -1: transfer unsuccessful because balance is less than transfer amount and transfer feereturn -2: transfer unsuccessful because balance is less than transfer amountAccountUtility – reads accounts.txt file, updates the file, and provides data for other programs.AccountApp – is the only Java program having the main method. This must be the only file with a main method. If not, you lose 5 points.Depending on your design and it’s your decision that you may have more Java programs than those specified above.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C代写：CS158 Find The Digits","slug":"page20","date":"2016-10-26T14:46:54.000Z","updated":"2016-11-03T08:07:20.930Z","comments":true,"path":"2016/10/26/page20/","link":"","permalink":"http://yoursite.com/2016/10/26/page20/","excerpt":"","text":"Introduction代写一个C语言的小作业，寻找一个数学问题的解RequirementGiven a positive integer (greater than zero) and a positive digit (1 - 9) find the smallest multiple of the positive integer that is composed only of digits less than or equal to the digit specified by the user.Example Execution #1:Enter a positive integer: 7Enter largest permissible digit: 3Smallest multiple of 7 containing digits less than or equal to 3 is: 21Example Execution #2:Enter a positive integer: 88Enter largest permissible digit: 5Smallest multiple of 88 containing digits less than or equal to 5 is: 352Example Execution #3:Enter a positive integer: 15Enter largest permissible digit: 2Smallest multiple of 15 containing digits less than or equal to 2 is: 120Example Execution #4:Enter a positive integer: 12Enter largest permissible digit: 1Smallest multiple of 12 containing digits less than or equal to 1 is: 11100Example Execution #5:Enter a positive integer: 34Enter largest permissible digit: 4Smallest multiple of 34 containing digits less than or equal to 4 is: 34Example Execution #6:Enter a positive integer: 789Enter largest permissible digit: 2Smallest multiple of 789 containing digits less than or equal to 2 is: 11202222Additional RequirementsAdd the homework assignment header file to the top of your program. A description of your program will need to be included in the assignment header. This particular header can be added to your file by entering hhw while in command mode in vi.Each example execution represents a single test of your program. The six examples provided imply that the program was run six different times.Your program is expected to accept input and produce output in the same manner demonstrated above.The user will always enter a positive integer followed by a single digit in the range from 1 to 9.Each test case will result in finding a multiple that is less than or equal to INT_MAX as found in the limits.h library.Do not add any “bonus” features not demonstrated in the example executions provided.Course standards prohibit the use of programming concepts not yet introduced in lecture. For this assignment you can consider all material in the first six chapters of the book, notes, and lectures to be acceptable for use.The use of arrays will result in no credit being awarded for your effort.For this assignment you will be required to implement the user-defined functions (from chapter 4). Failing to follow course standards as they relate to good user-defined function use will result in a zero for this assignment.A program MUST compile to be considered for partial credit. The submission script will reject the submission of any file that does not successfully compile on the guru server. The name of the source code file you attempt to submit must be hw05.c, no variation is permitted.Course Programming and Documentation Standards RemindersUse the course function header (head_fx vi shortcut hfx while in command mode) for every user-defined function in your program.List and comment all parameters to a function, one per line, in the course function header.All function declarations will appear in the global declaration section of your program.The user-defined function definitions will appear in your program after the main function.Indent all code within relevant selection and repetition constructs two additional spaces.Make use of { and } with all relevant selection and repetition constructs.Place a single space between all operators and operands. Comment all variables to the right of each declaration. Declare only one variable per line.Notice that several programs (see program 2-9 on pages 74-75) in the programming text use a single line comment to indicate the start of the local declaration and executable statement sections of the main function.At no point during the semester should these two sections ever overlap. You might consider adopting this habit of commenting the start of each section to help you avoid this mistake.Select meaningful identifiers (names) for all variables and functions in your program.Indent all code found within the main and all user-defined functions exactly two spaces.Control-forcing statements such as exit, break, continue, and the use of multiple return statements in a single function are not acceptable practices according to course standards.Do not single (or double) space the entire program, use blank lines when appropriate.Consider making symbolic/defined constants to represent those values that do not change during the execution of the program.There is no need to include example output with your submission.Remove any diagnostic print statements from your code, even if they are commented out (inactive), unless you believe your program to be logically incorrect or incomplete as a way to demonstrate to your lab instructor how much of the problem you were able to solve and attempted to implement.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Python代写：CME3036 June Jolly","slug":"page19","date":"2016-10-25T14:36:14.000Z","updated":"2016-11-03T08:06:05.421Z","comments":true,"path":"2016/10/25/page19/","link":"","permalink":"http://yoursite.com/2016/10/25/page19/","excerpt":"","text":"Introduction这次需要代写的作业比较有意思，根据提供的历史数据中，各场比赛的得分情况，来预测本次球赛的每个球队的胜率。类似世界杯赛场的大数据预测，不过作业的模型和公式要简单许多。最终冠军和初始分组有关，事实上并没有一支球队能够稳拿冠军，每次模拟的结果都不同。程序语言不限，甚至允许用Objective-C, Perl以及Ruby来写。选择用Python因为编写和调试方便。RequirementFThe National Funball League (NFL) runs a series of funball games each year. This time period is colloquially known as funball season. The goal of funball is to score the most points. Many cities have their own funball teams and compete in the NFL. Despite the name, funball is very serious and the games are extremely competitive.In June after the regular season, the NFL hosts a single-elimination tournament to determine the best funball team. Win or go home! The winner gets a year’s worth of bragging rights and claim to a rotating trophy.In an attempt to make the tournament as exciting as possible, the NFL pairs stronger teams with weaker teams in the early rounds expecting that only the best teams will be left at the end of the tournament. The process of ranking teams is called seeding. Lower seed values indicate stronger teams.For logistical reasons, the tournament is broken into 4 regions: N, S, E, and W.The tournament is so popular that several derived games have appeared. Among the most popular is a pick’em challenge where players attempt to pick all of the winners in the tournament before any tournament games are played. In recent years, the pick’em challenge has been hosted by Sanguine Bank which offered a million dollar prize to anyone who could pick all of the correct teams.QuestionsLet p(A) be the winning percentage of team A and p B be the winning percentage of team B. Assume we use the formula 1 to estimate the probability that A wins in a matchup against B.P(A wins|A and B play) = p(A)(1 - p(B)) / p(A)(1 - p(B)) + (1 - p(A))p(B)Using this formula, which year’s tournament results had the highest probability?To answer this question, please use the attached data.regular season results.csvseasons.csvteams.csvtourney results.csvtourney seeds.csvtourney slots.csvSanguine Bank has decided that the payout of the pick’em challenge is too risky. They contacted Auspicious Insurance Group (AIG) for a quote on a special insurance contract that covers the payout from the challenge. How much should AIG charge Sanguine Bank for the insurancecontract? It is sufficient to explain your approach; no code or amounts are required for this question.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"C++代写 FIT2049 Simple Game Implementation","slug":"page18","date":"2016-10-24T05:26:34.000Z","updated":"2016-11-03T08:03:08.918Z","comments":true,"path":"2016/10/24/page18/","link":"","permalink":"http://yoursite.com/2016/10/24/page18/","excerpt":"","text":"Introduction代写一个比较炫酷的3D的游戏，本质上其实还是在2D上的Grid运算，只不过GUI方面提供了3D的渲染引擎。RequirementFor your first assignment you’ll be implementing a simple colour matching game inspired by the Bejeweled series and creatively titled “Colour Match”. The game revolves around finding groups of the same colour on a 3D grid of cubes. The basic gameplay is as follows:When the game starts a grid of random colours will appear on screen.In a separate section of the screen, the player will be shown a random colour – this is known as the “Next Colour”.Using the arrow keys, the player will select one of the cubes on the grid and when they press the spacebar key, the colour of the selected cube will change to match the “Next Colour”.If the change in colour causes three or more cubes of the same colour to be “connected”, those cubes are removed from the screen and the player’s score is increased (the amount of score increase is up to you, but they should get bigger scores for matching larger amounts of cubes).After the matched cubes are removed, cubes above them on the grid should move down to fill their place (there should never be any holes in the board). New cubes should also appear along the top of the board to fill the place of any cubes which fell down to a lower row.After the cubes are removed, the “Next Colour” is randomised again and the player can pick another cube to replace.When the game ends, a game over screen should be displayed which tells the player their final score. A quit and a restart button should also be present on this screen.The end condition of the game is controlled by two things:If a move doesn’t result in a match of three or more connected cubes, a life is lost. After losing three lives, the game ends.A move counter should also be included which limits the amount of allowed moves per game. The player should be able to see the amount of moves remaining somewhere in the UI.To spice up the gameplay, a special Power Cube should be included, as outlined below:When the player selects a cube on the grid and activates the power cube with the P key, every cube on the grid that matches the selected colour should be removed from the board.The score rewarded should be based on the amount of cubes that were removed.The power cube is available from the start of the game and can only be used once - use it wisely!Defining “Connected”There are a few options for what we consider “connected” to mean. You can attempt one of the three options presented below depending on the grade you’re targeting.To receive a pass for the criterion “Are matching cubes correctly identified?”, you should look for matching colours in the immediate four neighbors. In the below images, the dark grey tile is the selected cell for the current turn, and the light grey are matching colours which should be removed.To receive a medium grade, you should look for lines of the same colour originating from the selected cell on any of its four sides.To be eligible for full marks, you should keep stepping through neighbours and find chunks of the same colour.Provided AssetsProvided inside the Assignment 1 Assets file on Moodle are all the assets you’ll need to create the game. The cubes have a width and length of one unit allowing for easier placement. It is recommended you build your solution off the Week 3 Base Code (while waiting for that code to be released, you should spend week two thinking about your solution).Please note that while additional assets may be included, they won’t be considered when marking.Only your C++ code and the quality of your gameplay will be assessed (we’re not marking your modelling skills).","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写c++ Application Development using C++  1","slug":"page17","date":"2016-10-23T04:16:44.000Z","updated":"2016-11-01T11:55:48.713Z","comments":true,"path":"2016/10/23/page17/","link":"","permalink":"http://yoursite.com/2016/10/23/page17/","excerpt":"","text":"Introduction根据题目需求完成一个名字叫PIG的小游戏，用到了c++的类的封装等操作，分为玩家与玩家和电脑与电脑这2种方法，使用到了数据结构list, 电脑玩家需要自己涉及最少2种以上的智能策略。最后需要总结分析，写一份相关的报高文档Requirement2016/17 ELEC362 - Application Development using C++ 1Assignment 1Program a multiplayer console game of ‘Pig’Game Rules: (according to Wikipedia)Each turn, a player repeatedly rolls a dice until either a 1 is rolled or the player decides to“hold”:• If the player rolls a 1, they score nothing and it becomes the next player’s turn.• If the player rolls any other number, it is added to their turn total and the player’s turncontinues.• If a player chooses to “hold”, their turn total is added to their score, and it becomesthe next player’s turn.The first player to score 100 or more points wins.For example, the first player, Ann, begins a turn with a roll of 5. Ann could hold and score 5points, but chooses to roll again. Ann rolls a 2, and could hold with a turn total of 7 points, butchooses to roll again. Ann rolls a 1, and must end her turn without scoring. The next player,Bob, rolls the sequence 4-5-3-5-5, after which he chooses to hold, and adds his turn total of 22points to his score.The implementation should exercise the object-oriented design aspects and goodpractices for design and implementation.entities that must be realised as C++ classes.attributes for each of these entities.Identify the methods that may be useful for each of these entities.• By carefully considering the rules of the game, implement the classes for your entities.Pay special attention to the interaction between classes and annotate yourimplementation using useful comments.• Design you classes to be reusable for part 1 and part 2Part one of assignmentProgram a multi-player version of the game that allows a number of players to competeagainst each other.Part two of assignment(Reusing the classes from the multiplayer game)Develop automated players that use at least two strategies (e.g. hold after a fixed number ofthrows, hold after a fixed gain of points)Write a code that automatically runs the automated players against each other and usestatistics to compare the strategies.2016/17 ELEC362 - Application Development using C++ 2SubmissionPlease submit your report and the source code (zipped project for both parts) on VITAL.In the report you will outline your design process by describing what classes you use, whatattributes and methods they contain and give an overview how they intact.Please copy your source code at the end of the report. (When pasting code in Word choose‘Past Options/Keep Source formatting’ to keep the colour coded formatting used in VisualStudio.)","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"代写C++ Project for C++","slug":"page16","date":"2016-10-22T06:23:32.000Z","updated":"2016-11-01T11:51:02.486Z","comments":true,"path":"2016/10/22/page16/","link":"","permalink":"http://yoursite.com/2016/10/22/page16/","excerpt":"","text":"Introduction写一个c++的项目，该项目主要练习c++的基础知识和对类的封装，需要实现2个类，然后对这2个类进行扩展要求，属于c++的初级用法RequirementProject for C++• Create an application containing thefollowing:2+ user defined classes4+ data members per class(including at least one use of an array)4+ methods per class (access and manipulation)2+ if / if-else statements2+ while loops2+ for loops1 or more nested loopsFile IO for reading and writing dataCSCI 1300 Fall 2016Project for C++For this project, you will submit:• A description of what your program does and how to use it (1-2 pages).• Screenshots showing the program working.• Your code.• Zip all files together and submit them to Moodle. Name the zip file_Project1.zip.• FAQs:• Do I have to design my own project, or can I work with a friend to design aproject?– You can work with a friend to come up with a project concept and you can help eachother work through coding issues, but each of you needs to submit individual work.• How will projects be graded?– All projects will be interview graded to give you the opportunity to brag about your workand also discuss parts of your project that might not be working quite the way youwant them to.CSCI 1300 Fall 2016Project ContestAs an incentive for this project, we will select the best project in three categories:Best Novice ProjectAs there are students that have had prior programming experience, this award islimited to students who had no experience in programming before this class.Best GameGames are a common theme in projects. This award will recognize who submitsthe best game.Best Public Service ProjectProviding the public with programs to aid or support a special cause cansignificantly improve our world. This award will recognize who submits the bestproject for a public cause.Each TA will submit the best project from their recitations for each category. All the TA’s and theInstructor will vote to determine the winners. (The judging criteria will be on the codecorrectness and style, creativity of idea, and clarity of the written explanation.)The students of the winning projects will receive a 2 point bonus in their final grade.CSCI 1300 Fall 2016","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写JavaScript Assignment 1","slug":"page15","date":"2016-10-20T03:13:42.000Z","updated":"2016-10-27T12:15:52.974Z","comments":true,"path":"2016/10/20/page15/","link":"","permalink":"http://yoursite.com/2016/10/20/page15/","excerpt":"","text":"Introduction题目分析如下：1.图书积分规则: 如果客户购买0本书，他们赚0分 如果客户购买1本书，他们可获得4分 如果客户购买2本书，他们可获得8分 如果客户购买3本书，他们可获得16分 如果客户购买的书超过3本,超过3本的部分按照每本16分的基础上在加7分2.非图书积分规则: 每消费$10便可获得4分:例如–消费$12获得4分Requirement1CS 170 ‐ Computer Applications for BusinessFall 2016 ‐ Assignment 7JavaScript Event-Driven ProgrammingDue Date Before 11:00 PM - Friday, October 28 th , 2016Accept Until Before 11:00 PM - Friday, November 4 th , 2016Evaluation 15 pointsSubmit to Sakai Assignment7_answers.html fileTo get credit for this assignment:Upload and submit the Assignment7_answers.html file through Sakai.Learning Objectives:This assignment is designed to practice:1. Understand the basic input and output mechanisms of dynamic web applications fromthe code perspective2. Implement JavaScript code which will handle user events3. Display feedback of said processed interactions back to the user4. Practice your understanding of basic JavaScript from the prior Assignmenta variables, including;i The declaration, initialization and assignment processesb Use of the conditional if statementsc Use of arithmetic and logic operatorsd Use of commentsDirections:You are provided an HTML program. Your responsibility is to insert the HTML tags with theappropriate JavaScript statements that will solve the problem discussed below, and tocomment the html file with the requested information per the requirements. The problemdescription and HTML program provided are slightly different from Assignment 6. Be sure tostart fresh.2Problem to solve:The Serendipity Booksellers has a book club that awards points to its customers based on thenumber of books purchased each month. The points are awarded as follows: If a customer purchases 0 books, they earn 0 points If a customer purchases 1 book, they earn 4 points If a customer purchases 2 books, they earn 8 points If a customer purchases 3 books, they earn 16 points If a customer purchases more than 3 books, they earn an additional 7 points on top ofthe 16 points for each book above 3.Serendipity Booksellers also awards points based on the dollar value spent on non-bookmerchandise. Four (4) points are awarded for every $10 spent. Partial awards are not provided.For example, 4 points will be awarded for spending $10.00 up to $10.99. No points are awardedfor less than $10.Preferred Customers receive a bonus of double award points.The Serendipity Booksellers website needs to be updated to ask the customer to enter thenumber of books purchased last month, the dollars spent on non-book merchandise, confirm ifthey are a Preferred Customer, and then calculate and display the number of award pointsearned.Requirements:For this assignment;1. Your program will calculate the award points as described above.2. You will generate HTML comments to add your name, section and TA name. Each on aseparate line within the tags. This will (should) NOT be visible in the documenton the web browser).3. Utilize a tag4. You will then add the HTML tags with the proper JavaScript code to produce:a. A textbox to solicit the number of books purchasedb. A textbox to solicit the dollars of non-book merchandisec. Grouped radio buttons to determine Preferred Customer membershipd. A button to calculate the number of points awardede. A readonly textbox to display the result the calculation5. Utilize JavaScript comments to explain the steps you are preforming within your code. AJavaScript comment’s form is:/ Place your comment between the stars /36. Variable names should be descriptive. For example, if a program is calculating the totalcharge for a bill at a restaurant, it may have a variable named tipAmount.7. Utilize at least one if/else statement. Consider using the if/else in determining thebonus points.A sample of what your webpage could look like:Additional Information:Since the contents of a textbox, is going to be used in mathematical operations. Textboxessometimes treat input as Strings. Use the function parseInt() to convert the String text to anumber. Otherwise your calculation operations will not perform as expected.JavaScript provides several math utilities. The Math.floor() method rounds a numberDOWNWARDS to the nearest integer, and returns the result.References:Fluency 6 - Chapter 17 - Fundamental Concepts Expressed in JavaScript- Chapter 18 – A JavaScript Programw3schools.com - http://www.w3schools.com/js/default.aspFirefox Tools - https://developer.mozilla.org/en-US/docs/Tools/DebuggerLectures’ slides and examplesRecitation Week 6Recitation Week 7","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"代写Java Assignment 1","slug":"page14","date":"2016-10-19T05:12:42.000Z","updated":"2016-10-27T10:10:29.671Z","comments":true,"path":"2016/10/19/page14/","link":"","permalink":"http://yoursite.com/2016/10/19/page14/","excerpt":"","text":"Introduction写一个购票管理系统，涉及到增，删，改，查等操作，是JAVA的入门级别基础知识，主要考察对java的级别操作，I/O读写等知识点RequirementITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 1 of 9Assignment 1OverviewThis is an individual assignment that requires you to design, develop and test a small procedural Javaprogram.Timelines and ExpectationsPercentage Value of Task: 20%Due: 16:00 Friday 21 st October 2016 (week 7)Minimum time expectation: 10 hoursLearning Outcomes AssessedThe following course learning outcomes are assessed by completing this assessment: Identify and use the correct syntax of a common programming language Recall and use typical programming constructs to design and implement simple softwaresolutions Reproduce and adapt commonly used basic algorithms Utilise pseudocode and/or algorithms as a major program design technique Write and implement a solution algorithm using basic programming constructs Demonstrate debugging and testing skills whilst writing code Develop self-reliance and judgement in adapting algorithms to diverse contexts Design and write program solutions to identified problems using accepted design constructsITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 2 of 9Assessment DetailsThe Federation University Australia Olympic Games are about to commence! The games have beenscheduled to begin on Saturday 3rd December 2016, competitors are busy training and now it’s timeto prepare to sell spectator tickets.Your task is to design, develop and test a small application for recording ticket sales to this event.Stage 1: DesignThis stage requires you to prepare documentation that describes the function of the program and howit is to be tested. There is no coding or code testing involved in this stage. A document template hasbeen provided for your use.Requirements:1) Read through Stage 2: Program Development to obtain details of the requirements of thisprogram.2) Write an algorithm that describes how the program will operate.a. All program requirements – base, standard and advanced – must be included, even if youdo not end up including all these requirements in your program code.b. The algorithm must be structured logically so that the program would function correctly.3) Prepare and document test cases that can be used to check that the program works correctly,once it has been coded. You do NOT need to actually run the test cases in this stage; this willoccur in Stage 3: Testing.a. All program requirements – base, standard and advanced, must be included, even if youdo not end up including all these requirements in your program code.b. Make sure the test cases include checking of data entered by the user to make sure thatonly valid data is accepted. If the user enters invalid data, the user should be informed ofthis and given another chance to enter the data. NB: As we have not covered exceptionhandling, you may assume that the user will always enter an integer.c. Test cases should be documented using a template like the one below. You may includeextra information if you wish. At this stage, the Actual Result column will be left blank.Test Case Expected Result Actual ResultThe user selects to purchase Tier 1tickets.The user is prompted toenter the number oftickets to purchase.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 3 of 9Stage 2: Program DevelopmentUsing the Design Documentation to assist you, develop a Java program that records spectator ticketsales at the gate for the Federation University Australia Olympic Games, implementing therequirements outlined in this section. These requirements have been broken into three groups: Base Functionality includes the minimal level of requirements to achieve the essentialcomponents of this assignment. This group of requirements focuses on getting the code towork and on using the programming constructs we cover in class. You can expect to useconstants, variables, loops, conditional statements and arithmetic operators for theserequirements and you should look for opportunities to use these wherever you can. You will notreceive full marks for implementing a requirement, even if it works, if you have not used theappropriate programming construct to do so.At this level, you can decide if it is easier for you to code everything within a single method, orto modularize it straight away. Standard Functionality ensures the code is modularized, and that method calls are used toensure the program flows correctly. It allows data to pass from one method to another asparameters. It also includes providing a running total of tickets within an order, which is notessential for getting the program to work, but is useful information for the user to see. Advanced Functionality provides a challenge task, and is best left until all the other requirementshave been addressed. It requires looking at a Java API to find out how to use a class we havenot covered in the course, and using this to provide a countdown of days remaining until thegames commence.All three groups require that you follow coding conventions, such as proper layout of code, usingnaming conventions and writing meaningful comments throughout your program.Base Functionality:1. Display a welcome message when the program starts The welcome message should have a row of asterisks at the top and the bottom, just longenough to extend over the text. Hint: Use a For loop for this. The first line of the message should read “FEDERATION UNIVERSITY AUSTRALIAOLYMPICS” and be approximately centred in the row of asterisks by printing white spacefirst. Hint: Can you modify the For loop from the previous step to print the white spaces? A second line of the message should be blank. The third line should read “Developed by” followed by your name and a comma, then “student ID ”, then your student id, then finally “ for ITECH1000 Sem 2 2016”. The fourth line should be blank.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 4 of 92. Provide a menu from which the user can select to Purchase Tickets, View Ticket Sales or Exit.This menu should be repeated each time after the user has chosen and completed an option untilthe user chooses to Exit. The user selects an option by entering the number next to it. If aninvalid number is selected, the user is advised and shown the menu again to make anotherselection.3. When the user selects the Purchase Tickets option, provide another menu from which the usercan select Tier 1 Tickets, Tier 2 Tickets, Finalise Order or Cancel Order. The user selects anoption by entering the number next to it. If an invalid number is selected, the user is advised andshown the menu again to make another selection.a. Should the user select Tier 1 Tickets or Tier 2 Tickets, they are prompted to enter theNumber of Tickets required. After entering the number of tickets required, they arereturned to the Ticket Purchasing Menu so that they may choose to purchase additionaltickets. The user may not choose to purchase a negative number of tickets, but apurchase of 0 tickets is permitted.b. Should the user select Finalise Order:i. The sale is processed by displaying the number of each type of ticket purchasedand the total cost of the tickets in this order. A Tier 1 ticket costs $18.50; a Tier 2ticket costs $11.25.ii. A record is kept of the total cost of tickets sold, the total number of Tier 1 ticketssold and the total number of Tier 2 tickets sold. This is a combined total from allorders; there is no need to keep a record of the number of tickets in eachindividual order.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 5 of 9iii. The user is returned to the menu from Step 2.c. Should the user select Cancel Order:i. The order is cancelled and a message displayed to confirm this to the user.ii. The user is returned to the menu from Step 2.4. When the user selects the View Ticket Sales option, display the total value of ticket sales and boththe total number of Tier 1 tickets and the total number of Tier 2 tickets sold across ALL orders.Highlight this message display with a row of 50 asterisks before and after the message. After thefinal row of asterisks, redisplay the menu from Step 2.5. When the user selects Exit System, quit the program with a message to the user.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 6 of 9Standard Functionality:6. Update the Ticket Purchasing Menu so that a running total of tickets included in an order isdisplayed until the order is finalized7. Modularize the code, correctly using method calls and passing data between methods asparameters.Advanced Functionality:8. Update the Welcome Message to include a countdown of the number of days to go until thegames begin.a. Use the GregorianCalendar class to manage your dates. You will need to importjava.util.GregorianCalendar to use this library.b. The countdown must be calculated based on the number of days between the time theprogram runs, and Saturday 3rd December 2016. It should also be possible to just updatethe date within the code and have the countdown automatically recalculate the number ofdays until the games commence.c. There is no pre-defined method for finding the difference between two dates in this library.You will need to develop your own, using the features of the GregorianCalendar class.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 7 of 9Stage 3: TestingUsing a copy of the test cases developed in Stage 1: Design, test the program you have developed inStage 2: Program Development. Document your results, including both failed and successful tests.Note: Please do not leave out any failed tests. If your testing highlights that your program has notworked correctly, then the failed tests help to demonstrate that you have been testing your programproperly.To show that you have tested your program, include small (but readable) screen captures in yourActual Results as well as any explanatory comments. Microsoft Windows includes a Snipping Toolthat is useful for taking captures of the relevant parts of the screen.You may test your program in phases if you wish. Stage 2: Program Development provides threeseparate groups of functionality in the requirements, working from the minimal level of requirementsthrough to more advanced concepts. Each of these groups can be tested individually.Base Functionality:This phase requires you to check that the base functions (displaying welcome message when theprogram starts, showing a menu of options until the user chooses to exit, purchasing tickets, viewingticket sales and exiting the system) have been implemented.Standard Functionality:In addition to the Base Functionality, this section includes displaying a running total of tickets that havebeen added to an order until such time as the order has been finalized. This new functionality mustalso be tested.If you originally wrote and tested the Base Functionality by including all the code in a single method,this phase also requires that you modularize your code, and use method calls and pass data betweenmethods to ensure your program still runs correctly. This means all your code will need to be re-tested to ensure that all the previous functionality still works.Advanced Functionality:This phase requires testing the code that calculates and displays the number of days until the gamescomments in the welcoming message shown when the program starts.SubmissionYour program code and testing documentation should be zipped into a single file and loaded into theAssignment Box provided in Moodle by the due date and time.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 8 of 9Marking Criteria/RubricTaskAvailableMarksStudentMarkStage 1: Design DocumentationDevelopment of an algorithm describing how the program should function All requirements from the Assessment Details section included 1 Logical structure 1Documented test cases to validate program All requirements from the Assessment Details section included 1 Data is validated to ensure user entries are appropriate and incorrect user entriesare handled smoothly1Stage 2: Program DevelopmentA Java program addressing the requirements outlined in the Assignment Details section,including appropriate use of loops, conditional statements, constants and variables:Use of coding conventions throughout entire program, including readable and clear layout,following naming conventions and including meaningful and appropriate comments.1Base Functionality: Display of a welcome message when the program starts 1 Menu displayed until user chooses to exit 1 Purchase Tickets option to select and order a user-selected combination of Tier 1and Tier 2 tickets2 View Ticket Sales to display the total value of ticket sales and both the total numberof Tier 1 tickets and the total number of Tier 2 tickets sold1 Exit System to quit the program with a message to the user 1Standard Functionality: Running total of tickets included in an order displayed in the Purchase Tickets menuuntil the order is finalised1 Code modularized, correctly using method calls and passing data between methods 2Advanced Functionality: Countdown of days to go until the games commence included in the welcomemessage3Stage 3: TestingDocumented test results clearly showing all the testing that has been conducted and theresults of this testing. Testing of base functionality1 Testing of standard functionality1 Testing of advanced functionality1Total 20CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 9 of 9FeedbackAssignments will be marked within 2 weeks of submission. Marks will be loaded in fdlGrades, and acompleted marking sheet will be available via Moodle.Plagiarism:Plagiarism is the presentation of the expressed thought or work of another person as though it is one’sown without properly acknowledging that person. You must not allow other students to copy your workand must take care to safeguard against this happening. More information about the plagiarism policyand procedure for the university can be found at http://federation.edu.au/students/learning-and-study/online-help-with/plagiarism.","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"代写python Programming Assignment 4","slug":"page13","date":"2016-10-17T20:22:46.000Z","updated":"2016-10-26T12:08:20.437Z","comments":true,"path":"2016/10/18/page13/","link":"","permalink":"http://yoursite.com/2016/10/18/page13/","excerpt":"","text":"IntroductionTASK 1:主要工作量如下:1.读取数据和标签，设置函数为：load_data2.归一化数据，使用sklearn的函数sklearn.preprocessing.normalize3.使用sklearn的函数sklearn.cross_validation.train_test_split进行数据拆分，按照70%，15%，15%拆分训练集，验证集，测试集4.使用np.savetxt保存相关集合TASK 2:朴素贝叶斯使用算法为：sklearn.naive_bayes.BernoulliNB验证准确率为：(‘valid accuracy score:’, 0.62646869836607311)测试准确率为：(‘test accuracy score:’, 0.62184459335413989)混淆矩阵为：[[14118 16819 136 0 30 36 819] [ 6262 33060 2466 12 159 207 147] [ 0 225 4832 72 33 180 0] [ 0 0 199 170 0 44 0] [ 146 983 173 0 100 6 0] [ 31 299 1962 29 112 205 0] [ 925 434 11 0 0 0 1710]]剩下的不一一列举…Requirement1.OverviewThe aim of this assignment is to compare alternative techniques for predicting forest cover types from cartographic variables. You will be using the sklearn machine learning library to perform this study. The dataset is based on four wilderness areas in the Roosevelt National Forest, located in the Front Range of northern Colorado. Cover type data came from US Forest Service inventory information, while the cartographic variables used to predict cover type consisted of elevation, aspect, and other information derived from standard digital spatial data processed in a geographic information system (GIS).Data Set Information:The prediction of forest cover type is from cartographic variables only (no remotely sensed data). The actual forest cover type for a given observation (30 x 30 meter cell) was determined from US Forest Service (USFS) Resource Information System (RIS) data. Independent variables were derived from data originally obtained from US Geological Survey (USGS) and USFS data. Data is in raw form (not scaled) and contains binary (0 or 1) columns of data for qualitative independent variables (wilderness areas and soil types).This study area includes four wilderness areas located in the Roosevelt National Forest of northern Colorado. These areas represent forests with minimal human-caused disturbances, so that existing forest cover types are more a result of ecological processes rather than forest management practices.Some background information for these four wilderness areas: Neota (area 2)probably has the highest mean elevational value of the 4 wilderness areas. Rawah (area 1) and Comanche Peak (area 3) would have a lower mean elevational value, while Cache la Poudre (area 4) would have the lowest mean elevational value.As for primary major tree species in these areas, Neota would have spruce/fir (type 1), while Rawah and Comanche Peak would probably have lodgepole pine (type 2) as their primary species, followed by spruce/fir and aspen (type 5). Cache la Poudre would tend to have Ponderosa pine (type 3), Douglas-fir (type 6), and cottonwood/willow (type 4).The Rawah and Comanche Peak areas would tend to be more typical of the overall dataset than either the Neota or Cache la Poudre, due to their assortment of tree species and range of predictive variable values (elevation, etc.) Cache la Poudre would probably be more unique than the others, due to its relatively low elevation range and species composition.Attribute Information:Given is the attribute name, attribute type, the measurement unit and a brief description. The forest cover type is the classification problem. The order of this listing corresponds to the order of entries along the vectors of the database.Name / Data Type / Measurement / DescriptionElevation / quantitative /meters / Elevation in metersAspect / quantitative / azimuth / Aspect in degrees azimuthSlope / quantitative / degrees / Slope in degreesHorizontal_Distance_To_Hydrology / quantitative / meters / Horz Dist to nearest surface water featuresVertical_Distance_To_Hydrology / quantitative / meters / Vert Dist to nearest surface water featuresHorizontal_Distance_To_Roadways / quantitative / meters / Horz Dist to nearest roadwayHillshade_9am / quantitative / 0 to 255 index / Hillshade index at 9am, summer solsticeHillshade_Noon / quantitative / 0 to 255 index / Hillshade index at noon, summer solticeHillshade_3pm / quantitative / 0 to 255 index / Hillshade index at 3pm, summer solsticeHorizontal_Distance_To_Fire_Points / quantitative / meters / Horz Dist to nearest wildfire ignition pointsWilderness_Area (4 binary columns) / qualitative / 0 (absence) or 1 (presence) / Wilderness area designationSoil_Type (40 binary columns) / qualitative / 0 (absence) or 1 (presence) / Soil Type designationCover_Type (7 types) / integer / 1 to 7 / Forest Cover Type designationYour tasksPreprocessing (5 marks)Write a Python script (with the file named task_1.py), thatloads the dataset shuffles the datadeals with any missing value (if any)performs normalization of the datacreates numpy arrays train_data, validation_data and test_data which contain respectively 70%, 15% and 15% of the shuffled data.saves these preprocessed arraysWhenever applicable use the validation set to select the architecturalparameters needed to build the following classifiers;Naive Bayes (5 marks)Write a Python script (with the file named task_2.py), thatbuilds naïve Bayes classifiersevaluates the prediction errorsreports these errors with a confusing matrixDecision Trees (5 marks)Write a Python script (with the file named task_3.py), thatbuilds decision tree classifiersevaluates the classifiersNearest Neighbours (5 marks)Write a Python script (with the file named task_4.py), thatbuilds kNN classifiersevaluates the classifiersSupport Vector Machines (5 marks)Write a Python script (with the file named task_5.py), thatbuilds SVM classifiersevaluates the classifiersDeliverablesYou should submit via Blackboard a zip file containingA report in pdf format limited to 10 pages of text (be concise!)describing the design of your experimentsreporting on the performance of your classifiersa statement of completeness (concise description of what you have implemented, what works, what doesn’t).All your Python script files with proper commenting. Good code documentation is critical.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"}]},{"title":"代写c++ Programming Assignment 2","slug":"page12","date":"2016-10-17T20:22:46.000Z","updated":"2016-10-26T12:03:06.907Z","comments":true,"path":"2016/10/18/page12/","link":"","permalink":"http://yoursite.com/2016/10/18/page12/","excerpt":"","text":"Introduction用c++实现简单的机器学习，统计词频，情感分析等等，此处用到的数据结构算法是哈希表，需要先对数据进行清理操作，然后分词，最后统计词频，根据公式情感分析等等，此题目比较新颖，通过c++来讲述数据挖潜和机器学习的原理知识，对数据结构哈希表也考的很到位，点赞RequirementAssignment 2Due:​​ Oct 14th (Friday) before 11:59 PM1. Learning GoalsLearn how to1. use associative containers like ​std::unordered_set​ and ​std::unordered_map2. use iterators to iterate through associative containers3. use ​algorithms​ that are available in the C++ Standard Library4. pass command line arguments to a C++ program5. partition a C++ program in header files (.hpp) and source files (.cpp)6. read, understand, and use code written by other people2. DescriptionIn this assignment you’ll be doing the following:1. Read a raw text file containing movie reviews and ratings.2. Remove the punctuations and stopwords (e.g. is, and, the, etc.) from the reviews andwrite the contents to a clean review file.3. Associate a value for all words found in the clean reviews based on the average rating ofthe word.4. Using the map between the words and their associated values, rate reviews fromanother file that doesn’t have any rating already.5. Write the ratings of the reviews to an output file.2.1. Clean the dataThe raw data with the reviews and the rating will be present in a file namedrawReviewRatings.txt​. Every review is given a rating between 0 - 4 (both inclusive). Thefollowing are interpretation of the rating values:● 0 = Negative● 1 = Somewhat Negative● 2 = Neutral● 3 = Somewhat Positive● 4 = PositiveEach line of review follows the following format: Example:4 The Jungle Book is awesome!CS 368 (C++) - Fall 2016Adalbert ​Gerald​​ Soosai Rajwhere 4 is the rating and the text “The Jungle Book is awesome!” is the review.Now, your first task is to read the contents of this file and ​clean the data!The following steps needs to be performed in the same order for cleaning the data:1. Read the raw reviews from an input file. e.g. ​rawReviewRatings.txt2. Replace the hyphens in every line of text with spaces.e.g. If the review contains the word “awe-inspiring”, then it should be split into 2 wordsnamely “awe” and “inspiring”3. Split each line of text into multiple words using the space character as the delimiter.e.g. “The Jungle Book is awesome!” becomes | “The” | “Jungle” | “Book” | “is” |“awesome!” |4. Remove the punctuation marks from the words.e.g. “awesome!” becomes “awesome” and “!” becomes “”5. If there are any trailing/leading whitespaces, then remove them. Remember that thespace character (‘ ’), tab (‘\\t’), newline (‘\\n’), etc. are considered as whitespaces. For acomplete list of whitespace characters ​this​.e.g. “zootopia ” becomes “zootopia”, “hello\\t” becomes “hello”, and “world\\n” becomes“world”6. Remove the empty words. i.e. words with length == 0.7. Remove single lettered words. i.e. words with length == 1.8. Remove stopwords. e.g. is, and, the, etc. The list of stopwords can be found in the filestopwords.txt9. Write the contents of the clean data to a file named ​cleanReviewRatings.txt​.2.2. Fill the dictionaryUsing the ​cleanReviewRatings.txt file, create a map/dictionary for every word that is found inthis file. The dictionary is of type​std::unordered_map","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写C CS352 Programming Assignment 1","slug":"page11","date":"2016-10-17T15:22:43.000Z","updated":"2016-10-26T11:50:43.755Z","comments":true,"path":"2016/10/17/page11/","link":"","permalink":"http://yoursite.com/2016/10/17/page11/","excerpt":"","text":"Introductionlinux下的c语言入门级别的3个小题，第一个是控制格式的打印和输出，第二题是对比表达式是否是相同的表达式，需要解析表达式，对运算符进行分析，第三题是分解一个数，获取质数的和。RequirementECE15: Homework 5In all homeworks, the dialogue boxes show the system prompt in ( ˜ )$, the user input in red, and thecomputer output in black. Unless otherwise indicated, assume that the user will always enter a validinput.Problem0. Read the following Zybooks sections and solve the problems there in.Sections 7.1 to 7.4 by 8pm Tuesday October 25th.Sections 7.5 to 7.8 by 8pm Thursday October 27th.Problem1. A histogram represents a sequence of values as vertical rectangles of proportionalheights. Write a program histogram.c that asks the user for a sequence of space-separated positiveintegers followed by zero, and draws a “sideways” histogram representing each positive integer n asn spaces followed by a vertical bar, and separating these lines by a line of “-” whose width is themaximum width of its adjacent rectangles.( ˜ )$ a.outPositive widths followed by 0: 6 2 1 3 4 0——|——|–|—|—-|—-( ˜ )$ a.outPositive widths followed by 0: 3 2 1 0—|—|–|-( ˜ )$ a.outPositive widths followed by 0: 3 0—|—( ˜ )$ a.outPositive widths followed by 0: 0( ˜ )$Problem2. Lines in the plane are often represented by linear equations, for example 2x+5y=3,or 10y+4x=6, that represents the same line. To standardize the representation one can express y as afunction of x, for the line above, y=-0.4x+0.6 where -0.4 is called the slope, and 0.6 is the intercept.Two lines are parallel if they have the same slope (with the same or different intercepts), and called thesame if they have the same slope and intercept.Write a program line.c that asks the user for equations of straight lines in the plane and printswhether the lines are all same, are all parallel but not all the same, or not all parallel. Note that for anyset of lines, only one of these description holds. If no equations are entered, a corresponding messagegets printed.The equations can be entered as ax ± by = c or ay ± bx = c, where a,b,c are doubles. The programasks the user for lines until the they decide to stop. Since floating-point numbers are stored withsmall rounding errors, consider two slopes, or two intercepts, to be equal if the absolute value of theirdifference is ≤ 10 − 10 .( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 6x+7.5y=1.5Enter another equation? [y/n]: yEquation: 6x+7.5y=1.5Enter another equation? [y/n]: yEquation: 9.1x+0.8y=2Enter another equation? [y/n]: nNot all lines parallel.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 2.5x+3.2y=4.1Enter another equation? [y/n]: yEquation: 3.2y+2.5x=1.6Enter another equation? [y/n]: nAll lines parallel but not all same.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 2x-3y=4Enter another equation? [y/n]: yEquation: -3y+2x=4Enter another equation? [y/n]: nAll lines same.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: -3y+2x=4Enter another equation? [y/n]: nAll lines same.( ˜ )$ a.outEnter another equation? [y/n]: nNo equations!( ˜ )$2Problem3. Write a program prime.c that asks the user for an integer n ≥ 2 and prints n as asum of prime numbers: p 1 + p 2 + … + p k .Typically, there may be several ways to write n as a sum of primes. Print the sum where p 1 is thelargest prime ≤ n that is not n − 1; p 2 is the largest prime ≤ n − p 1 that is not n − p 1 − 1, and so on.( ˜ )$ a.outInteger: 4Prime sum: 2 + 2( ˜ )$ a.outInteger: 9Prime sum: 7 + 2( ˜ )$ a.outInteger: 148Prime sum: 139 + 7 + 2( ˜ )$ a.outInteger: 2Prime sum: 2( ˜ )$3","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C CS37 Programming Assignment 3","slug":"page10","date":"2016-10-16T14:52:53.000Z","updated":"2016-10-16T16:24:52.098Z","comments":true,"path":"2016/10/16/page10/","link":"","permalink":"http://yoursite.com/2016/10/16/page10/","excerpt":"","text":"Introductionlinux下的c语言os方面课程，多线程归并排序统计加速比测试，测试1,2,4,8,16,32个线程的情况下加速比。代码不算难，但是要进行大量测试和统计操作。并且需要对linux下的多线程原理足够清楚RequirementProject 3Due date: Oct 17, 2016 (No late submissions)The goal of this project is to evaluate Amdahl’s law in the context of the sorting problem. The details of your implementation are as follows:1.Implementation detailsa.Your executable should be called PROG4b.You will invoke PROG4 asi.PROG4 ii.Assume that is a multiple of 32iii.Assume that the number of threads is 1, 2, 4, 8, 16 or 32iv.Example invocation:PROG4 3200 162.When you execute the program, the following should happena.First, you will fill the array with strictly decreasing numbers. For example, if the array is of size 320, you can initialize it to 320, 319, 318 etc.b.You will partition the array into 32 parts. You will sort each part using BUBBLESORT so that they are in increasing order. Finally, all 32 sorted parts will be merged to obtain the final sorted array. To achieve this with K threads, you will proceed as follows:i.When you have K threads, each thread will handle 32/K parts and sort them. Now, you have 32 sorted parts of original array A.ii.You will merge the sorted parts to generate array B that will represent the sorted array A.c.You will verify that the array is actually sorted and contains the correct data. For example, in the above scenario, you should see numbers from 1..320.3.Important observations:a.You are partitioning the array into 32 parts independent of the number of threads you have. This is critical. This ensures that the actual work done is independent of the number of threads.b.Normally, when you use multiple threads, this can increase the total work done. But we are trying to avoid the problemc.We initialize the array to be in a decreasing order and use bubblesort to get it into increasing order.d.The number 32 is chosen because cse410.cse.msu.edu has 32 processors.4.As an illustration of this, for sake of discussion, assume that array A has 3200 elements. We partition array A into 32 parts, from [0..99], [100..199], … [3100..3199].a.Consider the case where number of threads=1. In this case, you have only one thread. Hence, it will sort all 32 parts separately one after another. Then, it will merge it. This will correspond to the time required to sort the array with just one thread. This time will be split into two parts: the part that can be parallelized (namely the sorting of individual parts) and the part that cannot be parallelized (namely the merging part). Use this time to evaluate the value of f, the part that is sequential. As an illustration, if the time required for sorting individual parts was 200 and the time required for merging was 25 then f = 25/(200+25).i.Some smart people will realize that the merging itself could be parallielized. But we will not do that in this project. The merging will always be sequential.ii.Note that Amdahl’s law only considers the case where some part can be parallelized by n threads and the remaining part must be run on only one thread. It does not consider the case where you have some part where you can utilize more than one thread but cannot utilize all n.iii.In fact, the merging part will be independent of the number of threads you have.b.Consider the case where K=2. In this case, each thread will sort 16 parts. Each thread will sort the parts assigned to it independently (in parallel). Then, you will merge it to get the sorted array. Recall that the merging must be done sequentially. It is expected that the merging time will remain unchanged in this process.5.What to turn ina.Your .cpp files, .h files and makefile that will generate PROG4b.A report (pdf) describing your experience with Amdahl’s lawi.You should consider five different array sizes from 320 to 32,000,000.ii.The sizes you choose should be such that total time to run with 1 thread is at least 1 second and no more than 10 minutes.iii.For chosen sizes, run your program with 1, 2, 4, 8, 16 and 32 threads.iv.Run each experiment 3 times and use the average.v.Identify the sequential fraction based on your experiment with 1 thread. Observe that sorting 32 parts can be parallelized. Merging cannot be.vi.Compare the results you have with that predicated by Amdahl’s law.vii.Explain the difference, if any.viii.(Note that the verification time should not be included in the time you report.)6. A few things that will helpa.You saw that you can provide each thread with a threadIDb.You can make assignments of the parts to be sorted based on threadIDc.For example, if you have 4 threads, thread 0 is responsible for first 8 parts and so on.d.You can create partitions in-place7.Some more thingsa.Your sorting or merging should not assume that the array is provided in a sorted fashion. It should work for arbitrary array. The reason I have specified the initial array in the given fashion is so that you can validate correctness of your program. For example, merging cannot be simply put the parts in reverse order.b.Merging would essentially occur in the main() after all threads are joined.c.You are provided with 2 files pth.cpp – that does things somewhat incorrectly (discussed in class) and pth.cpp that does things in the right fashion.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C++ CS37 Programming Assignment 1","slug":"page9","date":"2016-10-15T13:42:55.000Z","updated":"2016-10-15T17:34:05.800Z","comments":true,"path":"2016/10/15/page9/","link":"","permalink":"http://yoursite.com/2016/10/15/page9/","excerpt":"","text":"Introduction一个简单的c++程序，计算BMI指数，重点在于注意细节，c++的标准I/O的输入输出格式输出RequirementTotal Point: 12 Due Date: 09/12/2016, MondayAssignment Description:Write a program that calculate the Body Mass Index (BMI). Your program shouldperform the following tasks:1. Prompt the user to enter the following data for each person: ID (four digit integer), Name 20 character string, Weight in pounds (floating-point with 1 digit after decimal point), Height in inches (floating-point with 1 digit after decimal point).2. Compute the BMI using the following formula:BMI = (weightInPounds 703) / (heightInInches heightInInches)3. Save (Write) the input data (id, name, weight, height) and the calculated BMI(floating-point with 2 digits after decimal point) into a text file (e.g. bmifile.txt).4. Repeat steps 1-3 to compute the BMIs for three persons, then close the text file.5. Now, read all the BMI records from the text file, one person each time, and print outa summary like the following:Program Requirements:1. The program must use streams, cout and cin objects to perform the IOs withconsole, printer, and file, and use IO manipulators to format the output.2. The program should include the following information as comment on top of sourcecode: Programming assignment number Author of the program Date of programming (or due date) Brief description on what the program will doGrading:Create and run your program using IDE of your choice (CodeBlock or Visual C++).Print the source code, program output and a snapshot of the text file (to show thefile content) and turn in all three items for grading. The turn in documents must belegible. Extremely tiny font or light/blur inks used in printing make it impossibleto read and grade your assignments.Also save the source code and output in your computer or portable storage device (USBdevice for example) so that they can be turned in for validation if asked to do so.","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写JAVA COSC1290","slug":"page8","date":"2016-10-14T13:12:35.000Z","updated":"2016-10-15T16:38:24.713Z","comments":true,"path":"2016/10/14/page8/","link":"","permalink":"http://yoursite.com/2016/10/14/page8/","excerpt":"","text":"Introduction写基于JavaFX的GUI界面，在assignment1的command功能基础上加上sqlite数据库和文件存储操作，同时把command的功能用JavaFX实现。实现的时候通过参数的形式区分文件存储和数据库存储。由于assignment1的逻辑比较复杂，实现JavaFX界面的时候，工作量略大。JavaFX还有内置的WebView，能通过其调Javascript，功能更强大，界面更好看，如果熟练之后，开发起来比swing更方便Requirement IntroductionYou are required to implement a basic Java program using Java SE 8.0 and JavaFX.This assignment is designed to help you:1. Enhance your ability to build a Graphical User Interface using JavaFX;2. Practise implementation of various GUI event handlers;3. Practise application of using file input and output processing;4. Practise the use of command-line arguments.This is an individual assignment and worth 10% towards your final grade. Academic Integrity (more)The submitted assignment must be your own work. No marks will be awarded for any partswhich are not created by you—this includes use of 3 rd -party GUI components.Plagiarism is treated very seriously at RMIT. Plagiarism includes copying code directly fromother students, internet or other resources without proper reference. Sometimes, studentsstudy and work on assignments together and submit similar files; this may be regarded asplagiarism. You should always create your own assignment even if you have similar ideas.Plagiarism-detection tools will be used for all submissions. Severe penalties may be appliedin cases of plagiarism, including loss of all marks or, in repeat cases, expulsion from thecourse. General Implementation Details• Initial data should be read from an input text file. A Save option should beimplemented that writes out to a text file.• All menu/interactive input should be via a graphical user interface, implemented inJavaFX. All information displayed to the user should be via the same GUI.• Sample GUI layouts will be put on Blackboard: you are free to have differentlayouts as long as your GUI layouts are clear (marks may be deducted for verypoor design).• Any incorrectly formatted input should be checked by the GUI implementation.• You are to use packages: all your new code should be in packages called:o guio fileioCode not in either of these packages will not be considered for marking.• You must not use 3 rd -party GUI components (i.e., not built by you).• Marks will be allocated to proper documentation and coding layout and style. Yourcoding style should be consistent with standard coding conventions (as in Assignment1).• Your programs will be marked on CSIT machines using Java SE 8.0. You should testyour program on these machines before you submit. Task SpecificationYou are to build a Graphical User Interface (GUI) for the MyTi system of Assignment 1. Youwill also make running of the MyTi system more configurable by reading initial Card, Userand TravelPass information from input files and write updated information to an output file.You do not need to add any other new functionality to the MyTi system of Assignment 1. What if my Assignment 1 did not work properly?• If you did not get TravelPass purchasing and Journey-taking working fully in Assignment1 then you are allowed to just purchase a TravelPass (as in the first Sample Run). Part A: Packages and Organisation of Code (0.5 marks)You should organise your code into 3 packages. A package called myti should be used forcode from Assignment 1. Packages called gui and fileio should contain all new code forAssignment 2 (you can put some of your existing code into these packages, if necessary). Part B: Command-Line Arguments (0.5 mark)You are to use command-line arguments to provide the name of your input and output files.For example, if your main() program is in the class Assign3 and you read input frominput.txt and your output is output.txt, then you would run your program as followsfrom the command-line on a unix machine:&gt; java Assign2 input.txt output.txtIf you use eclipse, then you specify the arguments under Run &gt; Run Configurations;however, as always, your program will be marked by running it from the command-line. Part C: File Input and Output (1.5 marks)Put initial TravelPass prices and Card andUser information in a text file (the name of this fileis the first command-line argument); your program should read this file at start-up andinitialise prices and create Users with the appropriate values. A sample input file will beprovided on Blackboard: you must follow that format precisely, though you are welcome toinclude more information than in that sample.Your program will be tested with different values (but with the same format) so makesure you can handle reading the file properly.When the SAVE option is selected on the GUI, you should write an output (text) file. Theoutput file must use the identical format to input file format below. You should write out thesame information as you read in with the updated values. Part D: Graphical User Interface (6 marks)Add a GUI for at least the following functionalities from Assignment 1. (You can implementa GUI that covers your complete Assignment 1 functionality but there’s no extra marks in it.)• The GUI should begin with a single window for purchasing Travel Passes and takingJourneys. Buttons for “Managing Cards and Users” and for “Display Reports” may openup new windows. See the sample GUI on Blackboard;• The Take a Journey window should include:o a list for selecting a Card id (i.e., Take a Journey on this Card);o lists to select 2 stations;o a list to select the day of travel, and an input box to enter the time;o a message box where error messages or other output is displayed;o CANCEL and PURCHASE buttons;• The Manage Passes and Users screen should include:o a list of Card IDs and associated User names;o when a Card is selected, User details and remaining credit is displayed;o an input box and an ADD CREDIT button for adding credit for the selected Card:when this is performed, credit for that Card is displayed / updated;o a message box where error messages or other output is displayed;o an Add a User panel that obtains the required information for a new user and addsthem. When a User is created, there should be an option to register a Card to thatUser;• The Display Reports screen should include:o a single Display All Journeys button;o a scrollable text box that contains the list of Journeys.o Note, if in Assignment 1 your function just displayed the Journeys for a Card, thenyou can do this here: you’ll need a drop-down box to select the Card to display;• SAVE and QUIT (without saving) buttons should always be available (ideally, outsidethe JTabbedPane).• Each window will need buttons to open the other window options: for full marks, if awindow is already open then it just shows it on top of the others, not generate a new one.Obvious GUI errors should be checked—for example, if the user tries to ADD CREDITwithout first selecting a Card from the menu.Sample screens will be added to Blackboard. You do NOT have to follow these designs; theyare simply a suggestion and you are free to design your own screens, as long as your GUIfunctionality is completely clear.• GUI Demo: 1 / 0.5 marks of the GUI functionality will be for a demo in Week 10 / 11;this can be of “click” functionality that isn’t fully connected to the MyTi system. Part E: Other (1.5 marks)As always, marks will be awarded for coding style, documentation/comments, code layoutand clarity, meaningful error and other messages, proper error handling, choice of datastructures and other design decisions. You are encouraged to discuss such issues with yourtutors and lab assistants, or with the coding mentors. Bonus Task (1 mark)Instead of reading/writing from files, read/write from a database using JDBC.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"sqlite","slug":"sqlite","permalink":"http://yoursite.com/tags/sqlite/"}]},{"title":"代写C   IP1  lab1","slug":"page7","date":"2016-10-13T14:13:33.000Z","updated":"2016-10-13T14:19:47.064Z","comments":true,"path":"2016/10/13/page7/","link":"","permalink":"http://yoursite.com/2016/10/13/page7/","excerpt":"","text":"Introduction实现一个Wumpus的teriminal端的游戏（println），输出一个44的表格，有玩家、恶魔、陷阱、金币，玩家遇到恶魔或者陷阱就游戏Lose，捡完所有的金币就游戏Win，同时玩家可以感知恶魔 陷阱 金币的提示。这个作业 时间是12小时，然后比较麻烦的是需求给的不太清楚，需要结合网上的Wumpus游戏和作业需求综合理解，设计一个简易的Wumpus游戏，画出UML图，然后code。RequirementWumpus!Wumpus is a text-based game, where a player moves through a cave system searchingfor gold and trying to avoid bottomless pits and a feared Wumpus. The cave system isa 4 x 4 grid. Each grid element can hold one GameItem. A GameItem is one of: Gold,Pit, Wumpus or ClearGround.The player can move forward, backward, left or right one grid element at a time. Thecave system wraps around so, for example, moving left from position [3][0] causesthe player to appear in position [3][3].The player can sense, but not see, what is in the immediate grid elements around theplayer. A pit will be sensed as a breeze, gold as a faint glitter and the Wumpus as avile smell. In this assignment, the grid will be displayed, but in a real game thisfeature would be disabled.If the player moves onto a pit or the Wumpus, the player dies and the game ends.If the player moves onto gold, the game score increases by one and the gold isreplaced by ClearGround.Implementation:You should write a Game class, which has a 2D array of size 4 x 4 of GameItem calledboard for implementing the Wumpus game described above.Classes Gold, Pit, Wumpus and ClearGround are extensions of class GameItem.GameItem should provide a public method, display(), for use when displaying theboard and a private instance variable for specifying the displayed character. Gold isdisplayed as ‘g’, a Pit as ‘p’, the Wumpus as ‘W’, clear ground as ‘.’ . GameItemprovides a constructor GameItem(char c) for specifying the displayed character.It should not be possible to instantiate an object of GameItem. The player is notimplemented as an object, instead just being represented by Game as private row &amp;column coordinates. The position of the player is displayed by a ‘‘.The items should be positioned randomly over board. There is exactly one Wumpus,at least one, and up to three pieces of gold (chosen randomly) and exactly three pits.The player is positioned over a ClearGround position.Game should provide:? a private method setBoard(), which instantiates objects on the board? a private method display() which will display the board.? a private method senseNearby(), which displays text about what theplayer can sense from the board elements immediately surroundingthe player.? a private method menu() which will provide a menu asking the user tomake a choice from the following and obtain the user input:=====Wumpus====1. Move player left2. Move player right3. Move player up4. Move player down 5Quit? a public method runGame() that will display the board, print out whatthe player can sense, present the menu and process the user’s decisionaccording to the game play described above.The World class only instantiates an object myGame of class Game, and callsmyGame.runGame()You need to show the Pit , Wumpus and Gold when the game is being played and alsoshow the SenseNearby() field as this is testing your ability to utilize polymorphism to callmethod of different classes.GameItem display() method is used to display each game item.Game display() method is used to loop through GameItem array to display the board.You may find the class Random, available in java.util.* useful.For example the following will assign integer variable guess a value from 0..4inclusive.Random randomGenerator = new Random();guess = randomGenerator.nextInt(5);.Submission:? Due date: 9am 10th Oct 2016. Representing 30% of course assessment? This is a group assignment of maximum 3 students (prefer not solo)? You will need to submit 7 electronic files, (Game.java, GameItem.java, Gold.java, Pit.java,Wumpus.java, ClearGround.java and World. Please note these must be Java source files (e.g.World.java), not class files (i.e not World.class). We will not mark a class file.? This assignment needs to be well designed. Please draw the Class diagram of your finalcoding design Please screenshot a full set of successful executions. Save the class diagramand screenshots of executions in a PDF file called Design.pdf.? Weblearn is used for submission. Please zip all source files and Design.pdf into one forsubmission (7z, rar, zipx or other compression format will be penalized).? Remember to include all team members’ names, student IDs and contribution % of eachperson in you submission of Design.pdf in the first page. One submission one group andmultiple submission will be penalized or at your own risk of getting wrong marks.Standard warning:This assignment must be your own work. Any submission found in whole or in part tobe plagiarized will be given zero marks and will not count towards your assessment. Ifan award of zero marks means that you do not pass the assignment hurdle then you willfail the course.Frequent Asked QuestionsQuestion: I was just wondering if the Wumpus will be moving around the board aswell? Or will it be stationary like the position of the pits?Answer: The Wumpus position is randomly generated. In each session, it will not bemove around. It will be stationary like the position of the pits.Question: Is there only 1 pit, 1 gold and 1 Wumpus in the game?Answer: There is exactly one Wumpus, at least one, and up to three pieces of gold(chosen randomly) and exactly three pits. The player is positioned over a ClearGroundpositionQuestion: Hey I’m hoping to submit and wanted to know if the tutor name isimportant, I’m not sure who my tutor is.Answer: The tutor’s name is not important. You can just submit to the default one.Yes, all files need to be zipped into one file. The zip file name is not important asweblearn will auto rename it.Question: Is it like after generate Wumpus, pit and gold, the position of these objectsare settled, no matter where the player moves on the board, these objects are notmoving? Or, each time player moves a step, the position of W,P and G changesrandomly? If player is surrounded by more than one objects, senseNearby() shouldoutput all information of themAnswer: After randomly generate W, P, G in the beginning of the game, these objectsare settled in position. Only replaced by “.” if player walks into it, like gold.Yes, senseNearby() should output all information of up, down, left and right.Question: At starting do I need to display 4X4 Grid along with GameItems like ( 1Wumpus, 3 Pit and 3 Gold).I meant player basically see all gameItems position in thegrid (not like real game) at the beginning of the game.Answer: Yes, you do need to display 4x4 grid along with GameItems at the startingpoint.Question: After each user selection from Menu do I need to display grid along withgameItems position again.Answer: Yes that is why you call display() method in the Game class.Marking Guide:OO Components 12 marksFunctional correct 12 marksDocumentation, Coding Style, Submission requirement, Error checking 8 marks","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"代写C   IP1  lab1","slug":"page6","date":"2016-10-09T06:23:32.000Z","updated":"2016-10-11T15:47:45.631Z","comments":true,"path":"2016/10/09/page6/","link":"","permalink":"http://yoursite.com/2016/10/09/page6/","excerpt":"","text":"Introduction是电路和C语言的结合，电阻串联并联，然后用欧姆定律求总的电流。 实现了三个function，一个欧姆定律function，一个串联function，一个并联function。RequirementAs electrical engineering students, you are familiar with Ohm’s Law (V = IR) and calculating the value of resistors in series (R = R1+R2) and parallel (1/R = 1/R1 + 1/R2). Consider the following circuit:Write a program to calculate the overall current in this circuit.You must use 3 functions: ohm_law(…), series(…), and parallel(…). A 4th function parallel_three(…) is optional. Do not write functions like sum_r1_r2(…).Calculate the current for:int r1=100, r2=200, r3=300, r4=400, r5=500, r6=600, r7=700;(you may copy&amp;paste this into your .c file)The answer should be 124.6 mA.Calculate the current for:int r1=123, r2=234, r3=345, r4=456, r5=567, r6=678, r7=789;The answer should be 107.6 mA.You may find it helpful to use intermediate variables, and to print debugging information.(optional: you can call functions as inputs to other functions, i.e.z = f( g(x,y), h(x,y) );Using this, calculate the current from voltage and Rx values in a single line.)","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写  CMPUT 201","slug":"page5","date":"2016-10-09T06:23:32.000Z","updated":"2016-10-11T02:49:06.314Z","comments":true,"path":"2016/10/09/page5/","link":"","permalink":"http://yoursite.com/2016/10/09/page5/","excerpt":"","text":"Introduction主要是对文件操作、命令行操作等，输入参数错误处理，细节较多，难度的话不大。用到的知识点主要是：argc、fscanf/fprintf、loop、printf、array.RequirementThe following content is from a file named “instance10 001.txt”:#instance10_001.txt#area [0, MAX_X] x [0, MAX_Y]100 100#number of points NUM_PT10#coordinates0 00 9070 100100 5030 3030 7070 7070 3050 5045 0#end of instanceThis file describes 10 points in the two-dimensional plane, within the rectangular area [0,MAX X] ×[0,MAX Y]. Every line starting with a symbol # is a comment; the first non-comment line contains the integer values for MAX X and MAX Y, which are 100 and 100 in this file; the second non-comment line contains the number of points NUM PT, which is 10 in this file; the other non-comment lines present the integer x- and y-coordinates for the points, one in a line (in a non-specific order).In all three assignments, the input files all follow such a file format, except that the values of thevariables can be different and the comment lines can be missing. Each file is called an instance, and the file name convention is to start with “instance”, followed by the number of points in the instance, then an underscore, the index of instance having the same number of points, and lastly the file suffix “.txt”.That is, “instanceXXX YYY.txt” is the YYY-th (may or may not be left-patched with 0’s) instance having XXX points; for example, the above “instance10 001.txt” is the first instance having 10 points.The following list contains the specifications for Assignment #1 (10 marks in total):1. Write a single program with multiple functions, using the command-line options. Suppose yourprogram name is “myprogram”. If a command-line is incorrect, your program prints out the followingand then quits (function #1):&gt;myprogram [-i inputfile [-o outputfile]]2. One function (function #2) of your program is to read in the content of an instance file. To read inthe file “instance10 001.txt” you will execute the command:&gt;myprogram -i instance10 001.txtHere “-i” is the command-line option that indicates the succeeding argument is the input filename.3. Your program will check the correctness of the file content (function #3) during reading. That is, to check that the first non-comment line contains two integer values for MAX X and MAX Y, the second non-comment line contains an integer value for the number of points NUM PT (this number also appears in the filename; your program does not need to validate this, but to always use the number read in from the file), and there are exactly NUM PT more lines, each contains two integer values for the x-and y-coordinates of a point. Your program also makes sure that no coordinate is out of the specified rectangular area, neither there can be duplicate points in the instance.If your program encounters an error, then reports what the error is and quits; otherwise, continue to the next item.4. With the correctness been checked, your program will print (function #4) out the non-comment lines of the input file to the screen, when using the command:&gt;myprogram -i instance10 001.txtIf an output filename is specified, using either of the following commands:&gt;myprogram -i instance10 001.txt -o output.txt&gt;myprogram -o output.txt -i instance10 001.txtwhere “-o” is the command-line option that indicates the succeeding argument is the output filename,then instead of printing to the screen all the non-comment lines of the input file are written into the file “output.txt”.5. If your program is not fed with an input file, that is, by executing the following command:&gt;myprogramthen your program will generate several instances (function #5) through a user interface as follows:Generating random instances …Enter the circuit board size MAX_X MAX_Y:Enter the number of points NUM_PT:Enter the number of random instances to be generated:Assume the user inputs areGenerating random instances …Enter the circuit board size MAX_X MAX_Y: 100 200Enter the number of points NUM_PT: 10Enter the number of random instances to be generated: 7your program will generate in total 7 instances, written into 7 separate files “instance10 j.txt”,for j = 1, 2, …, 7. Each instance has the rectangular area [0,100] × [0,200], and has 10 points.The coordinates of a point is generated uniformly randomly within the rectangular area. And yourprogram makes sure there are no duplicate points within each instance. If it is impossible for yourprogram to generate these files, prints out what an error is and quits. All these files are saved in thecurrent directory executing the command, and your program prints to the screen:instance10_1.txt generatedinstance10_2.txt generatedinstance10_3.txt generatedinstance10_4.txt generatedinstance10_5.txt generatedinstance10_6.txt generatedinstance10_7.txt generated … done!","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Autotest","slug":"Autotest","permalink":"http://yoursite.com/tags/Autotest/"}]},{"title":"Java代写  Intermediate & Object-Oriented Application Development","slug":"page4","date":"2016-10-05T04:21:31.000Z","updated":"2016-10-05T15:40:09.795Z","comments":true,"path":"2016/10/05/page4/","link":"","permalink":"http://yoursite.com/2016/10/05/page4/","excerpt":"","text":"IntroductionJava的基础题目，根据输入分数数据处理统计，格式化输出RequirementThis project is designed to help you practice File Input/Output using Java. It is to be completed and handed in by Thursday, October 6, 2016.Design and write an application to provide a report on student exam scores. The input is provided in the file scores.txt. This file can be found at the course Angel web site. Do not modify the input file in any way.The data layout is a follows:ScoreLast NameFirst NameThe data on the file is comma delimited.The report output should appear as:To receive full credit, you must do the following:1. Use proper File Input/Output techniques.2. Generate a properly formatted report containing a report header with date. The detail lines must include the student name, letter grade, and score. The summary should include the total number of exams, a breakdown of grade distribution, and the average exam score. The output report file name should be report.txt.3. When assigning letter grades, use the following scale: 90 to 100 – A, 80 to 89 – B, 70 to 79 – C, 60 to 69 – D, below 60 - F.Hand in:1. A printed copy of your report.2. A printed copy of your java code3. a written algorithm4. Either email your .java files in a compressed file (.zip)","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Python代写  Assignment 2 COMP9021, Session 2, 2016","slug":"page3","date":"2016-10-01T19:51:31.000Z","updated":"2016-10-02T15:56:56.291Z","comments":true,"path":"2016/10/02/page3/","link":"","permalink":"http://yoursite.com/2016/10/02/page3/","excerpt":"","text":"Introductionpython的比较有难度的作业，需要实现题目的要求的迷宫算法，然后将迷宫算法图形化，生成图像，最后转为PDF格式Requirement1 AimsThe main purpose of the assignment is to let you practice the following programming techniques:• work with command line arguments, read from and write to files;• perform operations on lists of lists, execute tests and repetitions;• organise a program into well defined functions;• design recursive procedures;• gain a first acquaintance with backtracking.2 General presentationYou will design and implement a program that will• analyse the various characteristics of a maze, represented by a particular coding of its basic con-stituents into numbers stored in a file whose contents is read, and• – either display those characteristics– or output some Latex code, to be saved in a file, from which a pictorial representation of themaze can be produced.The representation of the maze is based on a coding with the four digits 0, 1, 2 and 3 such that• 0 codes points that are connected to neither their right nor below neighbours• 1 codes points that are connected to their right neighbours but not to their below ones:• 2 codes points that are connected to their below neighbours but not to their right ones:• 3 codes points that are connected to both their right and below neighbours:A point that is connected to none of their left, right, above and below neighbours represents a pillar:Analysing the maze will allow you to also represent:• cul-de-sacs:• certain kinds of paths:13 Examples3.1 First exampleGiven a file named maze1.txt whose contents is1 0 2 2 1 2 3 03 2 2 1 2 0 2 23 0 1 1 3 1 0 02 0 3 0 0 1 2 03 2 2 0 1 2 3 21 0 0 1 1 0 0 0your program when run as python3 maze.py –file maze1.txt should outputThe maze has 12 gates.The maze has 8 sets of walls that are all connected.The maze has 2 inaccessible inner points.The maze has 4 accessible areas.The maze has 3 sets of accessible cul-de-sacs that areall connected.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.and when run as python3 maze.py -print –file maze1.txt should produce some output saved in afile named maze1.tex, which can be given as argument to pdflatex to produce a file named maze1.pdfthat views as follows.23.2 Second exampleGiven a file named maze2.txt whose contents is022302120222222223111032301322130302312322232330001000100000your program when run as python3 maze.py –file maze2.txt should outputThe maze has 20 gates.The maze has 4 sets of walls that are all connected.The maze has 4 inaccessible inner points.The maze has 13 accessible areas.The maze has 11 sets of accessible cul-de-sacs that are all connected.The maze has 5 entry-exit paths with no intersections not to cul-de-sacs.and when run as python3 maze.py -print –file maze2.txt should produce some output saved in afile named maze2.tex, which can be given as argument to pdflatex to produce a file named maze2.pdfthat views as follows.33.3 Third exampleGiven a file named labyrinth1.txt whose contents is3111111113221122131202330230221122031021312231011120202212302301123022303130203122121212222031103222211031100211111101110your program when run as python3 maze.py –file labyrinth1.txt should outputThe maze has 2 gates.The maze has 2 sets of walls that are all connected.The maze has no inaccessible inner point.The maze has a unique accessible area.The maze has 8 sets of accessible cul-de-sacs that are all connected.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.and when run as python3 maze.py -print –file labyrinth1.txt should produce some output savedin a file named labyrinth1.tex, which can be given as argument to pdflatex to produce a file namedlabyrinth1.pdf that views as follows.4 Detailed description4.1 InputThe input is expected to consist of y dim lines of x dim members of {0,1,2,3}, where x dim and y dim are atleast equal to 2 and at most equal to 31 and 41, respectively, with possibly lines consisting of spaces onlythat will be ignored and with possibly spaces anywhere on the lines with digits. If n is the x th digit ofthe y th line with digits, with 0 ≤ x &lt; x dim and 0 ≤ y &lt; y dim , then• n is to be associated with a point situated x × 0.5 cm to the right and y × 0.5 cm below an origin,• n is to be connected to the point 0.5 cm to its right just in case n = 1 or n = 3, and• n is to be connected to the point 0.5 cm below itself just in case n = 2 or n = 3.The last digit on every line with digits cannot be equal to 1 or 3, and the digits on the last line withdigits cannot be equal to 2 or 3, which ensures that the input encodes a maze, that is, a grid of width(x dim −1)×0.5 cm and of height (y dim −1)×0.5 cm (hence of maximum width 15 cm and of maximumheight 20 cm), with possibly gaps on the sides and inside. A point not connected to any of its neighboursis thought of as a pillar; a point connected to at least one of its neighbours is thought of as part of a wall.We talk about inner point to refer to a point that lies (x+0.5)×0.5 cm to the right of and (y+0.5)×0.5cm below the origin with 0 ≤ x &lt; x dim − 1 and 0 ≤ y &lt; y dim − 1.4.2 OutputIf not run as either python3 maze.py –file filename.txt or as python3 maze.py -print –filefilename.txt (where filename.txt is the name of a file that stores the input) then the program shouldprint out a single line that readsI expect –file followed by filename and possibly -print as command line arguments.and immediately exit. Otherwise, if the input is incorrect, that is, does not satisfy the conditions spelledout in the previous section, then the program should print out a single line that readsIncorrect input.and immediately exit.4.2.1 When the program is run without -print as command-line argumentIf the input is correct and the program is run as python3 maze.py –file filename.txt (wherefilename.txt is the name of a file that stores the input) then the program should output a first linethat reads one ofThe maze has no gate.The maze has a single gate.The maze has N gates.5with N an appropriate integer at least equal to 2, a second line that reads one ofThe maze has no wall.The maze has a single wall that are all connected.The maze has N sets of walls that are all connected.with N an appropriate integer at least equal to 2, a third line that reads one ofThe maze has no inaccessible inner point.The maze has a unique inaccessible inner point.The maze has N inaccessible inner points.with N an appropriate integer at least equal to 2, a fourth line that reads one ofThe maze has no accessible area.The maze has a unique accessible area.The maze has N accessible areas.with N an appropriate integer at least equal to 2, a fifth line that reads one ofThe maze has no accessible cul-de-sac.The maze has accessible cul-de-sacs that are all connected.The maze has N sets of accessible cul-de-sacs that are all connected.with N an appropriate integer at least equal to 2, and a sixth line that reads one ofThe maze has no entry-exit path with no intersection not to cul-de-sacs.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.The maze has N entry-exit paths with no intersections not to cul-de-sacs.with N an appropriate integer at least equal to 2.• A gate is any pair of consecutive points on one of the four sides of the maze that are not connected.• An inaccessible inner point is an inner point that cannot be reached from any gate.• An accessible area is a maximal set of inner points that can all be accessed from the same gate (sothe number of accessible inner points is at most equal to the number of gates).• A set of accessible cul-de-sacs that are all connected is a maximal set S of connected inner pointsthat can all be accessed from the same gate g and such that for all points p in S, if p has beenaccessed from g for the first time, then either p is in a dead end or moving on without ever gettingback leads into a dead end.• An entry-exit path with no intersections not to cul-de-sacs is a maximal set S of connected innerpoints that go from a gate to another (necessarily different) gate and such that for all points p inS, there is only one way to move on from p without getting back and without entering a cul-de-sac.6Pay attention to the expected format, including spaces. Note that your program should output no blankline. For a given test, the output of your program will be compared with the expected output; yourprogram will pass the test if and only if both outputs are absolutely identical, character for character,including spaces. For the provided examples, the expected outputs are available in files that end in_output.txt. To check that the output of your program on those examples is correct, you can redirectit to a file and compare the contents of that file with the contents of the appropriate _output.txt fileusing the diff command. If diff silently exits then your program passes the test; otherwise it fails it.For instance, runpython3 maze.py –file maze1.txt &gt;maze1_my_output.txtand thendiff maze1_my_output.txt maze1_output.txtto check whether your program succeeds on the first provided example.4.3 When the program is run with -print as command-line argumentIf the input is correct and the program is run as If the input is correct and the program is run aspython3 maze.py -print –file filename.txt (where filename.txt is the name of a file that storesthe input) then the program should output some lines saved in a file named filename.tex, that can begiven as an argument to pdflatex to produce a file named filename.pdf that depicts the maze. Theprovided examples will show you what filename.tex should contain.• Walls are drawn in blue. There is a command for every longest segment that is part of a wall.Horizontal segments are drawn starting with the topmost leftmost segment and finishing withthe bottommost rightmost segment. Then vertical segments are drawn starting with the topmostleftmost segment and finishing with the bottommost rightmost segment.• Pillars are drawn as green circles.• Inner points in accessible cul-de-sacs are drawn as red crosses.• The paths with no intersection not to cul-de-sacs are drawn as dashed yellow lines. There is acommand for every longest segment on such a path. Horizontal segments are drawn starting withthe topmost leftmost segment and finishing with the bottommost rightmost segment, with thosesegments that end at a gate sticking out by 0.25 cm. Then vertical segments are drawn startingwith the topmost leftmost segment and finishing with the bottommost rightmost segment, withthose segments that end at a gate sticking out by 0.25 cm.Pay attention to the expected format, including spaces and blank lines. Lines that start with % arecomments; there are 4 such lines, that have to be present even when there is no item to be displayed ofthe kind described by the comment. The output of your program redirected to a file will be comparedwith the expected output saved in a file (of a different name of course) using the diff command. Foryour program to pass the associated test, diff should silently exit, which requires that the contents ofboth files be absolutely identical, character for character, including spaces and blank lines. Check yourprogram on the provided examples using the associated .tex files. For instance, run7python3 maze.py -print –file maze1.txtand thendiff maze1.tex maze1_expected.texto check whether your program succeeds on the first provided example.5 Submission and assessment5.1 SubmissionYour program will be stored in a file named maze.py. After you have developed and tested your program,upload your files using WebCMS. Assignments can be submitted more than once: the last version ismarked. Your assignment is due by October 2, 11:59pm.5.2 AssessmentUp to 8 marks will reward correctness of solutions by automatically testing your program on some tests,all different to the provided examples. Read carefully the part on program output to maximise yourchances of not failing some tests for stupid reasons. For each test, the automarking script will let yourprogram run for 30 seconds. Still you should not take advantage of this and strive for a solution thatgives an immediate output for any input.Up to 2 marks will reward good comments, good choice of names for identifiers and functions, readabilityof code, simplicity of statements, compactness of functions. This will be determined manually.Late assignments will be penalised: the mark for a late submission will be the minimum of the awardedmark and 10 minus the number of full and partial days that have elapsed from the due date.The outputs of your programs should be exactly as indicated.5.3 Reminder on plagiarism policyYou are permitted, indeed encouraged, to discuss ways to solve the assignment with other people. Suchdiscussions must be in terms of algorithms, not code. But you must implement the solution on yourown. Submissions are routinely scanned for similarities that occur when students copy and modify otherpeople’s work, or work very closely together on a single implementation. Severe penalties apply to asubmission that is not the original work of the person submitting it.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"}]},{"title":"代写java COSE60507  Algorithmics","slug":"page2","date":"2016-09-30T17:52:31.000Z","updated":"2016-10-02T15:51:22.652Z","comments":true,"path":"2016/10/01/page2/","link":"","permalink":"http://yoursite.com/2016/10/01/page2/","excerpt":"","text":"Introduction实现binary sequence search tree（BSST）以及实现其升级版本AVL Tree，评分点比较详细，需要做对比分析以及实现，代码实现不能使用library，最终提交code和report，应客户要求，分别用Java、C#、C、C++四种语言进行了实现。RequirementScenario: GlobalQuiz is a popular mobile multiplayer quiz game. Each registered player has a unique numerical id. The GlobalQuiz server maintains a list in memory of the players currently playing the game. This list can be considered a data dictionary, where the numerical id is the key, and the player details is the data.The data dictionary adt implements the following operations: proc insert ( int key) ;pointer fun find( int key ) ;proc delete( int key );Currently the player list is stored as list in an array, ordered by key. When a player logs on to the game, their details are added to the back of the list and sifted to the correct position using one pass of an insertion sort. When the server needs to access a player’s details, it conducts a binary search. When a player leaves the game, their details are deleted from the list, and the remaining entries are moved down to fill the gap.GlobalQuiz has become very popular, with thousands of players connected at once. Its makers would like to explore whether there is a more efficient way of storing the player details. They would like to use a tree-like structure, and are considering a binary sequence search tree (BSST).Task: Original List Implementation: Write a program implementing the list, as described above, in a language of your choice from Java, C#, C++ or C. Your program should contain one class implementing the ADT, and a main method or GUI which allows each method to be tested. Your implementation simply needs to store a list of integers – the keys. [15 marks]State and justify the big-O efficiency of each method in the original list implementation. [5 marks]BSST proposal Describe and discuss, using diagrams, high-level pseudocode and a big-O analysis of each method, the advantages and disadvantages of using a Binary Sequence Search Tree (BSST) to implement the ADT. [15 marks]A better tree implementation Choose either the Order 2 B-Tree or an AVL Tree, and explain, using diagrams, high-level pseudocode, and big-O analysis, how it could be implemented and its advantages and disadvantages compared to the BSST proposal. [15 marks] Write a program implementing your chosen data structure in the language of your choice. [20 marks]Conclusion Summarise your analysis in a table, showing the big-O efficiencies of each of the three operations (insert, find and delete) for each of the 3 implementations. Which implementation do you recommend for the GlobalQuiz scenario and why? Would the recommendation be different for different usage scenarios? [10 marks]Further Discussion Research and describe further implementations (such as other types of tree) that GlobalQuiz could consider. What are their advantages and disadvantages? [15 marks]Referencing and readability of report [5 marks]","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"JAVA代写 CS302 program 1","slug":"page1","date":"2016-09-30T07:55:30.000Z","updated":"2016-10-02T15:51:01.939Z","comments":true,"path":"2016/09/30/page1/","link":"","permalink":"http://yoursite.com/2016/09/30/page1/","excerpt":"","text":"Introduction 此java项目是在week1和2的基础上完成week3，功能不难，不过内容很繁琐时间急，包括了详细的测试，最后提交到网站服务器测试，比较麻烦的是每次提交后得一个小时之后才能继续提交，客户要求时间为6小时，最后开发时间为5小时，其中coding了2小时、服务器测试提交了3次，满分。RequirementP1: Review QuizFor this assignment, you will create a program that will ultimately allow its users to submit and answer multiple choice review questions in preparation for the CS302 Exams. This assignment is organized into three weekly milestones (Week1, Week2, and Week3). At the end of each milestone, you will submit code and receive feedback on your progress through zyLabs. Your learning goals for this assignment include:Incrementally develop a complete Java application from a high-level specification.Design algorithms that account for basic computer input, output, memory, and processing.Iteratively test and debug code throughout the development process.Document code with comments and appropriate styling according to the guides.Build expressions using basic operators: logical, arithmetic, and string-based.Distinguish different types of data, and identify the most appropriate types for all variables.Utilize conditional and looping flow control, both in isolation and in nested structures.Utilize the print and println methods in System.out, to display formatted output.Utilize a single Scanner object to read input from the console.Perform input validation on the user’s input.Your grade for this program includes:Weekly Milestone Progress36% Program compiles and passes the weekly automated tests in zyLabs. Each weekly milestone is includes three automated tests, and each of these tests are each worth 4% of your total program grade.Final Program Functionality44% Program compiles and passes additional automated tests for both functionality and conformance to the program specification. For example, your program should avoid using features that have not yet been covered in previous zyBooks chapters including: Arrays, User-Defined Methods, Additional Classes, Exception Handling, Packages (outside the default), Etc.Style and Structure10% Program uses appropriate variable names, spacing, and control structures in conformance with the CS302 Style Guide, and to make code easier to read.Documentation10% Program is appropriately commented in a way that is meaningful for readers who understand Java, but are not familiar with the logic or purpose of your code. These comments should conform to the CS302 Commenting Guide.Each CS302 student is expected to individually complete this assignment (this is NOT a team assignment). While you are encouraged to discuss general algorithms, and the behavior or syntax for specific java programming constructs, you are NOT allowed to share code for this assignment in any form. All of the code that you submit with this assignment should either be conceived-of and manually typed into the computer by you, or it should be provided for you through this website. AVOID leaving any code in widely accessible places, like: on an unsecured computer or on a widely accessible (non-password protected) website. Remember, all piazza posts that include assignment code or fragments must be marked as private so they are only visible to the poster and the course’s instructional staff.Week1 – Ask Me One QuestionCreate a new Java Project in Eclipse. You can name this project whatever you want, but Program1 is a sensible name. Next download theReviewQuiz.java and P1.jar files (try right-clicking to “Save Link As…” these files). Copy this .java file into the src folder within your new Java project’s folder, and copy this .jar file into your project folder itself (outside of the src folder). You may need to select Refresh from the File menu (or press F5), if you cannot immediately see these files in the Package Explorer within Eclipse. In order to use the provided P1.jar file, you’ll need to right-click on this file within the Package Explorer and select “Add to Build Path…” from the “Build Path” sub menu. Your entire program for this assignment should be implemented within the main method of this ReviewQuiz.java file. Remember to follow the course Style Guide and Commenting Guide as you develop this program. Also remember to regularly test (compile and run) your program as you develop it.As soon as your program begins, it should display the following welcome message:Welcome to the CS302 Review Quiz!And just before your program ends, it should display the following closing message (both of these messages should include the demonstrated row of equals symbols):Thank you for using the CS302 Review Quiz!After displaying the welcome message, your program should ask the user to enter their email address to identify them as a particular user:Please enter your email address: jane.doe@wisc.eduNote that the orange text above indicate text that was entered by the user. Although your program will not use this information until the next milestone, your program should read in this email address and store it for later use.Before asking the user a question, you will solicit advice on which sections the user is interested in reviewing. The P1.getSections() method evaluates to a String that includes a list of numbered section names. For example:1 String sectionText P1.getSections();After printing out this list, your code should prompt the user for their choice, read in their integer response, and store it for later use. Note that if adding this P1.getSections() instruction to your code produces an error stating that P1 cannot be resolved, it is likely that the P1.jar file was not correctly added to your project, and you should double check that you correctly followed the instructions in step 0. If all is well, this part of your program should look like the following when it is run:SECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1Note: Your program should only use a single Scanner object to read all user input. Creating and using multiple “new Scanner(System.in)” objects produces behavior that is not defined in the Java specification, could cause trouble for some auto grading tools, and is likely to lose you points on this assignment. So don’t do it :).Next we’ll present the user with their first question. The P1.getQuestion() method should evaluate to a String containing a question for the user. But if you try to retrieve this string before choosing a section that there are questions within, you will see the following error message. Try this out now!Exception in thread “main” java.lang.RuntimeException: No questions were available for the selected sections.This P1.getQuestion() method is stateful, which means that it may evaluate to different String values depending on what code ran before it. In order to get a question from the user’s chosen section, we must first call P1.toggleSection( 1 ); This will cause P1.getQuestion() to resolve as a String containing a question from section 1. You should replace this 1, with an expression that evaluates to the section that was chosen by the user, so they instead see a question from the section that they have chosen. When the user chooses a section that there are no questions for, your program will crash showing the above message (this will be fixed in the last milestone). Otherwise, they should see a question from the section that they previously selected. Note that the provided questions (you will eventually be able to add more questions of your own) are within sections 1 and 2.Update 9/13: The P1.toggleSection method should be called immedaitely after reading in the user’s section choice. If you print anything out to the screen between reading in the user’s choice and calling P1.toggleSection, your code will run into problems with one of the automated milestone1 tests.Now it is time to read in the user’s answer to the previous multiple choice question. This question should always be a letter: usually A, B, C, … but T, F and other single letter answers are possible. After they answer this question, they should see the correct answer displayed on the screen. You can retrieve the correct answer by using the method P1.getAnswer() which returns this answer as a single char. Here is what a complete run of this program might look like at this point (note the expected vertical whitespace in this example):Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1[T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: TThe correct answer is: TThank you for using the CS302 Review Quiz!Review the code that you have written so far, and after you are satisfied that it conforms to the above specifications, submit a copy of your working ReviewQuiz.java code along with this P1.java placeholder file (since we cannot updload jar files) to zyBooks. Note that there should not be any need to add this P1.java to your Eclipse project, and that doing so is likely to create name conflicts with the P1.jar file that you are already using. If the automated tests detect any errors with your code, you can fix your code and resubmit it as many times as you’d like (however, you’ll have to wait 60 minutes between submissions). You will be awarded points based on your submission that earns the most points prior to the due date: 8:00am on Thursday, September 15th.Week2 – As You WishStart by extending your program from Milestone1 to ask the user to enter a new review problem after they answer the question and before the program’s closing message is displayed. Here’s an example of what these new prompts and user-input should look like:Enter a multiple choice question (in one line of text):[T]rue or [F]alse, statements in Java end with a semicolon.Enter the correct answer for this question (one letter): TSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 1There are just a couple more steps before this question that the user has answered is added to their local database. First, your code should give the user a chance to proof read their question and either confirm or deny that it should be added.Please proofread your problem and confirm you would like to submit it (Y/N): YThank you for submitting this new problem.A response of Y should result in the feedback demonstrated above, and a call to the method P1.submitProblem() which takes four arguments between the parentheses:1 P1.submitProblem( q, a, s, e );The “q” above should be replaced with the String question entered by the use, the “a” with their char answer as an upper-case letter, the “s” with their int section number, and the “e” with their String email address. After this method is called, the final step required to commit this new question to the local database is to call the method P1.done(). You can call this method once at the end of your program, after the closing message is displayed. It may be helpful to leave this line commented out as you work, to avoid adding extra questions to the database. Otherwise you may find it helpful to occasionally delete the file within your project folder that is named “db” to refresh your local question database to contain only the default provided questions.When the user enters anything other than the letter ‘Y’ (either upper-case or lower-case) in response to the confirmation prompt above, your program should NOT call P1.submitProblem() and instead of displaying the “Thank you for submitting this new problem” response demonstrated above, it should display the following:Problem was NOT submitted.Update 9/16: Note that the zyBooks tests will expect that you have converted the answer letter that was entered by the user into upper-case (if it was entered in lower-case) before calling the P1.submitProblem() method.Next we’ll revisit our question and answer code to provide different feedback based on whether the user’s answer is correct. When they enter the correct answer, your program should print out the following response:That’s correct!!!and when the enter an incorrect answer your program should display the correct answer:The correct answer is: TNote that this is only what the prompt should look like when the correct answer is T, and the user has answered something other than T. Both lower-case and upper-case letter T inputs should be treated as correct.Now let’s give the user a chance to rate the difficulty of the question that they just answered, and to see how difficult others have found this questions. The prompts and user-input for this should look as follows (and should be presented to the user after they have seen whether their answer was correct or not):Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.25Of course the specific values entered and displayed here may vary. And as you may have guessed by now, there are a couple of provided methods that you can use to submit and check these user ratings: P1.submitRating(2) to submit a rating of 2 (or change this 2 to match the user’s input) and P1.getRating() to retrieve the current question’s average rating (which was 2.25 in the example above).As the final step in this milestone, we’ll add some menu options for the user to choose whether they would like to 1) Answer a Question, 2) Submit a Problem, or 3) Quit the program. The user will enter A, S, or Q to choose between these options, and then only answer a question or submit a new question before seeing the final closing message. When the user chooses to Quit, they should immediately see the closing message. And when the user enters anything other than an A, S, or Q (or a, s, or q), they should see a message stating the following before the program’s closing message and end:Sorry, but that menu choice was not recognized.Here are a couple of sample runs of the program at this point to see everything working together, and also to demonstrate the required spacing (notice that each main menu option is indented by four spaces):Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: aSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1[T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: FThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.2Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: SEnter a multiple choice question (in one line of text):This is a pretty silly example: A) wrong, B) incorrect, C) correct, D) bad answerEnter the correct answer for this question (one letter): CSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 2Please proofread your problem and confirm you would like to submit it (Y/N): yThank you for submitting this new problem.Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: WSorry, but that menu choice was not recognized.Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: qThank you for using the CS302 Review Quiz!After reviewing your code and convincing yourself that it conforms to the above specifications, submit your ReviewQuiz.java file along with this placeholder P1.java file to zyBooks P1 Milestone2. If the automated tests report any errors, attempt to debug your code and submit it again. You are allowed one feedback submission per hour. Your results on these tests will be recorded for points at 8:00am on Thursday, September 22nd.Notice that we have not added very much code to handle unexpected user input. Giving the user another chance to enter a number instead of crashing when the user types in two to select section 2 would be nice. It might also be nice to ensure that they only select section numbers that are within the correct range. Another possibility would be ensure that the email address entered by the user actually conforms to the format of a proper email address. For this programming assignment, we will not be testing your program against these kinds of erroneous inputs. However we certainly encourage you to think about how you could change you code to better deal with these kinds of potential problems. If you would like to try implementing some of these types of changes, please make a separate copy of your work to experiment with. This should help us avoid unanticipated problems that our automated grading tools might encounter with these kinds of customizations.Week3 – More, More, MoreOur Milestone2 ReviewQuiz.java program currently only presents the user with one question when it is run, so we’ll start this section by extending that functionality to present the user with multiple questions. Replace the “[A]nswer a Question” option in your program’s main menu with these two new options: [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers)After selecting either of these options, the user will be asked to choose a section to be asked questions from, and will then be repeatedly: presented with a question, given feedback on it’s correct answer, and then prompted to rate that question and be shown it’s current rating (based on the code you wrote in milestone2).The “[R]andom Sample Quiz” option will ask the user a fixed number of questions. This number is specified by the user in response to the following prompt, which should be displayed after the section selection, and before the first question is asked:Enter the number of problems to review: 3The “[P]roficiency Quiz” option will instead ask the user as many questions as it takes for them to answer a specific number of those questions correctly. The number of correct answers that will end the program will be input using the following prompt (again, between the section selection and first question):Enter the number of correct answers needed to stop: 2Note that every time you call the P1.getQuestion(), P1.getAnswer(), and P1.getRating() methods, you retrieve the current question, answer, and rating. Each time you call the method P1.gotoNextProblem(), these other methods will retrieve the question, answer, and rating for a different problem, so it will be helpful to call this between questions.You should also display an increasing problem number in front of each question, so that the output of your program matches the following:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: rSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a question from: 1Enter the number of problems to review: 31. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: fThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.16666666666666652. What characters sequence denotes the start of a comment: A) # B) // C) ; D) Enter your answer: bThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 3.53. What value does the following expression evaluate to: 3 / 2. A) 1 B) 1.5 C) 2Enter your answer: CThe correct answer is: APlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 4The average rating for this question has been: 3.75Thank you for using the CS302 Review Quiz!Now that our user is answering multiple questions, we’d like to allow them to select multiple sections to draw those questions from. Update the section selection code to present the user with multiple prompts until they enter -1 and have selected sections with at least one question in the database. There is a method called P1.questionsAvailable() that evaluates to true when the selected sections contain at least one question. Only call this method when the user enters -1 to determine whether that input should end the section selection loop. Also notice that the P1.getSections() methods already displays selected sections with square brackets around them. Here’s an example of the prompts and inputs:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: pSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 1SECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 2SECTIONS: [1.The Basics], [2.Conditionals], 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 3SECTIONS: [1.The Basics], [2.Conditionals], [3.Loops], 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): -1Enter the number of correct answers needed to stop: 11. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: TThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 2.142857142857143Thank you for using the CS302 Review Quiz!Update 9/22: Note that this ability to select multiple sections should be availabe through both the Random Sample Quiz and Proficiency Quiz options.Next we’ll allow the user to enter multi-line questions when they submit a new question. We’ll rely on the convention that the user enters the word END on a line by itself to indicate that the previous lines contain their entire question. Here is an example of this functionality with prompts:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: sEnter a multiple choice question (including the answer options):Type END on a line by itself to finish question.What does the following code print out to the screen when it is run? if( false || true ) System.out.println(“A”); else System.out.println(“B”); System.out.println(“C”); A) A B) B C) C D) AB E) AC F) BC G) ABCENDEnter the correct answer for this question (one letter): ESECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 2Please proofread your problem and confirm you would like to submit it (Y/N): yThank you for submitting this new problem.Thank you for using the CS302 Review Quiz!As the final step in this milestone you will change this program to present the user with a new menu after processing any menu choice except [Q]uit. This will allow the user to take as many quizzes and submit as many problems as they’d like within a single execution of the program. Note that when multiple quizzes are taken in a single execution, the default section selection from one quiz will persist as the default selection for the next quiz. Thisis the expected behavior for your program, so you don’t need to worry about tracking or clearing these old selections. Here is a final example to demonstrate this functionality with prompts and user input:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: GSorry, but that menu choice was not recognized.MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: PSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 1SECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): -1Enter the number of correct answers needed to stop: 11. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: FThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 2.02. What characters sequence denotes the start of a comment: A) # B) // C) ; D) Enter your answer: bThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 4The average rating for this question has been: 2.6666666666666665MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: sEnter a multiple choice question (including the answer options):Type END on a line by itself to finish question.Oops, I don’t really want to submit this…ENDEnter the correct answer for this question (one letter): NSECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 1Please proofread your problem and confirm you would like to submit it (Y/N): nProblem was NOT submitted.MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: qThank you for using the CS302 Review Quiz!Congratulations on completing Program 1 for CS302! As with the previous milestones, you should submit your final ReviewQuiz.java file along with this placeholder P1.java file via zyBooks for feedback on the Week3 Milestone features. If the automated tests report any errors, attempt to debug your code and submit it again.After this program has been completed, we’ll release a replacement for the P1.jar file that you have been using up to this point. Instead of storing and retrieving problems locally from your computer, it will store and retrieve problems from the cloud so that you can share these review materials with your classmates.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Autotest","slug":"Autotest","permalink":"http://yoursite.com/tags/Autotest/"}]}]}