{"meta":{"title":"留学生Computer Science编程作业代写","subtitle":"专业 高效 原创","description":null,"author":"csyoyo","url":"http://yoursite.com"},"pages":[{"title":"","date":"2016-08-27T05:37:39.600Z","updated":"2016-08-27T05:37:39.536Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2016-09-06T11:13:18.000Z","updated":"2016-09-06T12:21:41.289Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"留学生Computer Science编程作业代写","slug":"mainpage","date":"2111-01-11T07:55:30.000Z","updated":"2016-09-19T09:59:54.153Z","comments":true,"path":"2111/01/11/mainpage/","link":"","permalink":"http://yoursite.com/2111/01/11/mainpage/","excerpt":"","text":"团队介绍 Team很小，运转高效，我们不是代写机构，而是一个高效协作的团队，团队成员有的擅长java，有的擅长python，有的擅长数据结构，有的擅长机器学习， 有的擅长C/C++，有的擅长ios/android。通过自己设计的任务分发系统，我们可以在15分钟内迅速准确评估时间和难度，完成之后还有互相之间的code review。 相比与代写机构的黑心，个人代写的不规范(我们也是个人代写发展而来)，我们团队经过不断的调整进步，具备了代写机构规范的流程优势， 并且价格合理，具备了个人代写的一对一，并且熟练了解代写流程规范。 服务内容 代写美国、加拿大、英国、澳洲或者其他国家的Computer Science编程作业，范围包括Assignment、Homework、Lab、Project、Final甚至App。 我不会给你看不懂的高逼格code，我的编程风格都是模仿你的slides和notes，为你量身打造，绝无超纲代码。 特别擅长各种疑难作业，做过大量Game Design、Operating System、Database System, Web Design，得分几乎全A(90%)。 擅长范围 我们擅长范围包括但不限于： C C++ Java Python Php Android Ios Js Jsp Qt MFC J2ee Sql Matlab Ssh Assignment/Project/Lab/作业/编程/辅导 Data structure/数据结构/机器学习/定制/制作 Linux/Windows/Mac socket Algorithom/算法 网站设计 Web开发 Operating system/操作系统 Computer Science Everything/程序设计/app/ 质量保证 开发之前会详细问你的开发语言、系统环境、软件版本、测试方式(本地测试、服务器自动测试)、是否需要documention、deadline(精确到小时) 沟通好时间后，我们不会临着deadline给你code。一般都是提前足够的时间给客户反馈一个版本的code，如果有问题需要反馈修改也有充足的时间。 除了code会免费提供给客户一个运行说明word，即使客户不知道如何运行，根据说明word也可以运行验证code。 带checker/tester的必全过，带得分点的必全做，能顺手做掉的bonus也帮你做。 小作业24小时内完成，大作业24-72小时，绝不浪费你的slip day。 代码肯定是手写原创，不违反honor code，我给你的代码属于reference。 免费提供售后服务，包括代码运行，讲解答疑。 价格优势 价格通常在$100 USD以上，只有部分Lab可能低于这个价格。 真正的无中介费用，绝不漫天要价，欢迎你货比三家，支持PayPal/支付宝/微信支付。 通常先收取一半定金，写好之后验收code之后付尾款。 我给你的不止是一个答案，还有我作为工程师的经验，编程方法和技巧。 联系方式 邮箱 : cscoderman@gmail.com (请附带作业要求) 微信 : cscoderman 联系时，请简单或详细地说明你的要求+微信昵称(如大二，Algorithm and Data Structure)，便于我们快速报价与沟通。","categories":[],"tags":[]},{"title":"Python代写：Introduction to Computer Programming with Python","slug":"page41","date":"2016-11-16T01:11:23.000Z","updated":"2017-01-04T04:01:50.296Z","comments":true,"path":"2016/11/16/page41/","link":"","permalink":"http://yoursite.com/2016/11/16/page41/","excerpt":"","text":"Introduction一个天气数据的处理系统，需要用到array，在线的API接口，数据异常处理等等，根据获取的天气数据做相关处理（增删改查统计等等），最后还有sample run的示例辅助测试。RequirementCS 8: Introduction to Computer Programming with PythonSpring 2016Project 2Assigned: Wednesday, February 24 Due: Tuesday, March 29 11:59 PMOverviewBlackjack, or 21, is the most widely-played casino banking game in the world. The goal isto build a hand of cards that values as close to 21 as possible without exceeding it. First,here is the terminology used in the game. Hit: Take another card for your hand Stand: Stop taking cards Bust: Exceed a value of 21 in your hand Push: Tie with the dealerThe cards are valued as follows.Rank ValueAce 11 or 12–10 Face valueJack, Queen, King 10Of particular note, an Ace can be considered either value 11 or 1. Given rational strategy,it will be considered 11 unless that will cause a bust, in which case it will be considered 1.In each hand, play proceeds as follows.1. The dealer takes one card, which the player can see.2. The player is given two cards.3. The player has the option to hit, or take one additional card. The player can hit asmany times as desired, until they reach or exceed 21, or decide to stand (stop takingcards).14. If the player did not bust (exceed 21), the dealer takes cards until she reaches 17 orhigher (i.e., the dealer will hit on 16 or fewer points, and stand on 17 or more points).5. If the player busts, she immediately loses, and the dealer will not draw more cards.If the dealer busts, the player wins. If the player and dealer have the same total, it isa push. Otherwise, the winner is the one with higher point total.6. If the player loses, she loses her bet. If the player wins, she wins her bet. If the handis a push, the bet is returned (i.e., no gain or loss).In this project, you will program a functional Blackjack game by first coding the basic logicof the game, then gradually adding features.2Lab Session 1, Feb 24–Feb 25Activity 1In this activity, you will code the logic of the game using simplifications, rather than tacklinga full Blackjack game all at once. Instead of selecting a card and then determining its value,you will instead randomly generate a card’s value from between 2 and 11. You will alsoassume that the bet is always $25.Note that randomly generating a card’s value is not an accurate way to simulate draws. In areal deck, there are more cards worth 10 than there are, e.g., cards worth 5. Consider otherways in which this version of Blackjack will not be exactly the same as real-life Blackjack.You will add features to make the game more realistic in later activities.1. Write a main() function that asks the user for their name, and initializes their startingmoney to $1,000.2. Write a loop in main() that will play a hand of blackjack, then ask the user if they wantto play another hand (as long as they still have money to bet). You will play a handby calling the play_hand(name) function (which does not yet exist). This functionshould return the change in the player’s money (positive if they win, negative if theylose), and you should use this value to update their amount after each hand.3. Write the play_hand(name) function. In this function, you will need to track therunning total of the cards that the dealer and player have been dealt. Deal one cardto the dealer and two to the player. Prompt the player for their action (hit/stay)until they reach or exceed 21, or choose to stay. Then, deal cards to the dealer untilthey reach or exceed 17. Determine the winner, and return the change in the player’smoney (i.e., 25 if they won, -25 if they lost, and 0 if the hand was a push).Here is an example run after completing this stage:Name? BillBill has $1,000Dealer received card of value 2Bill received card of value 9Bill received card of value 5Dealer total: 2Bill total: 14Move? (hit/stay) hBill received card of value 6Dealer total: 23Bill total: 20Move? (hit/stay) sDealer received card of value 4Dealer total: 6Bill total: 20Dealer received card of value 5Dealer total: 11Bill total: 20Dealer received card of value 10Dealer total: 21Bill total: 20Dealer winsBill has $975Play again? (y/n) yDealer received card of value 4Bill received card of value 3Bill received card of value 7Dealer total: 4Bill total: 10Move? (hit/stay) sDealer received card of value 2Dealer total: 6Bill total: 10Dealer received card of value 5Dealer total: 11Bill total: 10Dealer received card of value 5Dealer total: 16Bill total: 10Dealer received card of value 6Dealer total: 22Bill total: 10Dealer bust4Bill has $1,000Play again? (y/n) yDealer received card of value 3Bill received card of value 11Bill received card of value 10Dealer total: 3Bill total: 21Dealer received card of value 7Dealer total: 10Bill total: 21Dealer received card of value 3Dealer total: 13Bill total: 21Dealer received card of value 11Dealer total: 24Bill total: 21Dealer bustBill has $1,025Play again? (y/n) nOnce you have completed these steps, show your TA your program.5Activity 2In this activity, you will improve the drawing of cards. You will use the strategy we’velearned in lecture for encoding information in a way that the computer can store it: trans-form the information into a number. In this activity, use an integer to store each card, andrepresent them as follows.Rank int encoding Point valueAce (A) 1 112 2 23 3 34 4 45 5 56 6 67 7 78 8 89 9 910 10 10Jack (J) 11 10Queen (Q) 12 10King (K) 13 10Now, you can randomly generate a card from Ace to King, rather than randomly generatinga value. You will modify your program so that you can determine how to display each card,as well as what value it has.1. Write a function value_of_card(card) that takes as a parameter an int-encodedcard as described above (i.e., an int value from 1 to 13) and returns its point value asdescribed above.2. Write a function string_of_card(card) that takes as a parameter an int-encodedcard as described above and returns the card’s string value for printing during thegame.For example, string_of_card(5) should return “5”, and string_of_card(12) (aQueen) should return “Q”.3. Modify the play_hand function to generate a random card, rather than a random cardvalue. When adding a card to the player or dealer’s total, use value_of_card(card),and when displaying a card, use string_of_card(card).Here is an example run after completing this stage:Name? Bill6Bill has $1,000Dealer received 2Bill received ABill received KDealer total: 2Bill total: 21Dealer received ADealer total: 13Bill total: 21Dealer received 9Dealer total: 22Bill total: 21Dealer bustBill has $1,025Play again? (y/n) yDealer received KBill received 6Bill received QDealer total: 10Bill total: 16Move? (hit/stay) hBill received 6Dealer total: 10Bill total: 22Bill bustBill has $1,000Play again? (y/n) nOnce you have completed these steps, show your TA your program.7Lab Session 2, Mar 2–Mar 3Activity 3In this activity, you will save the player’s game and allow them to resume. You will use fileI/O as discussed in lecture. You will save and restore the player’s name and money total.1. Write a function save(name, money) that saves the user’s name and money to thefile blackjack.save.Hint: In order to restore this information successfully, you should save these twopieces of information on separate lines of the file.2. Write a function restore() that attempts to read the user’s name and money fromthe file blackjack.save. If it is successful, it should return these values as a string andan int, respectively. If it fails, it should return ‘’, -1 to indicate it was unsuccessful.3. Modify function main() to call save(name, money) before quitting.4. Modify function main() to call restore() when starting up. If the load was successful,ask the user if they would like to resume or start a new game. If it was unsuccessful,simply start a new game.Here is an example run after completing this stage (nothing has changed yet, because thereis no saved game to load):Name? BillBill has $1,000Dealer received KBill received QBill received 3Dealer total: 10Bill total: 13Move? (hit/stay) hBill received 4Dealer total: 10Bill total: 17Move? (hit/stay) hBill received ADealer total: 10Bill total: 28Bill bust8Bill has $975Play again? (y/n) yDealer received QBill received JBill received 6Dealer total: 10Bill total: 16Move? (hit/stay) hBill received JDealer total: 10Bill total: 26Bill bustBill has $950Play again? (y/n) nHere is an example of the load functionality when running the program again:Resume saved game ‘Bill’? (y/n) yBill has $950Dealer received KBill received 7Bill received QDealer total: 10Bill total: 17Move? (hit/stay) sDealer received KDealer total: 20Bill total: 17Dealer winsBill has $925Play again? (y/n) nFinally, here is an example of starting a new game even though a saved game exists:9Resume saved game ‘Bill’? (y/n) nName? PhilPhil has $1,000Dealer received 4Phil received 3Phil received JDealer total: 4Phil total: 13Move? (hit/stay) hPhil received 10Dealer total: 4Phil total: 23Phil bustPhil has $975Play again? (y/n) nOnce you have completed these steps, show your TA your program.10Activity 4In this activity, you will allow the player to change their bet before each hand.1. Write a function input_bet(bet, money) that accepts parameter for the current betand amount of money available, and returns the bet input from the user. Performinput validation on the following requirements:The bet must be a whole number, cannot be negative, and cannot be greater than theavailable money. If the user presses enter without typing anything, use the existingbet value (if valid). The user can bet 0, which means they want to quit the game.2. Modify main() to call input_bet(bet, money) before every hand instead of prompt-ing for y/n for another hand. If the user bets 0, save their game and quit.Now, you will need to pass the current bet to the play_hand function, and modifythis function so it returns the correct change in the player’s money when they win orlose.Here is an example run after completing this stage:Name? BillBill has $1,000Bet? (0 to quit, Enter to stay at $25) 1500Cannot bet more than $1,000Bet? (0 to quit, Enter to stay at $25) FiftyBet? (0 to quit, Enter to stay at $25) 500Dealer received JBill received 10Bill received 10Dealer total: 10Bill total: 20Move? (hit/stay) hBill received QDealer total: 10Bill total: 30Bill bustBill has $500Bet? (0 to quit, Enter to stay at $500)Dealer received ABill received 5Bill received K11Dealer total: 11Bill total: 15Move? (hit/stay) hBill received ADealer total: 11Bill total: 26Bill bustBill has $0Game overOnce you have completed these steps, show your TA your program.12Lab Session 3, Mar 16–Mar 17Activity 5In this activity, you will improve the card drawing functionality even further. In real life,you cannot draw 5 Aces in a single hand. However, if we’re only generating random cards,this is possible. Therefore, for each hand, you will create a deck of cards, shuffle it, anddraw from it.1. Write a function new_deck() that returns a list containing 4 Kings, 4 Queens, etc.using the integer encoding from Activity 2.Hint: Use nested loops.2. Write a function shuffle_deck(deck) that returns a shuffled version of the deck.Hint: Use the random module.3. Modify play_hand() so that it creates and shuffles a deck at the start of each hand.Instead of randomly generating cards, “draw” them from the shuffled deck. Be surethat you do not draw the same card from the deck multiple times (e.g., by removingthe card you draw from the deck).Unless you know how to count cards, the output after this activity will not look verydifferent. However, your distribution of cards will be more realistic. You should run yourprogram to ensure that you are still getting random-looking cards, and not drawing thesame cards over and over again.Once you have completed these steps, show your TA your program.13Activity 6In this activity, you will modify your encoding of cards so that it stores both the rank (A–K)and the suit (♣, ♦, ♥, ♠).1. Modify new_deck() so that it creates a list of cards where each card is a tuple of size2. Store the int value first, then a string value representing the suit.Hint: You may be able to copy and paste the suit symbols directly into your texteditor. If not, you can use the following escape sequences to include the suit symbolsin a string literal in Python.Suit Escape sequence♣ \\u2663♦ \\u2662♥ \\u2661♠ \\u26602. Modify value_of_card to account for the change in encoding of cards.3. Modify the string_of_card to print both the rank and suit of the card.Here is an example run after completing this stage:Name? BillBill has $1,000Bet? (0 to quit, Enter to stay at $25) 100Dealer received 10♦Bill received 6♦Bill received 2♠Dealer total: 10Bill total: 8Move? (hit/stay) hBill received A♠Dealer total: 10Bill total: 19Move? (hit/stay) sDealer received A♣Dealer total: 21Bill total: 19Dealer wins14Bill has $900Bet? (0 to quit, Enter to stay at $100) 0Once you have completed these steps, show your TA your program.15Lab Session 4, Mar 23–Mar 24Activity 7In this activity, you will modify your program to improve its output. Instead of keepingtrack of only the total points of the player and dealer, you will keep track of their full handas a list of cards.1. Write function string_of_hand(hand) that uses the string_of_card(card) func-tion to return a string of an entire hand (encoded as a list of cards).2. Write function value_of_hand(hand) that uses the value_of_card(card) functionto return the value of an entire hand of cards.3. Modify the function play_hand so that it keeps track of the hands of the player anddealer, rather than just the total points for their hand. Then modify your output sothat it prints the hands instead of individual cards.4. Modify your function value_of_hand(hand) so that it correctly adds the value ofAce.Recall the rule: if an Ace of value 11 would make the hand bust, it is considered tobe value 1 instead. Thus, an Ace alone is worth 11, an Ace and a King is worth 21,and two Aces is worth 12.Hint: It may help to create a list of values for each card. For example, if the userhas two Aces, first create the list of values [11, 11], then modify it according to therule.Here is an example run after completing this stage:Name? BillBill has $1,000Bet? (0 to quit, Enter to stay at $25) 100Bet: $100Dealer’s hand: 10♥Value: 10Bill’s hand: J♠ 2♣Value: 12Move? (hit/stay) hBet: $100Dealer’s hand: 10♥Value: 1016Bill’s hand: J♠ 2♣ 3♣Value: 15Move? (hit/stay) hBet: $100Dealer’s hand: 10♥Value: 10Bill’s hand: J♠ 2♣ 3♣ 7♠Value: 22Bill bustBill has $900Bet? (0 to quit, Enter to stay at $100)Bet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣Value: 6Move? (hit/stay) hBet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣ 3♣Value: 9Move? (hit/stay) hBet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣ 3♣ 9♣Value: 18Move? (hit/stay) hBet: $100Dealer’s hand: 10♦Value: 10Bill’s hand: 4♥ 2♣ 3♣ 9♣ A♥17Value: 19Move? (hit/stay) sBet: $100Dealer’s hand: 10♦ 4♣Value: 14Bill’s hand: 4♥ 2♣ 3♣ 9♣ A♥Value: 19Bet: $100Dealer’s hand: 10♦ 4♣ K♠Value: 24Bill’s hand: 4♥ 2♣ 3♣ 9♣ A♥Value: 19Dealer bustBill has $1000Bet? (0 to quit, Enter to stay at $100)Bet: $100Dealer’s hand: A♣Value: 11Bill’s hand: 10♣ 7♣Value: 17Move? (hit/stay) hBet: $100Dealer’s hand: A♣Value: 11Bill’s hand: 10♣ 7♣ 7♦Value: 24Bill bustBill has $900Bet? (0 to quit, Enter to stay at $100)Bet: $10018Dealer’s hand: 8♠Value: 8Bill’s hand: 6♣ K♥Value: 16Move? (hit/stay) hBet: $100Dealer’s hand: 8♠Value: 8Bill’s hand: 6♣ K♥ A♠Value: 17Move? (hit/stay) sBet: $100Dealer’s hand: 8♠ 5♠Value: 13Bill’s hand: 6♣ K♥ A♠Value: 17Bet: $100Dealer’s hand: 8♠ 5♠ 8♦Value: 21Bill’s hand: 6♣ K♥ A♠Value: 17Dealer winsBill has $800Bet? (0 to quit, Enter to stay at $100)Bet: $100Dealer’s hand: 4♦Value: 4Bill’s hand: 2♦ J♥Value: 12Move? (hit/stay) sBet: $10019Dealer’s hand: 4♦ A♥Value: 15Bill’s hand: 2♦ J♥Value: 12Bet: $100Dealer’s hand: 4♦ A♥ A♦Value: 16Bill’s hand: 2♦ J♥Value: 12Bet: $100Dealer’s hand: 4♦ A♥ A♦ 10♥Value: 16Bill’s hand: 2♦ J♥Value: 12Bet: $100Dealer’s hand: 4♦ A♥ A♦ 10♥ 8♦Value: 24Bill’s hand: 2♦ J♥Value: 12Dealer bustBill has $900Bet? (0 to quit, Enter to stay at $100) 0Once you have completed these steps, show your TA your program.20Bonus ActivityThis optional activity is less guided. Completing it will result in up to 8 bonus projectpoints. In this activity, you will output the money the user has after each hand, in orderto graph the result using a spreadsheet program.A csv file, or comma-separated values, is a set of rows where each field is separated by acomma. In this bonus activity, after each hand, output the hand number and total moneythe user has, to a row in the file blackjack.csv. The data, including the hand number,should continue to accumulate even if the user has saved and resumed their game.An example of such an output might be:1,9752,9503,9754,10005,10256,10507,1025…Once you accomplish this, play at least 20 hands, then open your blackjack.csv file ina spreadsheet program such as Excel or Google Sheets. Draw a line graph showing theamount of money you had over those hands.SubmissionSubmit your .py file as described at https://cs.pitt.edu/ ~ bill/8/#submission.In addition, please include a plain text file entitled README.txt that answers the followingquestions.1. Which features of your program are working properly, and which are not?2. What was the hardest part about this project? How did you overcome it?3. What feature do you wish you could have added to this project?If you complete the Bonus Activity, submit an image file of your graph, as well.21","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Java代写：CM0718 Program Design and Implementation","slug":"page39","date":"2016-11-14T00:22:13.000Z","updated":"2017-01-04T03:58:13.721Z","comments":true,"path":"2016/11/14/page39/","link":"","permalink":"http://yoursite.com/2016/11/14/page39/","excerpt":"","text":"Introductionjava实现一个带gui版本的贷款记录系统，需要完成贷款记录系统的一些基本的功能操作，用swing完成gui的设计，然后需要生成javadoc文档最后自己需要进行黑盒和白盒测试RequirementCM0718 Program Design and ImplementationAssignment 2, 2015-16M J BrockwayIssued Teaching week 9 in classes and on module web pagesDue 23:59 on Friday 13 May, 2016. Links will be provided on the eLP forelectronic submission of your work.Marking and feedback will be available within the following 3 weeks in classor via an appointment, or via e-mail.Weighting towards Module 70%Learning Objectives Covered The following learning objectives are eitherfully or partially covered by this assignment:1. Analyse and specify a programming problem.2. Design a high-level solution to the problem using object oriented andgeneral imperative programming language constructs.3. Write, compile, execute, test and debug an OO program, which maps thehigh-level design onto concrete programming constructs, using appropriatedocumentation standards and software tools.4. Critically evaluate the methodologies and conceptual tools used in devel-oping solutions to programming problems.The two main themes of this assignment are programming graphical user inter-faces in Java and using inheritence in Java.The work is set in week 9 of the module by which time you will have coveredthe key concepts required to complete the work. However, you may find thatsome of the material discussed after the Easter Vacation may be of use in yourimplementation of the program.1Problem SpecificationYou are going to provide a version of the loans recording system (assignment 1)with a GUI and some extra functionality.The system needs to be expanded to include items for sale as well as items forloan. The system should hold a price and a number in stock for a sale-item,and a borrower and a return-date for a loan item. Thus there will be two typesof Item in the collection.1. LoanItem: consisting of item ID and item description plus a borrower anda return date; the ID consists of the letters LN followed by a three-digitnumber;2. SaleItem: consisting of item ID and description plus a price and a numberin stock; the ID consists of the letters SL followed by a three-digit number;You are provided with two classes as a starting point for the work:• Item a class representing a single item entry in the system. This classcontains only the ID and description; you will need to extend it to includethe extra data (borrower name and loan date (a long integer) in case ofLoanItem and description and quantity in case of SaleItem).• ItemCollection a class representing the collection of item records, andcontaining functions to save the item data (in text format) to a data file,and to load item data from the file.There is also a sample data file, containing IDs and descriptions only, and aMain.class which illustrates loading from the data file into the item collection,and saving of the item collection to the data file. More on these classes below.RequirementsThe following are essential functional requirements of the program:1. The system needs to be expanded to include items for sale as well as itemsfor loan, as above.• The Item class needs to be extended to classes LoanItem (record-ing borrower and return data as per assignment 1) and SaleItem,recording price and number in stock in addition to ID, description.• The ItemCollection class needs to be extended also.The ExtendedItemCollection class will inherit the ArrayListand use this to store the two types of Item in one list, but will needextra methods to support the functions set out below.2In particular, the Items in the collection will be a mixture of LoanItemsand SaleItems; your code needs to be able to distinguish these.2. Your program should provide the following functions -(a) issue a loan-item on loan;(b) check back in a loan-item;(c) sell some quantity of a sale-item (and update of the number in stock);(d) list all entries;(e) list all loan-item entries;(f) list all loan-items currently on loan;(g) list all sale-item entries;3. The user interface must be a GUI.Figure 1: A GUI for the applicationGeneral Points1. You must make use of inheritance in developing this program. This shouldinvolve you in extending the given Item and ItemCollection classes. Al-3though you may be given the source files, your program you MUST NOTmake any changes to these files.2. All interactions must be via a GUI. Typically you can expect to make useof buttons, text areas, and text fields. Your GUI should look somethinglike that depicted in figure 1.3. The program should consist of a number of classes each with well definedfunctionality. There should be a driver class to set things going; a GUIclass to provide the user interface; classes concerned with the addressbook.4. Your program should deal with error conditions by producing an errordialogue window when the use makes a mistake (Consider the use of JOp-tionPane dialogues for the error dialogues. This will require a little inves-tigation on your part.)5. Input could be via the ‘generic’ dialogues provided by JOptionPane; oryou could try making your own custom dialogues extending JDialog class.6. All classes must be fully documented using Javadoc conventions.7. The code you produce must adhere to the published course coding stan-dards. Failure to adhere to the standards will lead to a loss of marks.8. You will be expected to test your program against a suitable set of sit-uations. In the documentation you should describe your testing strategy(see below).DesignYou must produce design documentation. This will include a class diagram forthe system, a short explanation as to the general purpose of each of the classesyou have produced and their key methods; and a justification for any designdecisions you have made.ImplementationYou must provide listings for your program. The code must adhere to the Javastyle standards as defined for the module.TestingYou are expected to test your code. During the module we looked at strategiesfor testing programs. You must apply these strategies to your work.4The testing section of your documentation indicates the approach you havetaken to verifying and validating your system. Just as you should not conveythe design of your system by presenting the code or even listing the classes,you should not merely list the tests performed. Rather, discuss how tests wereselected, why they are sufficient, why a reader should believe that no importanttests were omitted, and why the reader should believe that the system will reallyoperate as desired when in use.1. Strategy: An explanation of the overall strategy for testing: Black boxand/or white box, integration, kinds of test beds or test drivers used,sources of test data, test suites. You might want to use different techniques(or combinations of techniques) in different parts of the program. In eachcase, justify your decisions.2. Test Data: A set of tables showing the test data you used for each class,etc. The format of the test documentation should be as follows: for eachtest case in the tables,• a unique ID• a brief description of the purpose of the test• the pre-conditions for running the test• the test data• the expected resultReflectionYou must provide a final critical evaluation of your work.The reflection section is where you can generalize from specific failures or suc-cesses to rules that you or others can use in future software development. Whatsurprised you most? What do you wish you knew when you started? How couldyou have avoided problems that you encountered during development?1. Evaluation: What you regard as the successes and failures of the devel-opment: unresolved design problems, performance problems, etc. Identifywhich features of your design are the important ones. Point out designor implementation techniques that you are particularly proud of. Dis-cuss what mistakes you made in your design, and the problems that theycaused.2. Lessons: What lessons you learned from the experience: how you mightdo it differently a second time round, and how the faults of the design andimplementation may be corrected. Describe factors that caused problemssuch as missed milestones or to the known bugs and limitations.53. Known Bugs and Limitations: In what ways does your implementationfall short of the specification? Be precise. Although you will lose pointsfor bugs and missing features, you will receive partial credit for accuratelyidentifying those errors, and the source of the problem.This should be 1 to 2 pages long.DeliverablesYou are expected to submit the following items:1. Your working Java classes, source code and project files (if approriate).JUnit test classes and sources should be included. Your Java source codeshould(a) be fully commented in the JavaDoc style;(b) adhere to the defined coding standards.2. a .jar file containing your application classes.3. The HTML documentation produced by JavaDoc.4. A report containing the following sections:(a) A cover page giving your name, University ID, and module details;(b) Design documentation as outlined above;(c) All the test documentation outlned above;(d) Your reflection and critical evaluation, as outlined above(e) Brief instructions on running your program (this will not be marked);Submission is electronic. Electronic Copies of your work should be sub-mitted via the assignment mechanism on the eLP (Blackboard). Separate linkswill be provided for (1) a ZIP containing your java source, classes, etc, yourjar file and your Javadoc-generted documentation; and (2) your report, in PDFformat.Academic integrityYou must adhere to the university regulations on academic conduct. Formalinquiry proceedings will be instigated if there is any suspicion of plagiarism orany other form of misconduct in your work. Refer to the Universitys AssessmentRegulations for Northumbria Awards if you are unclear as to the meaning ofthese terms. The latest copy is available on the University website.6Classes ProvidedYour have been given the following .class files from which you will build yournew system:• Entry.class• AddressBook.classThe documentation for each class is also provided but you should not count onseeing the source code. It is intended that you use the functionality providedby these classes without modifying them in any way.To use these classes1. In BlueJ create the project for the assignment2. Copy the .class files into the folder created for this project. They mightNOT appear immediately inside BlueJ although later on you may seethem.3. Now start to add your own classes.AssessmentFeedback will be provided at the end of the semester, about 3 weeks aftersubmission, by inerview or by e-mail.The marking for the assignment is designed to reflect the general guidance givenon the University’s web site for the assessment of postgraduate work. Somemodifications to the generic criteria have been made to better reflect the natureof the assignment. The marking scheme is set out below.70-100 Distinction Excellent work providing evidence to a very high level of theknowledge, understanding and skills appropriate to level 7. All learningoutcomes met, many at high level. Marks at the high end of this rangeindicate outstanding work where all learning outcomes are met at a highlevel. Excellent in all the specific areas of the assessment criteria listedbelow for the assignment; evidence of successful independent learning asdemonstrated by the implementation of optional features in the program;use of up-to-date material from a variety of sources; critical evaluationand creative use of theory60-69 Commendation Commendable work providing evidence to a high levelof the knowledge, understanding and skills appropriate to level 7. Alllearning outcomes met, many are more than satisfied. Good in all or7most of: the specific assessment criteria listed below for the assignment;evidence of independent learning; critical evaluation and creative use oftheory55-59 Pass Satisfactory work providing evidence of the knowledge, understand-ing and skills appropriate to level 7. All learning outcomes are met. Sat-isfactory in all or most of the assessment criteria listed below.50-54 Pass Adequate work providing evidence of the knowledge, understandingand skills appropriate to level 7 but only at a bare pass level. All learningoutcomes are met (or nearly met and balanced by strengths elsewhere).Adequate in all of (or most of, with balancing strength elsewhere) of thecriteria listed below.40-49 Fail The program fails to achieve the basic pass criteria specified below.Work is not acceptable in providing evidence of the knowledge, under-standing and skills appropriate to level 7. May be adequate in some butnot all of the assessment criteria listed below.1-39 Fail Work is not acceptable and provides little evidence of the knowledge,understanding and skills appropriate to level 7. Few of the learning out-comes are met. Inadequate in terms of the various criteria given below asa basis for judging the work.0 Fail Work not submitted OR Work giving evidence of serious academicmisconduct (subject to regulations in ARNA Appendix 1) OR Work show-ing no evidence of the knowledge, understanding and skills appropriate tolevel 7. None of the learning outcomes are met1. Basic functionality: 20 marks. You must have produced code for the GUI,which must compile. The program must provide via the GUI the basicservices provided by the original AddressBook class, e.g. add an entry,find an entry, delete an entry, list all.2. Coding style and quality: 20 marks.• Judicious use of comments, including Javadoc comments;• Good layout, good naming• Good level of class and function decomposition• Simple methods; appropriate use of Java language features.3. Correctness: 20 marks• Robust and correct user interface• Errors handled cleanly.• Significant use of Java object-orientation: inheritence, polymorphism.• Good use of GUI features: there are marks for exploring beyond thebasics.8• Well structured listeners, with helper functions.• Program logic is correct.4. Testing: 20 marks• JUnit: a comprehensive set of the JUnit tests; JUnit features (setup,asserts) appropriately used.• The test cases provided to test the program are documented in thereport as asked, and justified.5. Report: 20 marks• Design documentation: class diagram and description of roles ofclasses and their methods; explanation of key design decisions.• Critical evaluation, including issues arising from exploration of ad-vanced GUI features.9","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Java代写：Assignment 2","slug":"page38","date":"2016-11-13T14:12:33.000Z","updated":"2017-01-04T03:59:21.084Z","comments":true,"path":"2016/11/13/page38/","link":"","permalink":"http://yoursite.com/2016/11/13/page38/","excerpt":"","text":"Introductionjava的网络编程，主要是一个FileSender 发送类和一个FileReceiver接收类， 考察了网络编程的基础知识，CRC32 Checksum验证，消息头的封装和解封，数据的传输等等知识RequirementPage 1 of 6Assignment 2IntroductionIn this assignment, you will transfer a file over UDP protocol on top of an unreliable channelthat may either corrupt or drop packets randomly (but always deliver packets in order).Writing Your ProgramsYou are free to write your programs on any platform/IDE that you are familiar with.GradingYour programs will be graded according to their correctness using a grading script:• [2 points] Programs are compilable on sunfire, program execution follows specifiedJava commands (see sections below).• [1 point] Programs can successfully transfer a file from sender to receiver when channel isperfectly reliable (i.e. no error at all).Page 2 of 6• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofdata packet corruption.• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofACK/NAK packet corruption.• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofdata packet loss.• [1 point] Programs can successfully transfer a file from sender to receiver in the presence ofACK/NAK packet loss.• [1 point] Programs can successfully transfer a file from sender to receiver in the presenceof both packet corruption and packet loss.To conclude a successful file transfer, received file must have identical content as thesent one (use command cmp to check it on sunfire). Your program should work forboth text and binary files, and for both small files and large files (a few MBs).Grading script doesn’t care what messages your programs print on the screen. It just checksif the received file is exactly the same as the sent one in respective test cases.• [2 points] (Who runs faster?) Time taken for your programs to transfer an enormous file(more than 10MB) in the presence of both packet corruption and packet loss will be noteddown. The fastest batch of student programs will receive 2 marks and slower programs thatare still faster than average will receive 1 mark. JYou may apply the knowledge gained from this or other courses as appropriate. However,since the objective of this assignment is to design a fast network transmission protocol,you are NOT allowed to play tricks (e.g., data compression) to gain unfair advantageover your peers. Please consult the teaching team if you are unsure if certain techniquescan be used or not.A Word of AdviceThis assignment is complex and time-consuming. You are suggested to write programsincrementally and modularly. For example, deal with data packet corruption first, then ACKpacket corruption, then data packet loss, etc. Test your programs after every single majorchange. Take note that partial credit will be awarded even if your programs don’t meet all listedrequirements.Page 3 of 6Overall ArchitectureThere are three programs in this assignment, FileSender, UnreliNET andFileReceiver. Their relationship is illustrated in Figure 1 below. The FileSender andFileReceiver programs implement a file transfer application over UDP protocol. TheUnreliNET program simulates the transmission channel that transmits packets unreliably andrandomly corrupts or loses packets. However, for simplicity, you can assume that this channelalways delivers packets in order.Figure 1: UnreliNet Simulates Unreliable NetworkThe UnreliNET program acts as a proxy between FileSender and FileReceiver.Instead of sending packets directly to FileReceiver, FileSender sends all packets toUnreliNET. UnreliNET may introduce bit errors to packets or lose packets randomly. Itthen forwards packets (if not lost) to FileReceiver. When receiving feedback packets fromFileReceiver, UnreliNET may also corrupt them or lose them with certain probabilitybefore relaying them to FileSender.The UnreliNET program is complete and given. Your task in this assignment is to develop theFileSender and FileReceiver programs so that a file can be successfully transferredfrom sender to receiver in the presence of possible packet corruption and packet loss. Thereceived file should be identical to the file sent. You may need to implement techniques learntin lecture, including sequence number, acknowledgement, timeout and retransmission, toensure that packets are correctly delivered.FileSender ClassThe FileSender program is basically a file uploader that opens a given file and sends itscontent as a sequence of packets to UnreliNet. UnreliNet would then corrupt/losepackets with certain probability before relaying them to the FileReceiver program.To run FileSender on sunfire, type command:java FileSender For example:java FileSender ../test/cny.mp3 localhost 9000 gxfc.mp3sends the file cny.mp3 from directory (relative path) ../test to UnreliNet running inthe same host at port 9000. UnreliNet will then pass the file to your FileReceiverprogram to be stored as gxfc.mp3.UnreliNET FileSender FileReceiverPage 4 of 6(Note: Windows system uses a different file separator ‘\\’, e.g., ..\\test\\cny.mp3)You may assume that during testing, your sender program will be supplied with the correctpath and filename (no more than 100 bytes long). No input validation is needed.UnreliNET ClassThe UnreliNET program simulates an unreliable channel that may corrupt or lose packetswith a certain probability. This program is given and shouldn’t be changed.To run UnreliNET on sunfire, type command:java UnreliNET For example:java UnreliNET 0.3 0.2 0.1 0.05 9000 localhost 9001listens on port 9000 and forwards all received data packets to FileReceiver running on thesame host at port 9001, with 30% chance of packet corruption and 10% chance of packet loss.The UnreliNET program also forwards ACK/NAK packets to FileSender, with 20% packetcorruption rate and 5% packet loss rate.Packet Corruption ProbabilityThe UnreliNET program randomly corrupts or loses data packets and ACK/NAK packetsaccording to the specified parameters P_DATA_CORRUPT, P_ACK_CORRUPT P_ACK_LOSS andP_ACK_LOSS. You can set these values to anything in the range [0, 0.3] during testing (setting atoo large corruption/loss rate may result in a very slow file transmission).If you have trouble getting your code to work, it might be advisable to set them to 0 first fordebugging purposes.FileReceiver ClassThe FileReceiver program receives a file from FileSender (through UnreliNET) andsaves it in the same directory as the FileReceiver program, with a filename specified byFileSender.To run FileReceiver on sunfire, type command:java FileReceiver For example:java FileReceiver 9001listens on port 9001 and dumps the bytes received into a file whose name is given by sender.Page 5 of 6Running All Three ProgramsYou should first launch FileReceiver, followed by UnreliNET in the second window.Finally, launch FileSender in a third window to start data transmission. All programs shouldreceive user input from command-line argument only. Please always test your programs inlocalhost to avoid the interference of network traffic on your programs.The UnreliNET program simulates unreliable communication network and runs infinitely.Once launched, you may reuse it in consecutive tests. To manually terminate it, press + c.The UnreliNET program prints out information that is helpful in debugging your programs.However, we will disable such outputs in speed test.The sender and receiver programs shouldn’t communicate with each other directly – all trafficshould be forwarded by the UnreliNET program. The sender program should terminateproperly (e.g., no exception, no infinite loop) once transmission finishes. However, you mayleave the receiver program running infinitely (i.e., no need for receiver to detect end oftransmission and terminate, but DO remember to close the file output stream at the end).Self-defined Header/Trailer Fields at Application LayerUDP transmission is unreliable. To detect packet corruption or packet loss, you may need toimplement reliability checking and recovery mechanisms at application layer. The followingheader/trailer fields are suggested though you may have your own design: Sequence number ChecksumNote that each packet FileSender sends should contain at most 1000 bytes of applicationdata (inclusive of self-defined header/trailer fields), or UnreliNET program will reject it.Computing ChecksumTo detect bit errors, FileSender should compute checksum for every outgoing packet andembed it in the packet. FileReceiver needs to re-compute checksum to verify the integrityof a received packet.Please refer to Assignment 0 Exercise 3 on how to compute checksum using Java CRC32 class.Timer and Timeout ValueSender may have to maintain a timer for unacknowledged packet. You are suggested to use thesetSoTimeout() method of Java Socket class.You shouldn’t set a timeout value that is larger than 200ms, or your program might be too slowin transmitting data and thus get killed by the grading script.Page 6 of 6Reading/Writing Values to Header/Trailer FieldsThe number of header/trailer fields and the sequence of their appearance in a packet is theagreement between sender and receiver (i.e. an application layer protocol designed by you).As discussed in tutorial 3, to give value to a header field of a 4-byte integer, you may considerByteBuffer class from java.nio package. An example is shown below.At sender side:int length = 1000;// allocate a 4-byte array to store converted integerbyte[] pktLen = ByteBuffer.allocate(4).putInt(length).array();// copy content of pktLen to the beginning of output buffer of pktSystem.arraycopy(pktLen, 0, buffer, 0, pktLen.length);At receiver side:// extract the first 4 bytes of a packet as the integer ‘length’ByteBuffer wrapper = ByteBuffer.wrap(pkt.getData(), 0, 4);int length = wrapper.getInt();","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Network","slug":"Network","permalink":"http://yoursite.com/tags/Network/"}]},{"title":"C代写：Chat Room","slug":"page37","date":"2016-11-12T13:22:33.000Z","updated":"2017-01-04T03:53:16.980Z","comments":true,"path":"2016/11/12/page37/","link":"","permalink":"http://yoursite.com/2016/11/12/page37/","excerpt":"","text":"Introduction用c语言写一个多人聊天室，大致要求就是做一个能够实现自由加入和退出的聊天室。 一个人发送信息其他人都能收到，消息发送成功要有个提示。每个人加入和退出也会有提示，前面的英文有举例。多人聊天的时候可以分辨出来那句话是谁发的。Requirementyou will implement a multi-user chat program. In C program please.The Bare MinimumThe minimum requirement is for a central server that can accept two connections.Either client can then type a message, which is then sent to the server. The serverrelays the message to the other client. A sample run of the program might look like thefollowing:&gt; ./chat 127.0.0.1What is your screen name? &gt;&gt; KitCKitC has joined the chat.Linda has joined the chat.&gt;&gt; Hi, Linda. Are we having our meeting later today?[Your Message Has Been Sent]Linda: No. I’m really busy writing our paper anda couple other people have conflicts.&gt;&gt; Okay. Thanks![Your Message Has Been Sent]&gt;&gt; exitKitC has left the chat.This is only an example interface, but shows the minimum requirements of sendingmessages between the clients. A confirmation that your message has been sent by theclient is also a requirement at this level.Level 2 RequirementsIn Level 2, a few more features may be added. In the example above, there werenotifications when a user entered or left the chat. Level 2 code should add this feature.At this level, the server should be able to accept multiple connections | not just two.That means that the server needs to keep track of who sent a message and distributeit to all of the other clients except the one who sent it.Buffet FeaturesIf you have time or interest, you can add any or all of the following features.Private messages between clients (Something like @replies in Twitter)Sending a message to a subset of clientsAdd some pretty formatting to the messages (like colors, line wrapping, etc.)","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写：Bonus Lab (Chat Program using Message Queues)","slug":"page36","date":"2016-11-11T14:32:43.000Z","updated":"2017-01-04T03:51:37.928Z","comments":true,"path":"2016/11/11/page36/","link":"","permalink":"http://yoursite.com/2016/11/11/page36/","excerpt":"","text":"Introductionc语言的纸牌游戏，规定用链表实现功能，包括创建4种花色，洗牌，发牌等功能的实现。最后还提供了sample方便测试，这个题目属于阶段性题目的一部分，以后还会有相应的扩展Requirement1ECE175 Computer Programming for Engineering ApplicationsHomework Assignment 8Due Date: Tuesday April 12, 2016 11:59 PM, via D2LConventions: Name your C programs as hwxpy.cwhere x corresponds to the homework number and y correspondto the problem number.Write comments to your programs. Programs with no comments will receive PARTIALcredit. For each program that you turn in, at least the following information should beincludedAuthor:Date created:- Brief (two lines) description of the program:Submission Instructions: Submit your .c files via D2L Dropbox.Problem 1 (60 pts): Write a C program to1) Create a full deck of 52 cards that are in order. In other words, for each of the foursuits, the cards should be in order from Ace (1) through King (13).each card is consisted ofsuit [clubs (♣),spades (♠),hearts (♥), or diamonds (♦))a face (1(Ace) – 10, Jacks (J), Queens (Q), and Kings (K))To simulate the deck, and each of the players’ hands, you MUST use a dynamic list ofcards with the following typetypedef struct card_s {char suit;int face;struct card_s *listp;} card;At the HW demo time, you will be asked to print the deck that you create.2) shuffle the deck (52 cards), using the following algorithm:(a) For each card in the deck, get a random number in the range of 0 to 50 to beused as the index of the element to swap that card with, i.e.if deck[0] holds the Jack of clubs (J ♣) and the random number generated was24, and deck[24] holds the 9 of diamonds (9♦), thenafter the first swap, deck[0] would hold the 9 of diamonds (9♦) and24] would hold the Jack of clubs (J ♣). You would then proceed todeck[1], find a random index of a card to swap with, and swap those cards,etc.(b) Repeat step (a) at least 100 times.Note: You must seed the random number generator with a call to time() withsrand(). [see sec 2.22 Random numbers in your Zyante book]At the HW demo time, you will be asked to print the deck after the shuffle is done.3) deal the cards (after shuffling the deck) by giving one card to the user/player,followed by one card to the computer/dealer, followed by one card to the2user/player, etc. until each player get 8 cards. There are only 2 players(computer/dealer and one user/player).The player’s hand is represented as a dynamic list of cards. The list is populatedwith the cards drawn by the player.The dealer’s hand is represented as a dynamic list of cards. The list is populatedwith the cards drawn by the dealer.Note: the card(s) added to each of the player/dealer’s hand (drawn from the deck)must be added to that player/dealer’s linked list correctly and MUST be removedfrom the deck.At the HW demo time, you will be asked to print both computer’s hand and user’s handNote: your program can do one of the followings (pick one):♣, ♠, ♥, ♦OR display club, spade, heart, diamondSample code execution 1:Note: your program will NOTget exactly these shufflecards since rand() is used!Note: you can see that the shuffledcards are distributed to each hand inan alternate fashion and starts with aplayer/user hand.- 1st card from the shuffled one is 4 ofclub which is assigned to player’shand- 2nd card from the shuffled one is 2of spade which is assigned tocomputer’s hand- 3rd card from the shuffled one is 10of spade which is assigned to player’shand- etc.3Sample code execution 2:Note: your program will NOT getexactly these shuffle cards sincerand() is used!Note: you can see that the shuffled cards aredistributed to each hand in an alternate fashionand starts with a player/user hand.- 1st card from the shuffled one is A ♦ which isassigned to player’s hand- 2nd card from the shuffled one is 6 ♦ which isassigned to computer’s hand- 3rd card from the shuffled one is 5♣ which isassigned to player’s hand- etc.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C代写：Bonus Lab (Chat Program using Message Queues)","slug":"page35","date":"2016-11-11T14:32:43.000Z","updated":"2017-01-04T03:50:07.945Z","comments":true,"path":"2016/11/11/page35/","link":"","permalink":"http://yoursite.com/2016/11/11/page35/","excerpt":"","text":"Introductionunix的IPC通讯，涉及到消息队列，共享内存等等多进程知识，是操作系统的必须课程RequirementIn this assignment you are to develop a chat program between two users, similar to theone already available on the UNIX system called talk. When two instances of yourprogram are being run simultaneously on the system, a user typing in one instance will beable to send the message typed to the user running the other instance of the program.User interface can be a very simple one by using printf() and scanf() functions of the Cprogramming language. IPC mechanism is going to be developed using Message Queues.Important: You should design your code so that when the user is waiting to type amessage, at the same time messages are being retrieved from the queue if they arrive in it.This requires multi-threaded program.SpecificsIPC Introduction and namingUnder UNIX operating system, apart from pipes and signals as primitive type of IPC,from System V release new techniques were added: message queues, semaphores andshared memory. You can investigate the status of IPC facilities on the system by enteringipcs –b on the command prompt. IPC Message queues will exist even after the processcreating it terminates, thus it should be manually removed with the ipcrm –q command, since IPC resources on a system are limited.IPC system calls related to the Message Queues that is the mechanism of choice for theIPC are: msgget for allocating an IPC or gaining access to an existing queue. msgctl tocontrol an IPC, modify its status and/or remove it. Lastly, for sending and receivingmessages msgsnd and msgrcv are used.Once an IPC facility is created using the msgget function, an IPC identifier is returned bythe system. The user creating the IPC facility identified by the returned identifier shouldspecify the access permissions. Header defines the IPC permissions structurecalled: ipc_perm. Also, needs to be included in every program before thesys/ipc.h is included.The unique system-wide identifier identifies message queues. To create such an identifierof type key_t defined in the file, ftok() function should be used. If ftok() iscalled with the same arguments from two different processes, the same key would beproduced, thus two different processes would be able to access the same IPC facility.For example:key_t key;key = ftok(“.”, 123);First argument is the reference to an existing accessible file (in UNIX, file “.” – areference to the current directory is always available and accessible). Second argument issome integer, referred to as an id. There are also constants to be passed as an ID: forexample IPC_PRIVATE that assures that returned key is always unique.Creating Message QueueA message queue is created using the msgget system call. If successful, a non-negativeinteger is returned which is a message queue identifier that can be used in subsequentcalls that reference it. First parameter is the key returned by ftok(), and the secondparameter is the access permission that is of the same format as the chmod commandparameter. Passing 0777 would give read and write permissions to everyone on thesystem. To verify proper access permissions are made, once the queue is created, you canobserve set permissions with the ipcs –b command described at the beginning of thissection. Furthermore, use the IPC_CREAT flag ORed with the 0777 to assure that thequeue is created if it does not exist or if it already exist, an identifier to it is simplyreturned.For example:mq_handle = msgget(key, IPC_CREAT | 0777);if(mq_handle&lt;=-1) {printf(“Error creating message queue\\n”);perror(“MQ Sample”); / print the error /return(1);}Obtaining information about the message queueUsing the msgctl function and the IPC_STAT flag passed to it, information about thequeue, its owner, number of bytes on the queue, number of messages, etc…can beobtained. An include file needs also to be included in the program.For example:struct msqid_ds *info;int ret;…ret = msgctl(mq_handle, IPC_STAT, info);if(ret==-1) {printf(“Failed to obtain message queue information\\n”);perror(“MQ Sample”);exit(1); }printf(“# of messages on queue: %d\\n”, info-&gt;msg_qnum);Communicating through Message QueueA message is defined in the struct msgbuf in the include file . First field ofthe structure, mtype, is an user-defined positive integer id, agreed between the programsusing the message queue to selectively retrieve the messages from it. Suppose, 4programs (instances of the chat program) are using the same message queue, in that casethe following should be done to assure proper bi-directional communication:Instance 1 Instance 2 Instance 3 Instance 4Instance 1 – 12 13 14Instance 2 21 – 23 24Instance 3 31 32 – 34Instance 4 41 42 43 –For example:Instance 1 will use mtype=12 to send a message to the Instance 2 and also Instance 1 willretrieve messages that have mtype=21. Instance 2 will use mtype=12 to retrieve messagesfrom the queue from the Instance 1 and it will use mtype=21 to send a message to theInstance 1. Thus, we assure that there is a bi-directional communication on the samechannel (same message queue) that is shared by many instances of the same chat programand messages are not delivered to the wrong instance.msgsend()msgsend() takes four parameters and it returns 0 on success and –1 on failure setting theerrno global variable to a pre-specified number that can be examined to retrieve the error(or by using perror() function to get a meaningful message).First parameter is the identifier of the message queue. Second parameter is the pointer tothe actual message. Third parameter is the size of the message obtained by using thesizeof operator, and the last parameter is the flags. IPC_NOWAIT is one flag, whichcauses a non-blocking send (send would block if the queue was full) or a zero can bepassed if no flags are needed).msgrcv()msgrcv() takes five parameters. First one is the queue identifier. Second one is the pointerto where the received message will be placed (receiver’s end structure should have thefirst member as ulong to assure message type can be correctly written). Third one is themaximum size of the message that can be received. Fourth parameter specifies whichmessages should be received: an identifier used in mtype at the sender’s side or 0 toretrieve all messages. Fifth parameter is the flags. IPC_NOWAIT is to create a no-blocking receive and MSG_NOERROR is not to produce any error if the messagereceived is bigger than the maximum size specified. If MSG_NOERROR is not specifiedand message received is larger than the maximum specified size an error will occur.msgrcv() returns –1 on failure or number of bytes received if it is successful. On error, italso sets errno global variable able to be retrieved using perror().SubmissionYou should submit your C program on Carmen along with details on how to run it andanything else that would allow the grader to grade your work.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"unix","slug":"unix","permalink":"http://yoursite.com/tags/unix/"}]},{"title":"C代写：Software Tools and Systems Programming","slug":"page34","date":"2016-11-10T15:12:56.000Z","updated":"2017-01-04T03:41:48.727Z","comments":true,"path":"2016/11/10/page34/","link":"","permalink":"http://yoursite.com/2016/11/10/page34/","excerpt":"","text":"Introductionc语言的数据结构，联系完成二叉搜索树和B树的实现和操作，给了函数声明的模板，在linux下编译，makefle也是自己写，最后通过makefile编译然后完成测试工作RequirementTHE UNIVERSITY OF WESTERN ONTARIODEPARTMENT OF COMPUTER SCIENCELONDON CANADASoftware Tools and Systems Programming(Computer Science 2211b)ASSIGNMENT 5Due date: Thursday, March 31, 2016, 11:55 PMAssignment overviewObjectives. The purpose of this assignment is to get experience with• advanced data structures,• manipulation of pointers and C constructs,• dynamic allocation and and deallocation of memory,• organizing code in multiple files,• writing Makefile to compile your code.In this assignment, you are to write a C program to implement a sparse matrix structure(2D array) indexed by a pair of strings using binary search trees.Assignment basic requirements. The code should be well documented and logicallyorganized. The comments should be proper. Your code should be tested carefully beforesubmitting it, especially for boundary cases, such as empty data-structures. Avoid segmen-tation fault and memory leak.1 PreliminariesIn this assignment, you will implement the following data structures.Binary search treeThis will be implemented with pointers and structures. The key type is a pair of strings (apair of pointers to char) which will be used later as indices of the matrix structure. Thedata type can be any type and in this assignment it is float.The type definitions for key and data in C are the following.typedef float Data_Item;typedef char Sub_Key;typedef struct {Sub_Key key1; Sub_Key key2} Key;You will need a function to generate a key from a pair of strings, a function to print a key,a function to print a data, and a function to compare two keys.1int key_comp(Key key1, Key key2);Key key_gen(Sub_Key key1, Sub_Key key2);void key_print(Key key);void data_print(Data_Item data);The type definitions for binary search trees are the following:struct Bst_Node {Key key;Data_Item data;struct Bst_Node left, right;};typedef struct Bst_Node BStree_node;typedef BStree_node** BStree;The operations for binary search trees are the following.BStree bs_tree_ini(void);Allocate memory of type BStree node, set the value to NULL, and return a pointer to theallocated memory.void bs_tree_insert(BStree bst, Key key, Data_Item data);Insert data with key into bst. If key is in bst, then do nothing.Data_Item bs_tree_search(BStree bst, Key key);If key is in bst, return a pointer to key’s associated data. If key is not in bst, returnNULL.void bs_tree_traversal(BStree bst);In order traversal of bst and print each node’s key and data.void bs_tree_free(BStree bst);Free all the dynamically allocated memory of bst.A Matrix Indexed by a pair of StringsThe matrix structure will be implemented as Matrix using BStree.The type definition in C is the following.typedef BStree Matrix;typedef Sub_Key Index;The operations are the following.Matrix matrix_construction(void);Matrix construction using bs tree ini();Data_Item matrix_get(Matrix m, Index index1, Index index2);2If at location (index1, index2) in Matrix m, the value is defined, then return a pointer tothe associated data. Otherwise, return NULL.void matrix_set(Matrix m, Index index1, Index index2, Data_Item data);Assign data to Matrix m at location (index1, index2).void matrix_listing(Matrix m);Print values in the Matrix m (with bs tree traversal()).void matrix_destruction(Matrix m);Free allocated space (with bs tree free()).2 Organizing the code into multiple filesFor this assignment you are to organize the code in the following way:• In the file datatype.h, define the type Data Item, the type Sub Key, the type Key, anddeclare prototypes of the functions for type Data Item and type Key.• In the file datatype.c, implement the functions for type Data Item and type Key.• In the file bs tree.h, define the type BStree node, the type BStree and declare proto-types of the operations on BStree.• In the file bs tree.c, implement the functions on BStree.• In the file matrix.h, define the type Index and the type Matrix and declare prototypesof the operations on Matrix.• In the file matrix.c, implement the functions on Matrix.• In the file main.c, your program will1. create a new Matrix.2. read from stdin, or redirect from a file, string pairs (a pair of strings, i.e. twostrings, per line) and then calculate occurrences of each string pair read using theMatrix created.3. print the data in the Matrix4. free all allocated memory spaces for the Matrix and terminate.A sample input is given below.bba aaaab aabbba aaaab abbbba aaa3A sample output is given below.String 1 String 2 Occurrenceaab aab 1aab abb 1bba aa 2bba aaa 13 Creating a Makefile to compile the source codeYou are asked to create a Makefile to compile your source code. When “make” is typed,an executable program called “mymatrix” is generated. Typing “make clean” cleans all thefiles generated by “gcc”.4 Testing your programYou should implement BStree first and then test it to make sure it is correct before imple-menting Matrix.Your program should have no segmentation fault, no memory leak. Your program shouldprint all the elements correctly.You should test your program by running it on Gaul. Capture the screen of your testing byusing script command.4","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C代写：BULK FOOD STORE PROGRAM","slug":"page33","date":"2016-11-08T19:02:46.000Z","updated":"2017-01-04T03:39:43.727Z","comments":true,"path":"2016/11/09/page33/","link":"","permalink":"http://yoursite.com/2016/11/09/page33/","excerpt":"","text":"Introduction初级的c语言入门知识，完成一个散装食品商店程序，考察点包括程序格式要求，用户界面是否美观，c语言基础知识的应用，还有异常的处理等。Requirement1BULK FOOD STORE PROGRAMInstructions:Develop a C program which has to have all the required functions and features listed below.Other than these, you are free to create/add other functions/features that you feel may beuseful for the application.You are required to develop this program BY YOURSELF!!! The program that you submit MUSTBE THE FINAL VERSION, and MUST BE YOUR OWN WORK!!You MUST NOT COPY any CODE from ANYBODY ELSE. If your program is found to bethe same as any other student with just a few variable names changed or a few lines of codechanged, both YOU and the OTHER person(s) will be assigned a MARK of ZERO as well as besubject to disciplinary action under the ACADEMIC Misconduct Policy !!!To avoid this from happening to you, you must NEVER give any type of COPY of your code toanybody else until at least 1 week after the project due date.LATE SUBMISSIONS GET A MARK OF 0 !The program and project document must be submitted onWednesday March 16, or Thursday March 17, or Friday March 18,2016 during your corresponding Lab. Sessions.You are required to submit the following:A program called PROJECT.C and the screenshot of your program output.Project Assessment:The marks will be assigned on the following basis:1. Program Format - programmer’s block, indentation, and adequate comments2. User Interface - appearance to users, ease of use, checking for out of range input3. No compile or run time errors4. Functionality and StructureThe basic functions/features for the application as required, applying topics such as #defines,if..else, loops, switch/case, etc.Project Marking SchemeMarks will be assigned as follows:Program Functionality: 2 marksProgrammer’s block and comments: 1 markProgram Clarity/Organization: 1 markEase of use, format and appearance to the user: 1 markTotal: 5 Marks2Description:1. Required Functionalities:When the program initializes, the user should be presented with the following MAIN MENU:BULK FOOD STORE PROGRAMItem Description Cost/lb # Pounds SubtotalA candy 4.55 0.00 $ 0.00B Flour 1.50 0.00 $ 0.00C Soup 2.88 0.00 $ 0.00D Walnuts 5.25 0.00 $ 0.00E Rice 1.05 0.00 $ 0.00F Noodles 0.35 0.00 $ 0.00G Sugar 0.92 0.00 $ 0.00H Cake 1.45 0.00 $ 0.00total pounds = 0.00 SUBTOTAL $ 0.00Avg. Cost/lb = 0.00 HST Amount $ 0.00TOTAL Amount $ 0.00Your choice (R to RESET, Q to quit) ==&gt;32. Required Functionalities (continued):(i) Your program should accept ONLY UPPER/lower Case characters A-H (or a-h) aswell as R and Q (or r and q).(ii) All other user input for choice should cause an AUDIBLE BEEP, and not be accepted.If the user enters a letter (Upper or Lower case) from A-H (or a-h), it should thenprompt the user for the number of POUNDS.(iii) Pounds should be a floating point value. Negative values for POUNDS should causean AUDIBLE BEEP and not be accepted.(iv) The number of POUNDS should be multiplied by the COST/LB value to generate asubtotal to 2 decimal places for that ITEM. The ITEM SUBTOTALS should beadded together to give the SUBTOTAL at the bottom.(v) The HST tax amounts should be generated for the bottom SUBTOTAL to give theTOTAL Amount.(vi) The number of POUNDS column should be added together to get the TOTALPOUNDS. You should then take the SUBTOTAL COST at the bottom and divide itby the TOTAL Pounds to get the Avg Cost/lb.(vii) Remember that you cannot divide by 0, so this will have to be taken into account beforedisplaying this value at start up and after choosing Reset.(viii) When the user chooses to Quit, the program should display a message and ask the userto:HIT ANY KEY TO CONTINUE…before ending the program.4 PROGRAM REQUIREMENTS:Variables: Any variables used in the program must be a LOCAL VARIABLE with the function.When the program first starts, all POUNDS should be set to 0.00Defines: The program must include the following defines:#define A “Candy “#define A_P 4.55#define B “Flour “#define B_P 1.5#define C “Soup “#define C_P 2.88#define D “Walnuts “#define D_P 5.25#define E “Rice “#define E_P 1.05#define F “Noodles “#define F_P 0.35#define G “Sugar “#define G_P 0.92#define H “Cake “#define H_P 1.45Changing a #define(s) should change Description and/or Cost/lb accordingly.Programmer’s Block:The programmer’s block must include the following, in your screenshot as well:FULL NAME:STUDENT ID:LAB SECTION:LAB DAY AND TIME:DESCRIPTION:Please note that this is an individual project and each student should submithis/her project individually.The printed hard copy of the project should be submitted to me in the first tenminutes of your corresponding Lab. Sessions.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：CCIT4020, HKU SPACE Community College","slug":"page32","date":"2016-11-07T20:09:46.000Z","updated":"2017-01-03T09:48:56.860Z","comments":true,"path":"2016/11/08/page32/","link":"","permalink":"http://yoursite.com/2016/11/08/page32/","excerpt":"","text":"Introduction完成一个库存管理和记录系统，从inventory.txt文件中读取相关数据， 然后包括增删改查等相关功能，属于c语言的基础入门级别的题目RequirementICP Project 15-161 / 6Introduction to Computer Programming (ICP)CCIT4020, HKU SPACE Community College, 2015-2016 Semester 2Course Project Guidelines: Inventory Management and Record System1) IntroductionNowadays, an inventory management and record system is important to manage all relatedinventories in a logistics corporation for shipping and delivery. In this project, a simple andeffective inventory management and record system is developed in order to record, search andback up the data of various items in the company. To avoid any conflict between different datatypes and any other programming bugs, Input data validation processes are necessary to beemployed and developed in the system.1.1) File Format for data storage:In this project, one data file “inventory.txt” is required to back up the data. The “inventory.txt”file contains various data for each item (Name of item, Item number, Subject, Weight, Quantity,Recipient, Final destination, and Delivery status). In this project, we assume that the maximumnumbers of item records are 50 and the maximum numbers of characters for name of item,recipient, destination and delivery status) are 30.The format and example of data stored in the data file “inventory.txt” are listed as follows:Name of item #1Item number #1Subject #1Weight #1Quantity #1Recipient #1Final Destination #1Delivery Status #1Name of item #2Item number #2Subject #2Weight #2Quantity #2Recipient #2Final Destination #2Delivery Status #2Name of item #3Item number #3Subject #3Weight #3Quantity #3Recipient #3Final Destination #3Delivery Status #3...ICP Project 15-162 / 6The example of items records stored in the data file is listed as follows:Net Wi-Fi Router1001Electronics2.0 kg1Chan Tai ManKowloon BayDeliveryFujo Apple Gift SetFood25521.2kg1Cheung Wai MingYuen LongArrivalKoppo Men JacketFashion30030.5kg2Lee Siu YuSha TinWarehouse...ICP Project 15-163 / 62) Project RequirementsIn this project, students are required to form groups in the same class (4 to max. 5 students pergroup) to develop a C program (Standalone Console-Based Application) for the inventorymanagement and record system. The C program for this system must include two parts: (1) BasicFunctions (group part), and (2) Extra Functions (individual part).The example of Basic Functions (group part) of the system is shown as follows:2.1) Requirements for Basic Function (Group Part)The following functions must be supported in the system: Main Menu: in the main() functiono Show menu page when the program is executed or selected option is completed.o After the main menu is shown, wait for user to input a number (or character) fromoptions above. Option ‘1’: Add new item record(s)o Add a new item in the system and store the information of such item in a data file“inventory.txt”.o Record “Name of item”, “Item number”, “Subject”, “Weight”, “Quantity”, “Recipient”,“Final destination” and “Delivery status”.o Ask user to add another new item (if Yes, repeat the step; if No, go back to menu page).ICP Project 15-164 / 6 Option ‘2’: Display item(s)o Load and display the items in the system from the corresponding data file“inventory.txt”.o Display all the item information (Name of item, Item number, Subject, Weight, Quantity,Recipient, Final destination, and Delivery status) line by line on screen. Option ‘3’: Modify item record(s)o Update the existing item record and store it to the corresponding data file.o Ask user to change another item record (if Yes, repeat the step; if No, go back to menupage). Option ‘4’: Delete item record(s)o Delete the existing item record and update the records in the data file.o Ask user to remove another item record (if Yes, repeat the step; if No, go back to menupage). Option ‘5’: Search item informationo Search and display the item information you searched on screen from the correspondingdata file “invenotory.txt”.o Ask user to search another item record (if Yes, repeat the step; if No, go back to menupage).2.2) Requirements for Extra Function (Individual Part)Each group member is required to develop an extra function (e.g. create a new Option ‘6’ or a newfunction, etc.) and integrate to the system for this project. These extra functions can be contributedand integrated to the system so as to perform various specific tasks or related purposes. There is noconstraint on the function features (except user login with password).Input dataAdd data for next itemICP Project 15-165 / 63) Submission3.1) Softcopiesa) Programming Codes and Files:Softcopies must be submitted to SOUL by a group representative before the deadline. (Grouprepresentative is necessary to compress all files/folders into single file for submission)o Save in a FOLDER named “icpClassNo_GroupNo_Basic” Source (.c) files: All program files with the basic function only Executable (.exe) file: Executable file “icpClassNo_GroupNo_Basic.exe” Data files: Data is stored in txt (or dat) fileo Save in a FOLDER named “icpClassNo_GroupNo_Basic&amp;Extra” Source (.c) files: All program files with the basic and extra functions Executable (.exe) file: Executable file “icpClassNo_TeamNo_BasExtra.exe”. Data files: Data should be stored in txt (or dat) file. A readme file can be attached in the folder to give details of the extra functions(Remark1: Two folders – Both 1) Basic function, and 2) Basic with Extra Functions are necessaryto submit for program comparison and verification)(Remark2: Programming codes or statements must include comments for description orexplanation)b) Project Presentation PowerPoint file: named icpClassNo_GroupNo.ppt (or .pptx),The contents of the presentation PowerPoint includes:- Job distributions,- Overview of project,- Programming techniques used in the basic functions, and- Programming techniques used in the extra functions,(Remarks: Full programming codes are not necessary to show on the PowerPoint slides.)c) Project Submission Form (scanned file)3.2) Project Presentation and DemonstrationProject Presentations will be held in Lesson 12. Each group has about 7 minutes includingpresentation, demonstration, etc.- All group members must participate in the presentation.- The presentation must be well-prepared as the tight presentation schedule.- A presentation PowerPoint is needed during the presentation.ICP Project 15-166 / 63.3) HardcopiesThe following materials must be submitted during the presentation.- Project Submission Form and Project Extra Function Forms for all members- Project Presentation PowerPoint (print with four slides per page and double-sided oneach A4 paper)(Important Remark: Double-check the contents in your submission, if they are the most updatedversions.)References:Website for DHLhttp://www.dhl.com.hk/tc.htmlWebsite for UPShttps://www.ups.com/hkWebsite for Taobao (delivery)http://world.taobao.com/~ END ~","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：assign2","slug":"page31","date":"2016-11-07T14:04:34.000Z","updated":"2017-01-03T09:46:19.372Z","comments":true,"path":"2016/11/07/page31/","link":"","permalink":"http://yoursite.com/2016/11/07/page31/","excerpt":"","text":"Introduction本题主要考试面向对象的类的设计思路，完成一个名字叫21点的纸牌游戏，分别设计了card类，deck类，hand类，player类，dealer类，game类完成各种功能，最后main集成驱动测试额外要求是如果牌面相同的话在比一次，对代码风格也有要求。RequirementGrading: EVERY assignment in this course is graded by demoing your work for10 minutes with a TA. You are required to meet with a TA within two weeks fromthe due date to demo, and you receive an automatic 50 point deduction forfailure to do so. If you miss a scheduled appointment, you will be penalized 10points for rescheduling within 1 day (24 hours), 25 points within 7 days (1 week),and 50 points for anything outside of a week. Your job is to convince the TA thatyour program works correctly, i.e. show your TA how to use/break your program☺(90 pts) Implementation: Problem StatementYou will write a program to play blackjack using C++ classes. Blackjack is a cardgame that has a dealer and 1 or more players who are trying to get a hand closest to 21without going over. Aces can be 1 or 11, whichever is to your advantage, and all facevalue cards (Jack, Queen and King) have a value of 10.The players begin with a specific amount of money, and only the players can betagainst the dealer. First, everyone decides how much he/she wants to bet. Then,everyone is dealt 2 cards face up, and the dealer gets one face up and one face down.Each player decides whether to receive another card or not without going over 21. Ifthe player goes over 21 (or busts), then he/she immediately loses their bet from theirtotal playing money. After all players finish receiving cards, then the dealer turns overthe card that is facing down, and the dealer must receive a new card if the total is below17 and stay/hold if the total is 17 or above. The players with totals over 21 immediately lose their bet from their playing total. If the dealer goes over 21, then the players with 21 and under all win their bet,which is added to their playing total. If the dealer is 21 or under, then the players with card totals less than the dealerlose their bet from their playing total, and those players with card totals greaterthan the dealer win their bet, which is added to their playing total. Players who have the same card total as the dealer neither win nor lose, theirplaying total remains unchanged. Players who have a card total of 21, blackjack, win 1.5% their bet to their playingtotal.You will be required to have the following classes and members. However, youmay add more members and functions, based on your design. You will make .cppfiles for each class, .h, interface file. Make sure you include the correct .h fileswith the .cpp files.//card.h interface fileclass card {private:int value; //1-13char suit; //4 each: club, spade, heart, diamondpublic://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//deck.h interface fileclass deck {private:card cards[52];int num_cards;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//hand.h interface fileclass hand {private:card cards;int num_cards;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//player.h interface fileclass player {private:hand p_hand;int playing_total;int card_total;int bet;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//dealer.h interface fileclass dealer {private:hand d_hand;int card_total;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};//game.h interface fileclass game {private:deck cards;player players;dealer game_dealer;int num_players;public://must have constructors//must have destructors//must have accessor functions//must have mutator functions};Your program must be able to: Setup a deck of 52 cards with spades, clubs, diamonds, and hearts of 2-10, Jack,Queen, King, and Ace for each suit. Shuffle the deck of cards before playing any game. Determine how many players and the playing total for each. Make sure that a player’s bet is less than or equal to the playing total. Determine when a full deck has been dealt, and reshuffle. You should not have any memory leaks in your program.Extra Credit (10 pts):In blackjack, if a player starts with doubles (cards with the same value), then the cardscan be split into different hands. The player is given two cards, one for each hand, andthe dealer now gets two cards for a different hand. After the first hand is played, thenthe second hand is played between the dealer and the player who split.(10 pts) Program Style/CommentsIn your implementation, make sure that you include a program header in your program,in addition to proper indentation/spacing and other comments! Below is an exampleheader to include. Make sure you review the style guidelines for this class, and begintrying to follow them, i.e. don’t align everything on the left or put everything on one line!http://classes.engr.oregonstate.edu/eecs/spring2016/cs162-001/162_style_guideline.pdf/** Program: play_game.cpp Author: Your Name Date: 04/20/2016 Description: Input: Output:**/Electronically submit your C++ program (.h, .cpp, and Makefile files, not yourexecutable!!!) and your test files as a tarred archive by the assignment due date, usingTEACH.You must tar these files together using the following command:tar –cvf assign2.tar card.h, card.cpp, deck.h, deck.cpp, hand.h,hand.cpp, player.h, player.cpp, dealer.h, dealer.cpp, game.h, game.cppplay_game.cpp Makefile*NOTE: The easiest way to upload your program from ENGR to TEACH is to map anetwork drive to your home directory on ENGR. Mac or Windows, See:http://engineering.oregonstate.edu/computing/fileaccess/","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：Review Programming in C++","slug":"page30","date":"2016-11-06T15:14:24.000Z","updated":"2017-01-03T09:25:55.774Z","comments":true,"path":"2016/11/06/page30/","link":"","permalink":"http://yoursite.com/2016/11/06/page30/","excerpt":"","text":"Introduction写一个统计城市欢迎度的管理系统，涉及到指针操作，从文件读取信息。增删改查求平均值等等基本功能，还要自己创建makefile，在linux平台下运行，最后完成测试RequirementGrading: EVERY assignment in this course is graded by demoing your work for10 minutes with a TA. You are required to meet with a TA within one week afterthe due date to demo. You are penalized for failure to see a TA within the week ormissing a scheduled appointment. In either case, if you are within 1 day (24hours) of the deadline, you lose 10 points. If you are within 7 days (1 week) of thedeadline, then you lose 25 points, anything outside of a week from the deadlineto demo is an automatic 50 point deduction. Your job is to convince the TA that yourprogram works correctly, i.e. show your TA how to use/break your program☺During your time in programming, you will undoubtedly run into a situation where youwill need to go through information more than once or need to perform the same taskover and over. The way we as programmers accomplish this is through the use ofloops and functions.(90 pts) Implementation: Problem StatementYou will write a program to compare state and county information. You musthave the following structs in your program.struct county {string name; //name of countystring city; //name of cities in countyint cities; //number of cities in countyint population; //total population of countyfloat avg_income; //avg household incomefloat avg_house; //avg household price};struct state {string name; //name of statestruct county c; //name of countiesint counties; //number of counties in stateint population; //total population of state};You will receive the number of states and filename from the user as command-linearguments. The number supplied with the –s option is the number of states to becreated and the text following the –f option is the filename with the state/countyinformation: a.out –s 2 –f states1.txtThis would create a dynamic array of 2 states on the heap, and you would read the restof the information about the state and counties from a file. Each line in the file willcontain the information for each state and county in the following order:State_name state_pop #_countycounty_name county_pop county_income county_house #_cities city_nameExample:Oregon 1000000 2Benton 53000 100000 250000 1 CorvallisLane 80000 50000 150000 2 Eugene SpringfieldSouth_Carolina 1000000 2Anderson 80000 100000 80000 2 Anderson PendletonPickens 50000 50000 20000 2 Clemson PickensYour program must define the following functions, with the exact prototypes:bool is_valid_arguments(char info[]);state create_states(int);void get_state_data(state );county create_counties(int);void get_county_data(county );void delete_info(state );In addition to these functions above, you need to determine the other functions you willneed to print information answering the following information: the state with the largest population, the county with the largest population, the counties with an income above a specific amount, (You must get input fromthe user for this!!!) the average household cost for all counties in each state, the states in sorted order by name, the states in sorted order by population, the counties within states sorted by population, the counties within states sorted by name.You need to separate your files into interface and implementation and create a Makefileto handle the compilation. Create a state_facts.h, which has the struct type for statesand counties, as well as the function declarations for your program. Now, separate yourfunction definitions into a state_facts.cpp file and your main function into arun_facts.cpp file. Now, create a makefile that will create a state_facts executablegame and clean your files.Your program must be able to: Print a usage message to the user when too few arguments are supplied orwhen the options are not –s or -f. You do not need to recover from this, justhandle by printing a message. Print an error message and recover, when the user doesn’t supply positive,non-zero integer for the states value. Print an error message and recover, when the player doesn’t supply a validfilename to open. Provide the stats for the states. Continue to ask for new states and new filename. Make sure you do not havea memory leak!!!!!(10 pts) Program Style/CommentsIn your implementation, make sure that you include a program header in your program,in addition to proper indentation/spacing and other comments! Below is an exampleheader to include. Make sure you review the style guidelines for this class, and begintrying to follow them, i.e. don’t align everything on the left or put everything on one line!http://classes.engr.oregonstate.edu/eecs/spring2016/cs162-001/162_style_guideline.pdf/** Program: run_stats.cpp Author: Your Name Date: 04/08/2016 Description: Input: Output:**/Electronically submit your C++ program (.h, .cpp, and Makefile files, not yourexecutable!!!) and your test files as a tarred archive by the assignment due date, usingTEACH.You must tar these files together using the following command:tar –cvf assign1.tar facts.h facts.cpp run_facts.cpp Makefile test.txt**NOTE: The easiest way to upload your program from ENGR to TEACH is to map anetwork drive to your home directory on ENGR. Mac or Windows, See:http://engineering.oregonstate.edu/computing/fileaccess/","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：Assignment","slug":"page29","date":"2016-11-06T00:26:44.000Z","updated":"2017-01-03T09:24:18.899Z","comments":true,"path":"2016/11/06/page29/","link":"","permalink":"http://yoursite.com/2016/11/06/page29/","excerpt":"","text":"Introductionc++实现一个动态数组，不能使用stl的vector， 动态数组需要实现自己的内存扩展，constructor和destructor， 然后还有题目要求的tail，head， sort等等函数。最后在main里面完成自己实现的函数的单元测试RequirementP a g e | 1CMPSC 122 – Intermediate ProgrammingAssignment #4Spring 2016Due Date: Monday, March 28, 2016Total Points: 100Implement a generic (template) class called MyArray. A generic class is a general version of a class; itis a homogenous data structure that handles multiple data types. MyArray will be similar to C++arrays but will not be constrained to a fixed size. The array size will grow dynamically when the userinserts an element to a full array. The class should not use vectors. Instead, you should usedynamic memory allocation (a dynamic array).The class should use three member variables:- myarray: the dynamic array- size: the current size of the array- used: the number of elements currently used in the arrayThe class should have the following functionalities:? A default constructor that initializes the size of the array to 5.? A default destructor that frees the dynamic memory that was allocated.? int length( ) a method that returns an integer value indicating the number of elementscurrently used in the array.? void insertHead(Item i) a method that inserts a new item making it the first element in thearray. If the array is full, then a new dynamic array of double the size should replace theexisting array.? void insertTail(Item i) a method that inserts a new item making it the last element in thearray. If the array is full, then a new dynamic array of double the size should replace theexisting array.? void deleteHead( ) deletes the first element in the array.? void deleteTail( ) deletes the last element in the array.? void sortAscending( ) sorts the elements of the array in ascending order. Use bubbleSort todo that.? void sortDescending( ) sorts the elements of the array in descending order. UseinsertionSort to do that.? C++ allows the overloading of the [ ] operator. This feature makes it possible to accessan element in a MyArray object in an array-like behavior. Overload this operator andmake sure to have boundary checks using assertions. If the user tries to access anelement outside the range of the array or at a location that is not used yet then an errormessage should be displayed on the screen.For example, the following code:P a g e | 2MyArray a1;cout &lt;&lt; “Number of elements in a1= “ &lt;&lt; a1.length() &lt;&lt; endl;a1.insertTail(35);a1.insertTail(45);a1.insertHead(55);a1.deleteTail();for(int i =0; i &lt; a1.length(); i++)cout &lt;&lt; a1[i] &lt;&lt; endl;Will result in:Number of elements in a1= 05535If we try any of the two instructions the result should be an assertion error:cout &lt;&lt; a1[4]; //Subscript uninitialized.cout &lt;&lt; a1[14]; //Subscript out of range.Write a main( ) method that provides a menu driven interface that allows the user to test whethereach member function of myArray is working properly. The menu should provide the followingfunctionalities:o Create a new array: allows the user to create an array of one of the following types: bool, char,double, float, int, stringo Get Length: the current number of elements used in the arrayo Insert a new element at the head of the arrayo Insert a new element at the tail of the arrayo Delete the first elemento Delete the last elemento Sort the elements in ascending ordero Sort the elements in descending ordero Print all the elements in the arrayo Quit the programWhat to hand inPlease submit your C++ source file electronically through Angel.","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：ECE 275 ­ Project 3","slug":"page28","date":"2016-11-04T21:24:54.000Z","updated":"2017-01-03T09:22:46.548Z","comments":true,"path":"2016/11/05/page28/","link":"","permalink":"http://yoursite.com/2016/11/05/page28/","excerpt":"","text":"Introductionc++模拟一个汽车运动模型，文件输入运行轨迹，车辆情况等等。根据一些数学和物理的公式，计算最后的汽车运动情况，同时考虑到c++的类的设计，要求类设计完好。control类，driver类，read类，write类等等功能分离使得思路更加清晰代码明了RequirementUsageUsage: catcar controlInputs stateOutputsRequirements SummaryCreate a C++ program that reads control inputs for a self­driving car from an input file. The program will simulate the car’sstate over the time horizon given by the control inputs, and write the results to an output file. The major problem is: the inputfile was written in such a way that the control inputs are stored out of order!Assignment NameThe assignment name for this assignment is: ​catcar1. Kinematic Model SimulationIn this project, you will create a program that controls an autonomous vehicle from an input control file. The only problem isthat the input controls are jumbled, since a function that operated on the linked list that stored them was badly designed: theywere stored in order in a queue, but the queue was designed by a Visual Basic programmer who doesn’t understand memory.They printed the nodes out by order of memory address of the list nodes, instead of by the node order prescribed by the nextpointers.So you need to put them back in the right order before proceeding. This program will read in time value at which thiscommand should be executed, then the commanded speed, and tire angle. The duration of the command is the differencebetween this command’s time value, and the next time value (when the nodes are in order), at a maximum of 201 ms. If thereare any durations longer than 201 ms, the input file should be declared invalid, and no simulation should take place.With this sequence of commands, you should save the vehicle’s state at each time step. During the execution of controlcommands, this program will record the vehicle’s state as it moves (or stands still), and save the output states to a file.2. File Format2.1 controlInputsFor this assignment, the input text file will consist of control information, each line contains sample time (in seconds),commanded vehicle velocity (m/s), and tire angle rate (radians/s), with elements separated by whitespace (even the firstnumber could be padded by a whitespace in the front). All values should be stored as doubles.0.06 5 0.5230.02 20 ­0.5230.07 8 00.00 0 0In this example, at time 0.06 the vehicle should take in as its input command a velocity of 5, with a tire­angle rate of 0.523,for 0.01 seconds. The duration of 0.01 is determined by looking at the next time step (after the vector is confirmed to besorted), and taking the difference (0.07 ­ 0.06).Clearly the above example is an extreme case of driving aggressively. Your program should run regardless of the unlikelycontrol inputs, as long as the below conditions are met:­ The rst element of the sorted list must be at exactly time 0.­ Commanded tire angle rate must be between [?­0.5236, 0.5236] radians/sec (i.e., / 6 radians/sec). ±π­ Commanded velocity must be between [0, 30] m/s;­ Time values must be non­negative; and­ Duration between sorted input objects must be between [5, 201] ms.If any of these are violated for any input value in the file, then the ​controlInputs file is deemed invalid, and an emptyoutput file is written. If at any time a line fails to parse, then the file should be declared invalid. This policy is for safety: youwouldn’t want to start controlling an autonomous car if you accidentally passed in the wrong file, and it started somehowparsing lines!2.2 outputFileThis assignment should output a file with information on the state values of the vehicle throughout its journey. The format forthis file is one called csv (comma separated values), and is common for inputting data into MATLAB. Each output entry is asfollows:t,x1,x2,x3,x4\\nWhere t is the time at which this state value was measured, and the values in x are given by the kinematic equation (1). Theprecision for each value should be whatever is the default when using C++ iostream methods.If the control inputs are determined to be invalid, you should create an empty file with the name provided from the commandline.3. Vehicle ModelYou are developing a vehicle simulator, which describes the kinematic motion of a front­steered, two­wheel drive vehicle.The vehicle you are simulating is visually depicted below. The equations of motion for this vehicle are provided in (1).x​1 ​ = ​u​1 ​ cos(​x​3​ ) cos(​x​4​ )(1)x​2 ​ = ​u​1 ​ cos(​x​3​ ) sin(​x​4​ )x​3 ​ = ​u​2x​4 ​ = ​u​1 ​ (1/L) sin(​x​3​ )Where ​x​1 is translational forward motion, ​x​2 is translational left/right motion, x​3 is the tire angle, and ​x​4 is the heading of thevehicle. For control inputs, ​u​1 represents vehicle velocity, and ​u​2 represents angular rate of change for the tire angle. Thewheelbase L is defined in the Vehicle.h header file.Using a simple discretization of these differential equations with a duration ​t​, we can use the following equations for motion:x​1​ (​t​+∆​ t​ )​ ​ = ​x​1​ (​t​) + ∆​ t​ ​u​1​ (​t​)​ ​ cos(​x​3​ (​t​)) cos(​x​4​ (​t​)) (2)x​2 ​ (​t​+∆​ t​ ) = ​x​2 ​ (​t​) +​​∆​ t​ ​u​1​ (​t​)​ ​ cos(​x​3​ (​t​)) sin(​x​4​ (​t​))x​3 ​ (​t​+∆​ t​ )​ ​ = ​x​3 ​ (​t​) + ​​∆​ t ​ u​2​ (​t​)x​4 ​ (​t​+∆​ t​ ) = ​x​4 ​ (​t​) + ​​∆​ t ​ u​1 ​ (​t​) (1/L) sin(​x​3​ (​t​))The value for ​x​3 (tire angle) must always be between [?­0.5236, 0.5236] radians/sec (i.e.,/ 6 radians/sec). If a value is ±πcommanded outside this range, then ​x​3 should saturate using the above range. Ex: If the tire angle rate is commanded to bethe value 0.7156, the tire angle rate should equal the maximum value of 0.5236.The heading should always be between [0, 2 ). If the heading is a negative value, the heading should be converted into the πrange [0, 2 ) by repeatedly adding 2 . Ex: If the heading is ­.5 , the heading can be converted to ­0.5 +2 = 1.5 . π π π π π πDefined values are present for these ranges inside of ​State.h4. Class designsThe following class definitions must be used for the indicated classes. You may (if you wish) create your own classes to doother tasks. The below classes are prescribed in whole (or in part):Input​, ​State​, ​Vehicle​ (must use exact prescribed class definitions)DataSource​, ​DataSink​, ​Director​ (are at your discretion, except for the sort method prescribed).4.1 Classes that must use prescribed definitionsPlease use the exact interfaces for Vehicle, State, and Input, or your alpha release may not compile. These are the only classesfor which the design is fixed.4.1.1 InputThe ​Input class holds the values for the u variables used in the kinematic model. Its interface is included on Piazza as aresource for this Project.4.1.2 StateThe ​State class is similar to Input, and its interface is included on Piazza as a resource for this Project. However, it doesensure that tire angle values and heading values stay within the designated ranges if the setters for the class are called.4.2 VehicleThe ​Vehicle class executes a control input for the designated duration. The interface is included on Piazza as a resource forthis Project.The ​Vehicle keeps its own state, receives a control input, and updates its state. The initial state value for the ​Vehicle isx​1 = 0, x​2​=0, ​x​3 = 0, and ​x​4 = 0, e.g., (0, 0) position, tire angle of 0, and heading of 0. The ​Vehicle class assumes that anyinvalid input values have been removed, so it does not do any error checking. The class does not permit anyone to update itsstate, except by providing an ​Input​ object through the ​stateUpdate​ method prescribed in the header file.4.3 Classes left largely to your design discretionAnything you want to add to the interface for ​DataSource​, ​DataSink​, or ​Director​ is up to you.The ​DataSource class keeps a vector of ​Input objects (control inputs), in order. Likewise, the ​DataSink class keeps avector of ​State​ objects (state outputs), in order.The ​Director​ is used to pass ​Input​ values along to the ​Vehicle​.Hint​: The ​bool data type is defined in C++, so it won’t work if you try to include the headers from previous projects. Use,instead, the builtin type from C++ for bool functionality.5. Recommended Functional DecompositionIn C++, global functions are a sign of a bad design. Rather, you provide methods inside the scope of a class. If you use globalfunctions for this assignment, you will receive significant design deductions. Just like in C programs, your main functionshould be small. If yours includes lots of logic, rather than depending on the methods of classes, you will receive significantdesign deductions.5.1 Reading Control InputsDefine a class method (not a global function) that reads all the control inputs from a provided filename. As you read them in,don’t worry about how they’re sorted. The inputs will be stored in a vector in the class. I think you can figure out which classthis should be.5.2 Sorting Control InputsPuts the control inputs in order of their timestamp. The interface for the sort function should be:void​ sort (); ​// performs qsortIf your algorithm does not perform quicksort, you will receive a deduction. Insertion and bubble sort are each unacceptable.You should write your own sort routine, not use the sort routines in STL or any other library. You are, of course, welcome touse other implementations to confirm that your qsort implementation is working, as part of your own tests. The inputs will bealready be stored in a vector in the class. I think you can figure out which class this should be.5.2.1 Validating Control InputsThis method should be part of the ​DataSource​ class. The interface for this method should be:// should be called only after the vector is sorted// returns true if the vector in Input objects is validbool ​validate ();The vector of ​Input​ objects is invalid if any of the criteria from Section 2.1 are discovered.5.3 Writing State OutputsDefine a class method (not a global function) that writes a vector of ​Output objects to a file of the provided filename. Ithink you can figure out which class this should be.5.4 Driving the CarOnce you have an (ordered) set of control inputs, you need a ​Director to coordinate the consumption of inputs, and saveeach output. The ​Director will take the next Input (stored and sorted by the ​DataSource​) to the vehicle, fetch thatOutput​, and store it in the output vector in the ​DataSink​. When the last ​Input is consumed, a duration of 200 ms shouldbe used. After simulating this ​Input​, the simulation is ended. In order to do this, the ​Director will “contain” a ​Vehicleobject, and decide how to interact with it.Part of the assignment is coming up with and writing the pseudocode for this algorithm, in order to stage your design.5.5 What goes in main, then?In your main function, you should instantiate your classes, check your arguments and return the usage statement. Put all thelogic and error handling for file I/O, initialization of the ​Vehicle​, etc., in your methods as defined in your other files and inthe order that makes sense. You want your main to be very simple, so that if you want to reuse your code, you can do sowithout a main function.Generally, part of assignments going forward include coming up with and writing the pseudocode for this algorithm, in orderthat your design can be performed in stages. To bootstrap this process, we provide as an example how to sketch an algorithmis pseudocode below:check usageopen input file, and output fileexecute director while inputs execute input(s) save output(s)write and close output file, input file6. Alpha SubmissionYour alpha assignment is to implement the Vehicle class methods, and turn in your ​Vehicle.cpp file to the dropbox calledProject 3 (alpha) on D2L. We will use your file with our own main function and test files, to check the behavior of each ofthe ​Vehicle methods we prescribe. Use the same ​vehicle.h ​file given above and provided from the website, or be indanger of your alpha not compiling.As a note, you will have to complete your implementation of ​Input and ​State in order to test your alpha on your own.Submit only your ​Vehicle.cpp ­­ ​do not submit implementations for Input and Output​, we will use our own. We havealready included ​Input.h and ​State.h in our ​vehicle.h interface definition, but you may need to include otherheaders for standard C++ functionality in your cpp file. We do not recommend including headers for other custom classes inyour cpp file, since you will not be submitting those headers or their implementation.","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"C++代写：FinalProject-SuperString.v3","slug":"page27","date":"2016-11-04T10:34:24.000Z","updated":"2017-01-03T09:19:06.729Z","comments":true,"path":"2016/11/04/page27/","link":"","permalink":"http://yoursite.com/2016/11/04/page27/","excerpt":"","text":"Introduction自己实现一个类似stl的string库的superstring，对string功能进行扩展，包括自己实现 ==, !=, &gt;, &lt;, &gt;=, &lt;=.等操作符的重载，构造函数，find函数，trim函数，insert，replace，还有类型转换等等函数的实现，难度不大，但是工作量很大。RequirementSET-252 C Programming #2Homework: SuperString – Final Project ( 30% of your final grade )Warning: You fail the course if you fail the final project.Warning: Your final grade for the course cannot be higher than your final project grade.Warning: You cannot consult with any student that has already completed this project.Warning: You cannot view, use or reference any code for this project written by students that have taken this course in the past.Step 1Implement the following class header file (i.e. write the cpp file).You may add any other properties and/or methods that you need. You might want to check with me before adding them just to make sure you’re on the right track.Write a main function that will test all the different methods. Make sure your main function is easy to read and understand. I recommend you use regions and procedures to break up the logic. You can easily comment out a call to previously made procedures so you can test only the current procedure that you are working on.You may use any string functions you want (e.g. strlen, strstr, etc).You may not use the built-in String class.In addition to the methods listed below, overload the following operators with all reasonable parameters (i.e. char, const char , CSuperString &amp;): ==, !=, &gt;, &lt;, &gt;=, &lt;=.NONE of the class methods other than the constructors or the assignment operators ( = and += ) should change m_pstrSuperString.You must assign the value back to the class instance to make it permanent. For example:ssBuffer = ssBuffer.ToUpperCase( );Minus one letter grade for any memory leak. Minus two letter grades if there are a lot of memory leaks.Minus one letter grade if replace with substrings doesn’t work correctly.Minus one letter grade if self assignment doesn’t work correctly (e.g. ssBuffer = ssBuffer.ToUpperCase( ); ).Minus one letter grade if you don’t solve the double call problem. The following should display correctly:printf( “Left( 2 ): %s, Left( 4 ): %s\\n”, ssBuffer.Left( 2 ), ssBuffer.Left( 4 ) );Splitting the code up into two lines is not the solution.Add the following procedure to your tests and make sure it executes without errors.void MuahahahTest1( ){CSuperString ssTest;cout &lt;&lt; “Muahahah Test #1: “ &lt;&lt; ssTest &lt;&lt; endl; }Add the following procedure to your tests and make sure it executes without errors.void MuahahahTest2( ){CSuperString ssTest = “I Love Star Wars and I Love Star Trek”;ssTest = ssTest.Replace( “Love”,”Really Love Love” );cout &lt;&lt; “Muahahah Test #2: “ &lt;&lt; ssTest &lt;&lt; endl; }I recommend you start with just the following methods, get those working and code, test and run additional methods one at a time: constructor, initialize, assignment operator, deep copy, to string and print.Next, I’d recommend you get all the other constructors done.After that, I’d recommend you get all the “to ” methods done.// ——————————————————————————–// Class: CSuperString// ——————————————————————————–class CSuperString{ private: char m_pstrSuperString; public: // Constructors CSuperString( ); // Parameterized/Copy constructors // CSuperString ssBuffer( “I Love Star Trek” ); // CSuperString ssBuffer( 3.14159f ); CSuperString( const char pstrStringToCopy ); CSuperString( const bool blnBooleanToCopy ); CSuperString( const char chrLetterToCopy ); CSuperString( const short shtShortToCopy ); CSuperString( const int intIntegerToCopy ); CSuperString( const long lngLongToCopy ); CSuperString( const float sngFloatToCopy ); CSuperString( const double dblDoubleToCopy ); CSuperString( const CSuperString &amp;ssStringToCopy ); // Destructor virtual ~CSuperString( ); long Length( ) const; // Assignment Operators void operator = ( const char pstrStringToCopy ); void operator = ( const char chrLetterToCopy ); void operator = ( const CSuperString &amp;ssStringToCopy ); // Extra credit for numeric parameters // Concatenate operator void operator += ( const char pstrStringToAppend ); void operator += ( const char chrCharacterToAppend ); void operator += ( const CSuperString &amp;ssStringToAppend ); // Extra credit for numeric parameters friend CSuperString operator + ( const CSuperString &amp;ssLeft, const CSuperString &amp;ssRight ); friend CSuperString operator + ( const char pstrLeftSide, const CSuperString &amp;ssRightString ); friend CSuperString operator + ( const CSuperString &amp;ssLeftString, const char pstrRightSide ); long FindFirstIndexOf ( const char chrLetterToFind ); long FindFirstIndexOf ( const char chrLetterToFind, long lngStartIndex ); long FindLastIndexOf ( const char chrLetterToFind ); long FindFirstIndexOf ( const char pstrSubStringToFind ); long FindFirstIndexOf ( const char pstrSubStringToFind, long lngStartIndex ); long FindLastIndexOf ( const char pstrSubStringToFind ); // Do not change original string. For example: // cout &lt;&lt; ssBuffer.ToString( ) &lt;&lt; endl; // I Love Star Trek // cout &lt;&lt; ssBuffer.ToUpperCase( ) &lt;&lt; endl; // I LOVE STAR TREK // cout &lt;&lt; ssBuffer.ToString( ) &lt;&lt; endl; // I Love Star Trek const char ToUpperCase( ); const char ToLowerCase( ); const char TrimLeft( ); const char TrimRight( ); const char Trim( ); const char Reverse( ); const char Left ( long lngCharactersToCopy ); const char Right ( long lngCharactersToCopy ); const char Substring ( long lngStart, long lngSubStringLength ); const char Replace ( char chrLetterToFind, char chrReplace ); // Hard const char Replace ( const char pstrFind, const char pstrReplace ); const char Insert ( const char chrLetterToInsert, long lngIndex ); const char Insert ( const char pstrSubString, long lngIndex ); // Subscript operator char&amp; operator [ ] ( long lngIndex ); const char&amp; operator [ ] ( long lngIndex ) const; const char* ToString ( ); bool ToBoolean ( ); short ToShort ( ); int ToInteger ( ); long ToLong ( ); float ToFloat ( ); double ToDouble ( ); // cin &gt;&gt; ssBuffer; // cout &lt;&lt; ssBuffer; friend ostream&amp; operator &lt;&lt; ( ostream &amp;osOut, const CSuperString &amp;ssOutput ); friend istream&amp; operator &gt;&gt; ( istream &amp;isIn, CSuperString &amp;ssInput ); // Don’t forget the comparison operators!!!};","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：COMP1040_HW2","slug":"page26","date":"2016-11-03T04:24:58.000Z","updated":"2017-01-03T09:15:46.141Z","comments":true,"path":"2016/11/03/page26/","link":"","permalink":"http://yoursite.com/2016/11/03/page26/","excerpt":"","text":"Introduction一个c++的小练习题，练习class的使用。实现一个Point类和circle类，包括构造函数还要一些基本函数的方法，计算圆的面积，最后在main函数创建对象完成测试。RequirementDefine a class called Point.The Point class should contain a constructor which takes float x and float y as parameters.Save these arguments as class variables.Give the class appropriate getters and setters.Define a class called Circle.The Circle class should contain a constructor which takes Point center and float radius asparameters.Save these arguments as class variables.Give the class appropriate getters and setters.The class should have a toString method which should return the contents of the class as a String inthe form: Circle at x:50, y:25, radius:20.The Circle class should have an additional method called calculateArea() which returns the area ofthe circle.Create a Circle object and test it a number of times by changing the radius of the object andcalculating the area.For example:Circle at x:50.0, y:25.0, radius:20.0Area: 1256.6371Circle at x:50.0, y:25.0, radius:70.0Area: 15393.805","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"C++代写：CS2401 STL Container","slug":"page25","date":"2016-11-02T07:25:28.000Z","updated":"2016-11-03T08:20:05.177Z","comments":true,"path":"2016/11/02/page25/","link":"","permalink":"http://yoursite.com/2016/11/02/page25/","excerpt":"","text":"IntroductionSTL容器的Lab作业，基础用法，并不难，只不过要过测试集，细节方面还是要注意的。RequirementThe purpose of this lab is to gain some familiarity with an STL Container, and the use of an external iterator. For this lab you will NOT be creating any classes of your own. In fact you can do the whole lab in the main, although I think that you will see that it is highly advisable to have at least one non-member function since there is a task that is repeated.Begin by copying the file names.txt to your working directory. This file has a long list of first names, all taken from some of my classes. Briefly open it and look at it, or just skim through it with more names.txtAt the top of your program #includeas well as iostream, string, and fstream. Declare a multiset that is capable of holding strings.Fill the multiset with all the names in the file. (Since there are no spaces in the names you can use &gt;&gt; or getline.)Now declare an iterator that is appropriate for traversing the multiset. Set it to the beginning of the multiset full of names, and walk through the list, outputting each name it finds. (There are a lot of them, so you may want to separate them with spaces instead of putting one on each line.)Run and test this program. Your name should be somewhere in the list. (Note that the names are now in alphabetical order.)Here is the place where you want to pass your STL container to a non-member function, since we are doing something that is basically the same three times in a row. If you do you should pass the container by const and reference, since it is large. You will probably want one additional parameter.Declare two iterators.Move one of them through the list to the first name that begins with ‘M’. Since you know it is returning a string, you will know that (it).at(0) will return the first character in that string.Now set the second iterator equal to the first. Use it to count how many M names there are in the list. Print this number out.Using the second iterator, print out all the M names in reverse alphabetical order. (Remember that these are bidirectional iterators, so you –it works to go backwards.)Now do the above three steps for all the ‘C’ names and then for all the ‘Q’ names.If I had asked for ‘Y’ (I didn’t) the output would look like:There are 3 Y names in the listThey are:Yujia Yuanhang YingjieThis program has no user interaction. When you have it working, simply start a script file, run the program once, and close the script file.Submit your source code and the script file to Blackboard.","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Java代写：CMSC132 Six Degrees of Kevin Bacon","slug":"page24","date":"2016-11-01T05:12:24.000Z","updated":"2016-11-03T08:18:34.588Z","comments":true,"path":"2016/11/01/page24/","link":"","permalink":"http://yoursite.com/2016/11/01/page24/","excerpt":"","text":"Introduction这次需要代写的Java编程作业，考察Graph的知识点，读文件构造Graph，然后按条件用BFS搜索，并最终输出结果。Requirementn this project, you write a program that will help you play the “Six Degrees of Kevin Bacon” game. This game is played on a graph of movies and actors/actresses who starred in them. The Bacon Number is defined as follows: Kevin Bacon has a Bacon Number of 0; people who co-starred in a movie with Kevin Bacon have a Bacon Number of 1; people who co-starred in a movie with someone who has a Bacon Number of 1 in turn have a Bacon Number of 2; and so on. Given any actor/actress, the goal of the game is to establish their Bacon Number by a sequence of movies and co-stars. As shown in Figure 1, Bill Murray has a Kevin Bacon number of 1, because co-starred in “Wild Things”, while Cameron Diaz has a Kevin Bacon Number of 2, because she she co-starred with Bill Murray in “Charlie’s Angels”.For example, using the “action” data set given below, we can show that “Al Pacino” has a Bacon Numberof 3 as follows:Pacino, Al Heat (1995)Rosales Jr., Thomas Lost World: Jurassic Park, The (1997)Richards, Ariana Tremors (1990)Bacon, KevinKevin Bacon (0) starred in Tremors with Richards, Ariana (1) who starred in Lost World: Jurassic Park, The (1997) with Rosales Jr., Thomas (2) who starred in Heat (1995) with Pacino, Al (3). If we use the “all cast” data set given below, we can show that “Al Pacino” has a Bacon Number of 1 as follows:Pacino, Al Boffo! Tinseltown’s Bombs and Blockbusters (2006)Bacon, KevinKevin Bacon (0) starred in Boffo! Tinseltown’s Bombs and Blockbusters (2006) with Pacino, Al (1). Inter- estingly this works way in the past as well:De Rosselli, Rex Lion’s Claws, The (1918)Brinley, Charles Adventure in Sahara (1938)Lawrence, Marc (I) Big Easy, The (1987)Goodman, John (I) Death Sentence (2007)Bacon, KevinTurns out that Rex De Rosselli died in 1941 and yet he has a Bacon Number of just 4. Actually Rex really has a Bacon Number of 3 but we need to use a much bigger data set “cast.all.txt” to show this:De Rosselli, Rex Dangerous Adventure, A (1922)McCullough, Philo Chamber of Horrors (1966)Danova, Cesare Animal House (1978)Bacon, KevinWe have included two data sets suitable for the program in the archive above (the data sets are courtesy of Robert Sedgewick):action06.txt (4.4 MB, only action movies)cast.all.txt (64 MB, all movies from the 2014 IMDB)The format of these data sets is rather simple: Each line is a movie, and each movie consists of several fields separated by the “/“ character. The first field is the name of the movie itself, all the following fields are the names of actors and actresses starring in the movie. For example:Heat (1995)/Daniels, Max/Perry, Manny/Marzan, Rick/Pacino, Al, …Heat After Dark (1996)/Kitami, Toshiyuki/Sugata,…Heated Vengeance (1985)/Dye, Cameron/Walker, Robert (III), …Reading this data is not complicated, but we hand you the parsing code anyway so you can focus on the search algorithm instead.In order to find the smallest Bacon Number for an actor we proceed as follows: First we identify the vertices for both Kevin Bacon and the actor in question (you already have that code). Then we start a breadth-first search at the vertex for Kevin Bacon; as we do this we keep track of the “previous vertex” that got us to the one we’re currently investigating. Once we find the vertex for the other actor, we are done: We just have to print out the path that got us here. This implementation of BFS is the only thing you have to write for this problem!You will implement following functions in the given project:1.Degree of separation from Kevin Bacon:2.Degree of separation between any two actors/actresses:3.Search actor/actress/movie:4.List cast of a movie or movies of an actor/actress:5.ExitSelect:Here is what each menu item does:Finds the Kevin Bacon number of an actor/actressFind the shortest distance between any two actors/actresses.Actors with same name has a Roman number after their names. You can enter the name and search the exact name in the database. For example, Emma Watson’s name appeared as “Watson, Emma (II)” in the movie database.If input is a movies, it lists all the case. If the input is an actor/actress, it lists all the movies he/shestarred in.terminate the program.The “Graph” class, “Bag” class are fully implemented for you. The Graph class represents an undirected graph of vertices named 0 through V - 1. It supports the following two primary operations: add an edge to the graph, iterate over all of the vertices adjacent to a vertex. It also provides methods for returning the number of vertices V and the number of edges E. Parallel edges and self-loops are permitted. This implementation uses an adjacency-lists representation, which is a vertex-indexed array of Bag objects. All operations take constant time (in the worst case) except iterating over the vertices adjacent to a given vertex, which takes time proportional to the number of such vertices.You will have add the mapping relationships between vertex symbols (name of a movie, actor, acres) and vertex number in “SymbolGraph” class. For example: in Graph 2, vertex 0 and vertex 5 can represent movies and other vertices represent actors/actresses. You also have to implement to methods to find the shortest path between two given vertices. All edges have the weight of 1. Therefore, you can also use BFS to find the shortest distance between two vertices.Before you are sure your program is running correctly, test your code with a smaller database base. Start with a file that only has 5-10 movies and actors/actresses. If you think your program is working, then try with “action06.txt”, (4.4 MB, only action movies). To try “cast.all.txt”, 64 MB, all movies from the 2014 IMDB, 300,000 movies, 900,000 actors/actresses, you have to allocate larger memory for your project. Google it for instructions to do that. If you run your program from coo and line you specify memory size in your command line. Following command allocate 2gb memory for JVM to run KevinBacon.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Python代写：CP164 Stacks","slug":"page23","date":"2016-10-30T01:32:24.000Z","updated":"2016-11-03T08:16:13.928Z","comments":true,"path":"2016/10/30/page23/","link":"","permalink":"http://yoursite.com/2016/10/30/page23/","excerpt":"","text":"Introduction这次需要代写的是一个关于Stack的Lab作业，由于是Lab作业，工作量并不大，都是基本的Stack操作。Requirementsing Versus Extending an ADTNote: In this and future labs we make a distinction between using an ADT and extending an ADT. You must be clear on this distinction:Using an ADTWhen asked to use an ADT write a program that is implementation independent, i.e. the program uses only ADT methods (such as those for a stack) and works for either the array or linked implementation of a data structure. Do not change any code in the ADT implementation files such as stack_array.py.Extending an ADTWhen asked to extend an ADT you are going to add new methods to an ADT, meaning that you are going to add code to one or both of the array or linked implementation of a data structure, such as stack_array.py.The Stack ADT (Abstract Data Type)A stack is a data structure that follows LIFO (Last In, First Out) rules. Data is added to the top of a stack and removed from the top of a stack. The Stack ADT provides methods for manipulating data in a stack.A reminder of some important points of ADT use are:No matter what the underlying implementation of the stack programs should access a stack only through these methods.As a corollary to the first point, the stack can be implemented in any number of ways so long as any given implementation follows the ADT function requirements. The implementation must invisible to the program using the Stack ADT.A stack may store any type of data, although all the data it stores should be of the same type.The following code imports a stack class and the Food class then initializes a stack:12345from stack_array import Stackfrom food import Foods = Stack() …The line:1from stack_array import Stackimports the Stack class from the library file stack_array.py. This library file can be replaced by any other file that implements the Stack ADT methods.The line:1from food import Foodgives access to the methods in the food.py library file as above.The line:1s = Stack()creates a stack named s. The stack is now ready to accept data.Project ReferencesAs we work through the term we will be creating a number of different data structures and adding more functionality to the Food library already written. Making sure that each new project has the latest version of a data structure or Food library is difficult to do if we are reduced to copying and pasting our pydev modules into each new project. Fortunately, Eclipse provides a much better mechanism to reference code. Setting up Project References allows you to link one Pydev project to another, and to use the code from one project in another with the import and from … import * statements already shown. Nothing needs to be changed in your source code.To make a reference from one project to another in Eclipse, right click on a project name in the Navigator pane. From the resulting pop-up menu click on Properties and then on Project References in the resulting dialog box.Click on the check box of all projects that you wish to reference from the current project. In this example the project album is already selected, and the project data_structures will be added as a reference. Once this is done all of the classes in both album and data_structures will be available through import statements.A few things to keep in mind when using project references:All referenced projects must be open when attempting to run a program.Submit all referenced projects as part of your Eclipse archive (.zip) file when submitting exercises or the markers will not be able to run your programs. You may select multiple projects to include in an Eclipse archive file.Do not use the same Pydev module names in two different referenced projects or Eclipse will not know which one an import statement is supposed to be referring to.Project references go one way only. If the project stacks references the project data_structures, then data_structures should not reference stacks. Circular references are a very bad idea.Upon occasion referenced projects may become ‘out of sync’ with the project that references them. To fix this, right-click on the project and choose Refresh to update Eclipse from the file system.Array-based StacksThe file stack_array.py is a text file containing the basic outline of the array-based Stack class. Copy this code into the Pydev module stack_array.py in your login_data_structures project (where login is your Network login). Thus, a student with the Network login barn4520 should name their projects barn4520_Food and barn4520_data_structures.) The Lab Instructor will walk you through this library and discuss its inner workings.Tasks(If you were unable to complete Lab 1 correctly, you may use these files: food.py, food_utilities.py, and foods.txt as the basis for your lab. These files will not be available until after the labs for the previous week are completed.)For the appropriate tasks you may download and use the Food class definition in food.py from Lab 1.For all of your data structures (stacks, queues, BSTs, etc.), put your code into libraries in your Pydev project login_data_structures.For the stack_array library complete the implementations of the is_empty, pop, and peek methods. These methods extend the Stack ADT.Write and test the following function:12345678910111213def array_to_stack(s, a): “”” ——————————————————- Pushes contents of a onto s. Use: array_to_stack(s, a) ——————————————————- Preconditions: s - a Stack object (Stack) a - a Python list (list) Postconditions: The contents of a are moved into s, a is empty. ——————————————————- “””Add this function to a Pydev module named utilities in your login_data_structures project so that you have easy access to it later.Write and test the following function:12345678910111213def stack_to_array(s, a): “”” ——————————————————- Pops contents of s into a. Use: stack_to_array(s, a) ——————————————————- Preconditions: s - a Stack object (Stack) a - a Python list (list) Postconditions: Contents of s are moved into a, s is empty. ——————————————————- “””Add this function to the Pydev module named utilities in your login_data_structures project.Write and test the following function:1234567891011121314151617181920def stack_test(a): “”” ——————————————————- Tests Use: stack_test(a) ——————————————————- Preconditions: a - list of data (list of ?) Postconditions: the methods of Stack are tested for both empty and non-empty stacks using the data in a: is_empty, push, pop, peek ——————————————————- “”” s = Stack() # tests for the stack methods go here # print the results of the method calls and verify by hand returnAdd this function to the Pydev module named utilities in your login_data_structures project.Use a list of integers to test your stack code.Re-use stack_test, but this time pass it a list of Food data. (Use the data in foods.txt).","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"为什么你需要编程作业代写帮助？","slug":"page22","date":"2016-10-27T18:22:24.000Z","updated":"2016-11-03T08:11:41.662Z","comments":true,"path":"2016/10/28/page22/","link":"","permalink":"http://yoursite.com/2016/10/28/page22/","excerpt":"","text":"IntroductionRequirement为什么你需要编程作业代写帮助？计算机编程一直都不是一个简单的领域，即使是对于那些痴迷于计算机编程的同学，乃至大神们，也很难掌握所有的理论和概念。但是，教授、讲师们不可能延长课时，让同学们有充分时间去领悟其中的精髓，甚至是精通计算机编程。那有什么办法可以让同学们熟练掌握计算机编程呢？7*24的图书馆学习吗？当然不是！俗话说的好，“火车跑得快，全靠车头带”，同学们需要的是一名专业的工程师，在前方带领大家。为什么你需要一名专业的工程师指导？同学们寻求作业代写帮助往往有下面几个原因：没有足够的时间编程，理论概念太多需要时间梳理，不知道如何调试，无法修复Bug等等。其实这些原因并不特别，在我们工程师的日常工作中，这些也都是司空见惯的事情：项目明天要上线，技术调研需要时间整理汇总，生产环境不让调试，程序有Bug等等。当我们工程师自己解决不了的时候，也是去询问更资深的工程师，甚至专家。在他们帮忙解决问题、敲代码调试的时候，我们工程师也是坐在旁边观摩学习的。专业工程师指导的好处有哪些？首先，可以随时方便的获得在线帮助，尽可能专业地回答你相关领域的问题，包括理论问题、作业讲解、例题辅导，代码调试等等，甚至可以发给你参考材料的网址，省去了你在图书馆埋头的时间。其次，专业的工程师都不会轻易放弃。对于专业的工程师来说，解决难题就是一种挑战，没有理由放弃任何难题。讲解的程序通常都是高品质的代码，结合了工程师多年的一线经验，会让你感受到醍醐灌顶，茅塞顿开的畅快。最后，专业的工程师能快速理解需求，为每名同学量身定制最实惠的价格！","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写：CIS304 Bank Account Application","slug":"page21","date":"2016-10-27T03:32:14.000Z","updated":"2016-11-03T08:09:33.396Z","comments":true,"path":"2016/10/27/page21/","link":"","permalink":"http://yoursite.com/2016/10/27/page21/","excerpt":"","text":"Introduction用Java Swing作为GUI，从文件中读取信息并显示，实现逻辑，整体控件不多，很基础的作业。RequirementWhat to turn inUse Export Project in NetBeans to export your project to a zip file, name it YourLastName_FirstName_project.zip. Send the file as a single attachment through Blackboard. The subject of this email is YourLastName_FirstName_project.NoteWrite your name as a comment line at the very beginning of each .java program: 1 point deducted for each file without your name at top.Besides this documentation, I also provide you a text file, accounts.txt (described below). You should download this text file into the directory of your Netbeans project for your programs. Make sure when accessing this text file programmatically, your program just uses the file name without explicitly providing a path (so called relative path). For instance,1File accountFile = new File(“accounts.txt”);For more information about the absolute path, refer to chapter 18 lecture slides. Failing to use the relative path loses 4 points.SuggestionsStart early and start from simple – this is VERY important. For example, begin from the week when the project is available. As the first step, you construct the GUI but not implement functions for button clicks.For the give function buttons, you may start to implement the Exit function first, and then the functions of Deposit and Withdraw buttons.Always keep a copy of your working code before you implement more requirements.Requirements in summary1) Develop a Java GUI application that reads account information from the provided text file (accounts.txt), shows all account numbers in a JComboBox, and displays other GUI controls as shown in Fig. 1;2) Exit button : Quit the application;3) Deposit button: Make a deposit to a selected account;4) Withdraw button: Make a withdrawal from a selected account;5) Transfer To button: Make a transfer from a selected account to a beneficiary account;Requirements in detailsGUI in generalOnce the program starts, it reads all account information from accounts.txt (each row in the file is a account record and is in the format ofaccountNumber&lt;&gt;openDate&lt;&gt;customerName&lt;&gt;balanceThe openDate is in the format of year/month/day.) It then fills a JComboBox with all account numbers and shows other GUI controls as in Fig. 1. Your program must be able to “read” the file of this format programmatically because when I test your project, the file content (not the format) will be changed.When you select an item (account number) from the JComboBox, the corresponding values for openDate, customerName, and balance will be shown in the three read-only text fields, and the Deposit, Withdraw, and Transfer To buttons become enabled, see Fig. 2.ExitClicking this button to close the frame and exit the program.Instead of using mouse to click the button, pressing Alt + x will also trigger the Exit button.Deposit(After selecting an account number from the JComboBox), clicking the Deposit button will popup a window as shown in Fig. 3 asking you to enter a deposit amount for the selected account. Hint: this dialog window is generated by JOptionPane.showInputDialog().If you enter a non-negative number, such as 100, the amount will be deposited to the account. See Fig 4 - the balanced is adjusted accordingly. The accounts.txt file should also be updated accordingly as well.If you clicking Cancel in Fig. 3, nothing will happen to this account.If an invalid deposit amount is entered in Fig. 3, such as -100 or $100, you will see an error message as shown in Fig 5.Hint: this dialog window is generated by JOptionPane. showConfirmDialog().Withdraw(After selecting an account from the JComboBox), clicking the Withdraw button will popup a window as shown in Fig. 6 asking you to enter a withdrawal amount for the selected account.If you enter a non-negative number, such as 100, and if the account balance is sufficient, the withdrawal will be made from the account successfully. See Fig. 7, the balanced is adjusted. The accounts.txt file should also be updated accordingly as well.If you clicking Cancel in Fig. 6, nothing will occur to this account.If an invalid withdrawal amount is entered in Fig. 6, such as -100 or $100, you will see an error message as shown in Fig 8.If a withdrawal amount is greater than the balance, you show an error message and stop the withdrawal.Transfer To(After selecting an account from the JComboBox), clicking the Transfer To button will popup a window as shown in Fig. 10 asking you to enter a beneficiary account number.If a valid account number (any number existing in the JComboBox) is entered, after click OK button, a window like Fig. 11 pops up asking for amount to transfer.If a valid amount is entered, and the balance is not less than this amount and sometimes the sum of this transfer amount and a transfer fee, the transfer will be succeeded as shown in Fig. 12 and 13. The transfer fee is only applied to account with the balance less than $10000 which is specified in AccountConstants interface (more about AccountConstants see end of this document).If an invalid beneficiary account number (i.e., a number which does not exist in the account number JComboBox) is entered in Fig. 10, Fig. 14 shows the error message.If the balance is not sufficient for the transfer amount, Fig. 15 shows the error message.If the balance is not sufficient to cover both transfer amount and transfer fee (when such a fee applies), Fig. 16 shows the error message.Design requirementsYou must have the following five classes (at least 5 points deduction for missing a required class).AccountConstants – contains two constants, CHECKING_BALANCE_THRESHOLD (value is 10000) and TRANSFER_FEE (value is 2.0). For this project, the business rule is as follows:When making a transfer to a beneficiary account, if the balance of the transferring account is less than CHECKING_BALANCE_THRESHOLD, TRANSFER_FEE is deducted from the balance after the transfer is made. If the balance is not sufficient to cover both CHECKING_BALANCE_THRESHOLD and TRANSFER_FEE (if the fee applies), the transfer should not be made. If the balance of transferring account is not less than CHECKING_BALANCE_THRESHOLD, TRANSFER_FEE is waived for this transfer.Account – transferTo() method is abstract. deposit() and withdraw() are not abstract. If you need, feel free to define other methods, such as getBalance(), in the Account class.CheckingAccount: extends Account and implements the transferTo method (refer to the above diagram). The returned value of transferTo method is defined as follows.return 0: transfer successful and without transfer feereturn 1: transfer successful and with the transfer fee appliedreturn -1: transfer unsuccessful because balance is less than transfer amount and transfer feereturn -2: transfer unsuccessful because balance is less than transfer amountAccountUtility – reads accounts.txt file, updates the file, and provides data for other programs.AccountApp – is the only Java program having the main method. This must be the only file with a main method. If not, you lose 5 points.Depending on your design and it’s your decision that you may have more Java programs than those specified above.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C代写：CS158 Find The Digits","slug":"page20","date":"2016-10-26T14:46:54.000Z","updated":"2016-11-03T08:07:20.930Z","comments":true,"path":"2016/10/26/page20/","link":"","permalink":"http://yoursite.com/2016/10/26/page20/","excerpt":"","text":"Introduction代写一个C语言的小作业，寻找一个数学问题的解RequirementGiven a positive integer (greater than zero) and a positive digit (1 - 9) find the smallest multiple of the positive integer that is composed only of digits less than or equal to the digit specified by the user.Example Execution #1:Enter a positive integer: 7Enter largest permissible digit: 3Smallest multiple of 7 containing digits less than or equal to 3 is: 21Example Execution #2:Enter a positive integer: 88Enter largest permissible digit: 5Smallest multiple of 88 containing digits less than or equal to 5 is: 352Example Execution #3:Enter a positive integer: 15Enter largest permissible digit: 2Smallest multiple of 15 containing digits less than or equal to 2 is: 120Example Execution #4:Enter a positive integer: 12Enter largest permissible digit: 1Smallest multiple of 12 containing digits less than or equal to 1 is: 11100Example Execution #5:Enter a positive integer: 34Enter largest permissible digit: 4Smallest multiple of 34 containing digits less than or equal to 4 is: 34Example Execution #6:Enter a positive integer: 789Enter largest permissible digit: 2Smallest multiple of 789 containing digits less than or equal to 2 is: 11202222Additional RequirementsAdd the homework assignment header file to the top of your program. A description of your program will need to be included in the assignment header. This particular header can be added to your file by entering hhw while in command mode in vi.Each example execution represents a single test of your program. The six examples provided imply that the program was run six different times.Your program is expected to accept input and produce output in the same manner demonstrated above.The user will always enter a positive integer followed by a single digit in the range from 1 to 9.Each test case will result in finding a multiple that is less than or equal to INT_MAX as found in the limits.h library.Do not add any “bonus” features not demonstrated in the example executions provided.Course standards prohibit the use of programming concepts not yet introduced in lecture. For this assignment you can consider all material in the first six chapters of the book, notes, and lectures to be acceptable for use.The use of arrays will result in no credit being awarded for your effort.For this assignment you will be required to implement the user-defined functions (from chapter 4). Failing to follow course standards as they relate to good user-defined function use will result in a zero for this assignment.A program MUST compile to be considered for partial credit. The submission script will reject the submission of any file that does not successfully compile on the guru server. The name of the source code file you attempt to submit must be hw05.c, no variation is permitted.Course Programming and Documentation Standards RemindersUse the course function header (head_fx vi shortcut hfx while in command mode) for every user-defined function in your program.List and comment all parameters to a function, one per line, in the course function header.All function declarations will appear in the global declaration section of your program.The user-defined function definitions will appear in your program after the main function.Indent all code within relevant selection and repetition constructs two additional spaces.Make use of { and } with all relevant selection and repetition constructs.Place a single space between all operators and operands. Comment all variables to the right of each declaration. Declare only one variable per line.Notice that several programs (see program 2-9 on pages 74-75) in the programming text use a single line comment to indicate the start of the local declaration and executable statement sections of the main function.At no point during the semester should these two sections ever overlap. You might consider adopting this habit of commenting the start of each section to help you avoid this mistake.Select meaningful identifiers (names) for all variables and functions in your program.Indent all code found within the main and all user-defined functions exactly two spaces.Control-forcing statements such as exit, break, continue, and the use of multiple return statements in a single function are not acceptable practices according to course standards.Do not single (or double) space the entire program, use blank lines when appropriate.Consider making symbolic/defined constants to represent those values that do not change during the execution of the program.There is no need to include example output with your submission.Remove any diagnostic print statements from your code, even if they are commented out (inactive), unless you believe your program to be logically incorrect or incomplete as a way to demonstrate to your lab instructor how much of the problem you were able to solve and attempted to implement.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Python代写：CME3036 June Jolly","slug":"page19","date":"2016-10-25T14:36:14.000Z","updated":"2016-11-03T08:06:05.421Z","comments":true,"path":"2016/10/25/page19/","link":"","permalink":"http://yoursite.com/2016/10/25/page19/","excerpt":"","text":"Introduction这次需要代写的作业比较有意思，根据提供的历史数据中，各场比赛的得分情况，来预测本次球赛的每个球队的胜率。类似世界杯赛场的大数据预测，不过作业的模型和公式要简单许多。最终冠军和初始分组有关，事实上并没有一支球队能够稳拿冠军，每次模拟的结果都不同。程序语言不限，甚至允许用Objective-C, Perl以及Ruby来写。选择用Python因为编写和调试方便。RequirementFThe National Funball League (NFL) runs a series of funball games each year. This time period is colloquially known as funball season. The goal of funball is to score the most points. Many cities have their own funball teams and compete in the NFL. Despite the name, funball is very serious and the games are extremely competitive.In June after the regular season, the NFL hosts a single-elimination tournament to determine the best funball team. Win or go home! The winner gets a year’s worth of bragging rights and claim to a rotating trophy.In an attempt to make the tournament as exciting as possible, the NFL pairs stronger teams with weaker teams in the early rounds expecting that only the best teams will be left at the end of the tournament. The process of ranking teams is called seeding. Lower seed values indicate stronger teams.For logistical reasons, the tournament is broken into 4 regions: N, S, E, and W.The tournament is so popular that several derived games have appeared. Among the most popular is a pick’em challenge where players attempt to pick all of the winners in the tournament before any tournament games are played. In recent years, the pick’em challenge has been hosted by Sanguine Bank which offered a million dollar prize to anyone who could pick all of the correct teams.QuestionsLet p(A) be the winning percentage of team A and p B be the winning percentage of team B. Assume we use the formula 1 to estimate the probability that A wins in a matchup against B.P(A wins|A and B play) = p(A)(1 - p(B)) / p(A)(1 - p(B)) + (1 - p(A))p(B)Using this formula, which year’s tournament results had the highest probability?To answer this question, please use the attached data.regular season results.csvseasons.csvteams.csvtourney results.csvtourney seeds.csvtourney slots.csvSanguine Bank has decided that the payout of the pick’em challenge is too risky. They contacted Auspicious Insurance Group (AIG) for a quote on a special insurance contract that covers the payout from the challenge. How much should AIG charge Sanguine Bank for the insurancecontract? It is sufficient to explain your approach; no code or amounts are required for this question.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"C++代写 FIT2049 Simple Game Implementation","slug":"page18","date":"2016-10-24T05:26:34.000Z","updated":"2016-11-03T08:03:08.918Z","comments":true,"path":"2016/10/24/page18/","link":"","permalink":"http://yoursite.com/2016/10/24/page18/","excerpt":"","text":"Introduction代写一个比较炫酷的3D的游戏，本质上其实还是在2D上的Grid运算，只不过GUI方面提供了3D的渲染引擎。RequirementFor your first assignment you’ll be implementing a simple colour matching game inspired by the Bejeweled series and creatively titled “Colour Match”. The game revolves around finding groups of the same colour on a 3D grid of cubes. The basic gameplay is as follows:When the game starts a grid of random colours will appear on screen.In a separate section of the screen, the player will be shown a random colour – this is known as the “Next Colour”.Using the arrow keys, the player will select one of the cubes on the grid and when they press the spacebar key, the colour of the selected cube will change to match the “Next Colour”.If the change in colour causes three or more cubes of the same colour to be “connected”, those cubes are removed from the screen and the player’s score is increased (the amount of score increase is up to you, but they should get bigger scores for matching larger amounts of cubes).After the matched cubes are removed, cubes above them on the grid should move down to fill their place (there should never be any holes in the board). New cubes should also appear along the top of the board to fill the place of any cubes which fell down to a lower row.After the cubes are removed, the “Next Colour” is randomised again and the player can pick another cube to replace.When the game ends, a game over screen should be displayed which tells the player their final score. A quit and a restart button should also be present on this screen.The end condition of the game is controlled by two things:If a move doesn’t result in a match of three or more connected cubes, a life is lost. After losing three lives, the game ends.A move counter should also be included which limits the amount of allowed moves per game. The player should be able to see the amount of moves remaining somewhere in the UI.To spice up the gameplay, a special Power Cube should be included, as outlined below:When the player selects a cube on the grid and activates the power cube with the P key, every cube on the grid that matches the selected colour should be removed from the board.The score rewarded should be based on the amount of cubes that were removed.The power cube is available from the start of the game and can only be used once - use it wisely!Defining “Connected”There are a few options for what we consider “connected” to mean. You can attempt one of the three options presented below depending on the grade you’re targeting.To receive a pass for the criterion “Are matching cubes correctly identified?”, you should look for matching colours in the immediate four neighbors. In the below images, the dark grey tile is the selected cell for the current turn, and the light grey are matching colours which should be removed.To receive a medium grade, you should look for lines of the same colour originating from the selected cell on any of its four sides.To be eligible for full marks, you should keep stepping through neighbours and find chunks of the same colour.Provided AssetsProvided inside the Assignment 1 Assets file on Moodle are all the assets you’ll need to create the game. The cubes have a width and length of one unit allowing for easier placement. It is recommended you build your solution off the Week 3 Base Code (while waiting for that code to be released, you should spend week two thinking about your solution).Please note that while additional assets may be included, they won’t be considered when marking.Only your C++ code and the quality of your gameplay will be assessed (we’re not marking your modelling skills).","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"代写c++ Application Development using C++  1","slug":"page17","date":"2016-10-23T04:16:44.000Z","updated":"2016-11-01T11:55:48.713Z","comments":true,"path":"2016/10/23/page17/","link":"","permalink":"http://yoursite.com/2016/10/23/page17/","excerpt":"","text":"Introduction根据题目需求完成一个名字叫PIG的小游戏，用到了c++的类的封装等操作，分为玩家与玩家和电脑与电脑这2种方法，使用到了数据结构list, 电脑玩家需要自己涉及最少2种以上的智能策略。最后需要总结分析，写一份相关的报高文档Requirement2016/17 ELEC362 - Application Development using C++ 1Assignment 1Program a multiplayer console game of ‘Pig’Game Rules: (according to Wikipedia)Each turn, a player repeatedly rolls a dice until either a 1 is rolled or the player decides to“hold”:• If the player rolls a 1, they score nothing and it becomes the next player’s turn.• If the player rolls any other number, it is added to their turn total and the player’s turncontinues.• If a player chooses to “hold”, their turn total is added to their score, and it becomesthe next player’s turn.The first player to score 100 or more points wins.For example, the first player, Ann, begins a turn with a roll of 5. Ann could hold and score 5points, but chooses to roll again. Ann rolls a 2, and could hold with a turn total of 7 points, butchooses to roll again. Ann rolls a 1, and must end her turn without scoring. The next player,Bob, rolls the sequence 4-5-3-5-5, after which he chooses to hold, and adds his turn total of 22points to his score.The implementation should exercise the object-oriented design aspects and goodpractices for design and implementation.entities that must be realised as C++ classes.attributes for each of these entities.Identify the methods that may be useful for each of these entities.• By carefully considering the rules of the game, implement the classes for your entities.Pay special attention to the interaction between classes and annotate yourimplementation using useful comments.• Design you classes to be reusable for part 1 and part 2Part one of assignmentProgram a multi-player version of the game that allows a number of players to competeagainst each other.Part two of assignment(Reusing the classes from the multiplayer game)Develop automated players that use at least two strategies (e.g. hold after a fixed number ofthrows, hold after a fixed gain of points)Write a code that automatically runs the automated players against each other and usestatistics to compare the strategies.2016/17 ELEC362 - Application Development using C++ 2SubmissionPlease submit your report and the source code (zipped project for both parts) on VITAL.In the report you will outline your design process by describing what classes you use, whatattributes and methods they contain and give an overview how they intact.Please copy your source code at the end of the report. (When pasting code in Word choose‘Past Options/Keep Source formatting’ to keep the colour coded formatting used in VisualStudio.)","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"代写C++ Project for C++","slug":"page16","date":"2016-10-22T06:23:32.000Z","updated":"2016-11-01T11:51:02.486Z","comments":true,"path":"2016/10/22/page16/","link":"","permalink":"http://yoursite.com/2016/10/22/page16/","excerpt":"","text":"Introduction写一个c++的项目，该项目主要练习c++的基础知识和对类的封装，需要实现2个类，然后对这2个类进行扩展要求，属于c++的初级用法RequirementProject for C++• Create an application containing thefollowing:2+ user defined classes4+ data members per class(including at least one use of an array)4+ methods per class (access and manipulation)2+ if / if-else statements2+ while loops2+ for loops1 or more nested loopsFile IO for reading and writing dataCSCI 1300 Fall 2016Project for C++For this project, you will submit:• A description of what your program does and how to use it (1-2 pages).• Screenshots showing the program working.• Your code.• Zip all files together and submit them to Moodle. Name the zip file_Project1.zip.• FAQs:• Do I have to design my own project, or can I work with a friend to design aproject?– You can work with a friend to come up with a project concept and you can help eachother work through coding issues, but each of you needs to submit individual work.• How will projects be graded?– All projects will be interview graded to give you the opportunity to brag about your workand also discuss parts of your project that might not be working quite the way youwant them to.CSCI 1300 Fall 2016Project ContestAs an incentive for this project, we will select the best project in three categories:Best Novice ProjectAs there are students that have had prior programming experience, this award islimited to students who had no experience in programming before this class.Best GameGames are a common theme in projects. This award will recognize who submitsthe best game.Best Public Service ProjectProviding the public with programs to aid or support a special cause cansignificantly improve our world. This award will recognize who submits the bestproject for a public cause.Each TA will submit the best project from their recitations for each category. All the TA’s and theInstructor will vote to determine the winners. (The judging criteria will be on the codecorrectness and style, creativity of idea, and clarity of the written explanation.)The students of the winning projects will receive a 2 point bonus in their final grade.CSCI 1300 Fall 2016","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写JavaScript Assignment 1","slug":"page15","date":"2016-10-20T03:13:42.000Z","updated":"2016-10-27T12:15:52.974Z","comments":true,"path":"2016/10/20/page15/","link":"","permalink":"http://yoursite.com/2016/10/20/page15/","excerpt":"","text":"Introduction题目分析如下：1.图书积分规则: 如果客户购买0本书，他们赚0分 如果客户购买1本书，他们可获得4分 如果客户购买2本书，他们可获得8分 如果客户购买3本书，他们可获得16分 如果客户购买的书超过3本,超过3本的部分按照每本16分的基础上在加7分2.非图书积分规则: 每消费$10便可获得4分:例如–消费$12获得4分Requirement1CS 170 ‐ Computer Applications for BusinessFall 2016 ‐ Assignment 7JavaScript Event-Driven ProgrammingDue Date Before 11:00 PM - Friday, October 28 th , 2016Accept Until Before 11:00 PM - Friday, November 4 th , 2016Evaluation 15 pointsSubmit to Sakai Assignment7_answers.html fileTo get credit for this assignment:Upload and submit the Assignment7_answers.html file through Sakai.Learning Objectives:This assignment is designed to practice:1. Understand the basic input and output mechanisms of dynamic web applications fromthe code perspective2. Implement JavaScript code which will handle user events3. Display feedback of said processed interactions back to the user4. Practice your understanding of basic JavaScript from the prior Assignmenta variables, including;i The declaration, initialization and assignment processesb Use of the conditional if statementsc Use of arithmetic and logic operatorsd Use of commentsDirections:You are provided an HTML program. Your responsibility is to insert the HTML tags with theappropriate JavaScript statements that will solve the problem discussed below, and tocomment the html file with the requested information per the requirements. The problemdescription and HTML program provided are slightly different from Assignment 6. Be sure tostart fresh.2Problem to solve:The Serendipity Booksellers has a book club that awards points to its customers based on thenumber of books purchased each month. The points are awarded as follows: If a customer purchases 0 books, they earn 0 points If a customer purchases 1 book, they earn 4 points If a customer purchases 2 books, they earn 8 points If a customer purchases 3 books, they earn 16 points If a customer purchases more than 3 books, they earn an additional 7 points on top ofthe 16 points for each book above 3.Serendipity Booksellers also awards points based on the dollar value spent on non-bookmerchandise. Four (4) points are awarded for every $10 spent. Partial awards are not provided.For example, 4 points will be awarded for spending $10.00 up to $10.99. No points are awardedfor less than $10.Preferred Customers receive a bonus of double award points.The Serendipity Booksellers website needs to be updated to ask the customer to enter thenumber of books purchased last month, the dollars spent on non-book merchandise, confirm ifthey are a Preferred Customer, and then calculate and display the number of award pointsearned.Requirements:For this assignment;1. Your program will calculate the award points as described above.2. You will generate HTML comments to add your name, section and TA name. Each on aseparate line within the tags. This will (should) NOT be visible in the documenton the web browser).3. Utilize a tag4. You will then add the HTML tags with the proper JavaScript code to produce:a. A textbox to solicit the number of books purchasedb. A textbox to solicit the dollars of non-book merchandisec. Grouped radio buttons to determine Preferred Customer membershipd. A button to calculate the number of points awardede. A readonly textbox to display the result the calculation5. Utilize JavaScript comments to explain the steps you are preforming within your code. AJavaScript comment’s form is:/ Place your comment between the stars /36. Variable names should be descriptive. For example, if a program is calculating the totalcharge for a bill at a restaurant, it may have a variable named tipAmount.7. Utilize at least one if/else statement. Consider using the if/else in determining thebonus points.A sample of what your webpage could look like:Additional Information:Since the contents of a textbox, is going to be used in mathematical operations. Textboxessometimes treat input as Strings. Use the function parseInt() to convert the String text to anumber. Otherwise your calculation operations will not perform as expected.JavaScript provides several math utilities. The Math.floor() method rounds a numberDOWNWARDS to the nearest integer, and returns the result.References:Fluency 6 - Chapter 17 - Fundamental Concepts Expressed in JavaScript- Chapter 18 – A JavaScript Programw3schools.com - http://www.w3schools.com/js/default.aspFirefox Tools - https://developer.mozilla.org/en-US/docs/Tools/DebuggerLectures’ slides and examplesRecitation Week 6Recitation Week 7","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"代写Java Assignment 1","slug":"page14","date":"2016-10-19T05:12:42.000Z","updated":"2016-10-27T10:10:29.671Z","comments":true,"path":"2016/10/19/page14/","link":"","permalink":"http://yoursite.com/2016/10/19/page14/","excerpt":"","text":"Introduction写一个购票管理系统，涉及到增，删，改，查等操作，是JAVA的入门级别基础知识，主要考察对java的级别操作，I/O读写等知识点RequirementITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 1 of 9Assignment 1OverviewThis is an individual assignment that requires you to design, develop and test a small procedural Javaprogram.Timelines and ExpectationsPercentage Value of Task: 20%Due: 16:00 Friday 21 st October 2016 (week 7)Minimum time expectation: 10 hoursLearning Outcomes AssessedThe following course learning outcomes are assessed by completing this assessment: Identify and use the correct syntax of a common programming language Recall and use typical programming constructs to design and implement simple softwaresolutions Reproduce and adapt commonly used basic algorithms Utilise pseudocode and/or algorithms as a major program design technique Write and implement a solution algorithm using basic programming constructs Demonstrate debugging and testing skills whilst writing code Develop self-reliance and judgement in adapting algorithms to diverse contexts Design and write program solutions to identified problems using accepted design constructsITECH1000 Programming 1 1623CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 2 of 9Assessment DetailsThe Federation University Australia Olympic Games are about to commence! The games have beenscheduled to begin on Saturday 3rd December 2016, competitors are busy training and now it’s timeto prepare to sell spectator tickets.Your task is to design, develop and test a small application for recording ticket sales to this event.Stage 1: DesignThis stage requires you to prepare documentation that describes the function of the program and howit is to be tested. There is no coding or code testing involved in this stage. A document template hasbeen provided for your use.Requirements:1) Read through Stage 2: Program Development to obtain details of the requirements of thisprogram.2) Write an algorithm that describes how the program will operate.a. All program requirements – base, standard and advanced – must be included, even if youdo not end up including all these requirements in your program code.b. The algorithm must be structured logically so that the program would function correctly.3) Prepare and document test cases that can be used to check that the program works correctly,once it has been coded. You do NOT need to actually run the test cases in this stage; this willoccur in Stage 3: Testing.a. All program requirements – base, standard and advanced, must be included, even if youdo not end up including all these requirements in your program code.b. Make sure the test cases include checking of data entered by the user to make sure thatonly valid data is accepted. If the user enters invalid data, the user should be informed ofthis and given another chance to enter the data. NB: As we have not covered exceptionhandling, you may assume that the user will always enter an integer.c. Test cases should be documented using a template like the one below. You may includeextra information if you wish. At this stage, the Actual Result column will be left blank.Test Case Expected Result Actual ResultThe user selects to purchase Tier 1tickets.The user is prompted toenter the number oftickets to purchase.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 3 of 9Stage 2: Program DevelopmentUsing the Design Documentation to assist you, develop a Java program that records spectator ticketsales at the gate for the Federation University Australia Olympic Games, implementing therequirements outlined in this section. These requirements have been broken into three groups: Base Functionality includes the minimal level of requirements to achieve the essentialcomponents of this assignment. This group of requirements focuses on getting the code towork and on using the programming constructs we cover in class. You can expect to useconstants, variables, loops, conditional statements and arithmetic operators for theserequirements and you should look for opportunities to use these wherever you can. You will notreceive full marks for implementing a requirement, even if it works, if you have not used theappropriate programming construct to do so.At this level, you can decide if it is easier for you to code everything within a single method, orto modularize it straight away. Standard Functionality ensures the code is modularized, and that method calls are used toensure the program flows correctly. It allows data to pass from one method to another asparameters. It also includes providing a running total of tickets within an order, which is notessential for getting the program to work, but is useful information for the user to see. Advanced Functionality provides a challenge task, and is best left until all the other requirementshave been addressed. It requires looking at a Java API to find out how to use a class we havenot covered in the course, and using this to provide a countdown of days remaining until thegames commence.All three groups require that you follow coding conventions, such as proper layout of code, usingnaming conventions and writing meaningful comments throughout your program.Base Functionality:1. Display a welcome message when the program starts The welcome message should have a row of asterisks at the top and the bottom, just longenough to extend over the text. Hint: Use a For loop for this. The first line of the message should read “FEDERATION UNIVERSITY AUSTRALIAOLYMPICS” and be approximately centred in the row of asterisks by printing white spacefirst. Hint: Can you modify the For loop from the previous step to print the white spaces? A second line of the message should be blank. The third line should read “Developed by” followed by your name and a comma, then “student ID ”, then your student id, then finally “ for ITECH1000 Sem 2 2016”. The fourth line should be blank.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 4 of 92. Provide a menu from which the user can select to Purchase Tickets, View Ticket Sales or Exit.This menu should be repeated each time after the user has chosen and completed an option untilthe user chooses to Exit. The user selects an option by entering the number next to it. If aninvalid number is selected, the user is advised and shown the menu again to make anotherselection.3. When the user selects the Purchase Tickets option, provide another menu from which the usercan select Tier 1 Tickets, Tier 2 Tickets, Finalise Order or Cancel Order. The user selects anoption by entering the number next to it. If an invalid number is selected, the user is advised andshown the menu again to make another selection.a. Should the user select Tier 1 Tickets or Tier 2 Tickets, they are prompted to enter theNumber of Tickets required. After entering the number of tickets required, they arereturned to the Ticket Purchasing Menu so that they may choose to purchase additionaltickets. The user may not choose to purchase a negative number of tickets, but apurchase of 0 tickets is permitted.b. Should the user select Finalise Order:i. The sale is processed by displaying the number of each type of ticket purchasedand the total cost of the tickets in this order. A Tier 1 ticket costs $18.50; a Tier 2ticket costs $11.25.ii. A record is kept of the total cost of tickets sold, the total number of Tier 1 ticketssold and the total number of Tier 2 tickets sold. This is a combined total from allorders; there is no need to keep a record of the number of tickets in eachindividual order.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 5 of 9iii. The user is returned to the menu from Step 2.c. Should the user select Cancel Order:i. The order is cancelled and a message displayed to confirm this to the user.ii. The user is returned to the menu from Step 2.4. When the user selects the View Ticket Sales option, display the total value of ticket sales and boththe total number of Tier 1 tickets and the total number of Tier 2 tickets sold across ALL orders.Highlight this message display with a row of 50 asterisks before and after the message. After thefinal row of asterisks, redisplay the menu from Step 2.5. When the user selects Exit System, quit the program with a message to the user.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 6 of 9Standard Functionality:6. Update the Ticket Purchasing Menu so that a running total of tickets included in an order isdisplayed until the order is finalized7. Modularize the code, correctly using method calls and passing data between methods asparameters.Advanced Functionality:8. Update the Welcome Message to include a countdown of the number of days to go until thegames begin.a. Use the GregorianCalendar class to manage your dates. You will need to importjava.util.GregorianCalendar to use this library.b. The countdown must be calculated based on the number of days between the time theprogram runs, and Saturday 3rd December 2016. It should also be possible to just updatethe date within the code and have the countdown automatically recalculate the number ofdays until the games commence.c. There is no pre-defined method for finding the difference between two dates in this library.You will need to develop your own, using the features of the GregorianCalendar class.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 7 of 9Stage 3: TestingUsing a copy of the test cases developed in Stage 1: Design, test the program you have developed inStage 2: Program Development. Document your results, including both failed and successful tests.Note: Please do not leave out any failed tests. If your testing highlights that your program has notworked correctly, then the failed tests help to demonstrate that you have been testing your programproperly.To show that you have tested your program, include small (but readable) screen captures in yourActual Results as well as any explanatory comments. Microsoft Windows includes a Snipping Toolthat is useful for taking captures of the relevant parts of the screen.You may test your program in phases if you wish. Stage 2: Program Development provides threeseparate groups of functionality in the requirements, working from the minimal level of requirementsthrough to more advanced concepts. Each of these groups can be tested individually.Base Functionality:This phase requires you to check that the base functions (displaying welcome message when theprogram starts, showing a menu of options until the user chooses to exit, purchasing tickets, viewingticket sales and exiting the system) have been implemented.Standard Functionality:In addition to the Base Functionality, this section includes displaying a running total of tickets that havebeen added to an order until such time as the order has been finalized. This new functionality mustalso be tested.If you originally wrote and tested the Base Functionality by including all the code in a single method,this phase also requires that you modularize your code, and use method calls and pass data betweenmethods to ensure your program still runs correctly. This means all your code will need to be re-tested to ensure that all the previous functionality still works.Advanced Functionality:This phase requires testing the code that calculates and displays the number of days until the gamescomments in the welcoming message shown when the program starts.SubmissionYour program code and testing documentation should be zipped into a single file and loaded into theAssignment Box provided in Moodle by the due date and time.CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 8 of 9Marking Criteria/RubricTaskAvailableMarksStudentMarkStage 1: Design DocumentationDevelopment of an algorithm describing how the program should function All requirements from the Assessment Details section included 1 Logical structure 1Documented test cases to validate program All requirements from the Assessment Details section included 1 Data is validated to ensure user entries are appropriate and incorrect user entriesare handled smoothly1Stage 2: Program DevelopmentA Java program addressing the requirements outlined in the Assignment Details section,including appropriate use of loops, conditional statements, constants and variables:Use of coding conventions throughout entire program, including readable and clear layout,following naming conventions and including meaningful and appropriate comments.1Base Functionality: Display of a welcome message when the program starts 1 Menu displayed until user chooses to exit 1 Purchase Tickets option to select and order a user-selected combination of Tier 1and Tier 2 tickets2 View Ticket Sales to display the total value of ticket sales and both the total numberof Tier 1 tickets and the total number of Tier 2 tickets sold1 Exit System to quit the program with a message to the user 1Standard Functionality: Running total of tickets included in an order displayed in the Purchase Tickets menuuntil the order is finalised1 Code modularized, correctly using method calls and passing data between methods 2Advanced Functionality: Countdown of days to go until the games commence included in the welcomemessage3Stage 3: TestingDocumented test results clearly showing all the testing that has been conducted and theresults of this testing. Testing of base functionality1 Testing of standard functionality1 Testing of advanced functionality1Total 20CRICOS Provider No. 00103D 1623 Assignment 1 specification.docx Page 9 of 9FeedbackAssignments will be marked within 2 weeks of submission. Marks will be loaded in fdlGrades, and acompleted marking sheet will be available via Moodle.Plagiarism:Plagiarism is the presentation of the expressed thought or work of another person as though it is one’sown without properly acknowledging that person. You must not allow other students to copy your workand must take care to safeguard against this happening. More information about the plagiarism policyand procedure for the university can be found at http://federation.edu.au/students/learning-and-study/online-help-with/plagiarism.","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"代写c++ Programming Assignment 2","slug":"page12","date":"2016-10-17T20:22:46.000Z","updated":"2016-10-26T12:03:06.907Z","comments":true,"path":"2016/10/18/page12/","link":"","permalink":"http://yoursite.com/2016/10/18/page12/","excerpt":"","text":"Introduction用c++实现简单的机器学习，统计词频，情感分析等等，此处用到的数据结构算法是哈希表，需要先对数据进行清理操作，然后分词，最后统计词频，根据公式情感分析等等，此题目比较新颖，通过c++来讲述数据挖潜和机器学习的原理知识，对数据结构哈希表也考的很到位，点赞RequirementAssignment 2Due:​​ Oct 14th (Friday) before 11:59 PM1. Learning GoalsLearn how to1. use associative containers like ​std::unordered_set​ and ​std::unordered_map2. use iterators to iterate through associative containers3. use ​algorithms​ that are available in the C++ Standard Library4. pass command line arguments to a C++ program5. partition a C++ program in header files (.hpp) and source files (.cpp)6. read, understand, and use code written by other people2. DescriptionIn this assignment you’ll be doing the following:1. Read a raw text file containing movie reviews and ratings.2. Remove the punctuations and stopwords (e.g. is, and, the, etc.) from the reviews andwrite the contents to a clean review file.3. Associate a value for all words found in the clean reviews based on the average rating ofthe word.4. Using the map between the words and their associated values, rate reviews fromanother file that doesn’t have any rating already.5. Write the ratings of the reviews to an output file.2.1. Clean the dataThe raw data with the reviews and the rating will be present in a file namedrawReviewRatings.txt​. Every review is given a rating between 0 - 4 (both inclusive). Thefollowing are interpretation of the rating values:● 0 = Negative● 1 = Somewhat Negative● 2 = Neutral● 3 = Somewhat Positive● 4 = PositiveEach line of review follows the following format: Example:4 The Jungle Book is awesome!CS 368 (C++) - Fall 2016Adalbert ​Gerald​​ Soosai Rajwhere 4 is the rating and the text “The Jungle Book is awesome!” is the review.Now, your first task is to read the contents of this file and ​clean the data!The following steps needs to be performed in the same order for cleaning the data:1. Read the raw reviews from an input file. e.g. ​rawReviewRatings.txt2. Replace the hyphens in every line of text with spaces.e.g. If the review contains the word “awe-inspiring”, then it should be split into 2 wordsnamely “awe” and “inspiring”3. Split each line of text into multiple words using the space character as the delimiter.e.g. “The Jungle Book is awesome!” becomes | “The” | “Jungle” | “Book” | “is” |“awesome!” |4. Remove the punctuation marks from the words.e.g. “awesome!” becomes “awesome” and “!” becomes “”5. If there are any trailing/leading whitespaces, then remove them. Remember that thespace character (‘ ’), tab (‘\\t’), newline (‘\\n’), etc. are considered as whitespaces. For acomplete list of whitespace characters ​this​.e.g. “zootopia ” becomes “zootopia”, “hello\\t” becomes “hello”, and “world\\n” becomes“world”6. Remove the empty words. i.e. words with length == 0.7. Remove single lettered words. i.e. words with length == 1.8. Remove stopwords. e.g. is, and, the, etc. The list of stopwords can be found in the filestopwords.txt9. Write the contents of the clean data to a file named ​cleanReviewRatings.txt​.2.2. Fill the dictionaryUsing the ​cleanReviewRatings.txt file, create a map/dictionary for every word that is found inthis file. The dictionary is of type​std::unordered_map","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"},{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"}]},{"title":"代写python Programming Assignment 4","slug":"page13","date":"2016-10-17T20:22:46.000Z","updated":"2016-10-26T12:08:20.437Z","comments":true,"path":"2016/10/18/page13/","link":"","permalink":"http://yoursite.com/2016/10/18/page13/","excerpt":"","text":"IntroductionTASK 1:主要工作量如下:1.读取数据和标签，设置函数为：load_data2.归一化数据，使用sklearn的函数sklearn.preprocessing.normalize3.使用sklearn的函数sklearn.cross_validation.train_test_split进行数据拆分，按照70%，15%，15%拆分训练集，验证集，测试集4.使用np.savetxt保存相关集合TASK 2:朴素贝叶斯使用算法为：sklearn.naive_bayes.BernoulliNB验证准确率为：(‘valid accuracy score:’, 0.62646869836607311)测试准确率为：(‘test accuracy score:’, 0.62184459335413989)混淆矩阵为：[[14118 16819 136 0 30 36 819] [ 6262 33060 2466 12 159 207 147] [ 0 225 4832 72 33 180 0] [ 0 0 199 170 0 44 0] [ 146 983 173 0 100 6 0] [ 31 299 1962 29 112 205 0] [ 925 434 11 0 0 0 1710]]剩下的不一一列举…Requirement1.OverviewThe aim of this assignment is to compare alternative techniques for predicting forest cover types from cartographic variables. You will be using the sklearn machine learning library to perform this study. The dataset is based on four wilderness areas in the Roosevelt National Forest, located in the Front Range of northern Colorado. Cover type data came from US Forest Service inventory information, while the cartographic variables used to predict cover type consisted of elevation, aspect, and other information derived from standard digital spatial data processed in a geographic information system (GIS).Data Set Information:The prediction of forest cover type is from cartographic variables only (no remotely sensed data). The actual forest cover type for a given observation (30 x 30 meter cell) was determined from US Forest Service (USFS) Resource Information System (RIS) data. Independent variables were derived from data originally obtained from US Geological Survey (USGS) and USFS data. Data is in raw form (not scaled) and contains binary (0 or 1) columns of data for qualitative independent variables (wilderness areas and soil types).This study area includes four wilderness areas located in the Roosevelt National Forest of northern Colorado. These areas represent forests with minimal human-caused disturbances, so that existing forest cover types are more a result of ecological processes rather than forest management practices.Some background information for these four wilderness areas: Neota (area 2)probably has the highest mean elevational value of the 4 wilderness areas. Rawah (area 1) and Comanche Peak (area 3) would have a lower mean elevational value, while Cache la Poudre (area 4) would have the lowest mean elevational value.As for primary major tree species in these areas, Neota would have spruce/fir (type 1), while Rawah and Comanche Peak would probably have lodgepole pine (type 2) as their primary species, followed by spruce/fir and aspen (type 5). Cache la Poudre would tend to have Ponderosa pine (type 3), Douglas-fir (type 6), and cottonwood/willow (type 4).The Rawah and Comanche Peak areas would tend to be more typical of the overall dataset than either the Neota or Cache la Poudre, due to their assortment of tree species and range of predictive variable values (elevation, etc.) Cache la Poudre would probably be more unique than the others, due to its relatively low elevation range and species composition.Attribute Information:Given is the attribute name, attribute type, the measurement unit and a brief description. The forest cover type is the classification problem. The order of this listing corresponds to the order of entries along the vectors of the database.Name / Data Type / Measurement / DescriptionElevation / quantitative /meters / Elevation in metersAspect / quantitative / azimuth / Aspect in degrees azimuthSlope / quantitative / degrees / Slope in degreesHorizontal_Distance_To_Hydrology / quantitative / meters / Horz Dist to nearest surface water featuresVertical_Distance_To_Hydrology / quantitative / meters / Vert Dist to nearest surface water featuresHorizontal_Distance_To_Roadways / quantitative / meters / Horz Dist to nearest roadwayHillshade_9am / quantitative / 0 to 255 index / Hillshade index at 9am, summer solsticeHillshade_Noon / quantitative / 0 to 255 index / Hillshade index at noon, summer solticeHillshade_3pm / quantitative / 0 to 255 index / Hillshade index at 3pm, summer solsticeHorizontal_Distance_To_Fire_Points / quantitative / meters / Horz Dist to nearest wildfire ignition pointsWilderness_Area (4 binary columns) / qualitative / 0 (absence) or 1 (presence) / Wilderness area designationSoil_Type (40 binary columns) / qualitative / 0 (absence) or 1 (presence) / Soil Type designationCover_Type (7 types) / integer / 1 to 7 / Forest Cover Type designationYour tasksPreprocessing (5 marks)Write a Python script (with the file named task_1.py), thatloads the dataset shuffles the datadeals with any missing value (if any)performs normalization of the datacreates numpy arrays train_data, validation_data and test_data which contain respectively 70%, 15% and 15% of the shuffled data.saves these preprocessed arraysWhenever applicable use the validation set to select the architecturalparameters needed to build the following classifiers;Naive Bayes (5 marks)Write a Python script (with the file named task_2.py), thatbuilds naïve Bayes classifiersevaluates the prediction errorsreports these errors with a confusing matrixDecision Trees (5 marks)Write a Python script (with the file named task_3.py), thatbuilds decision tree classifiersevaluates the classifiersNearest Neighbours (5 marks)Write a Python script (with the file named task_4.py), thatbuilds kNN classifiersevaluates the classifiersSupport Vector Machines (5 marks)Write a Python script (with the file named task_5.py), thatbuilds SVM classifiersevaluates the classifiersDeliverablesYou should submit via Blackboard a zip file containingA report in pdf format limited to 10 pages of text (be concise!)describing the design of your experimentsreporting on the performance of your classifiersa statement of completeness (concise description of what you have implemented, what works, what doesn’t).All your Python script files with proper commenting. Good code documentation is critical.","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"代写C CS352 Programming Assignment 1","slug":"page11","date":"2016-10-17T15:22:43.000Z","updated":"2016-10-26T11:50:43.755Z","comments":true,"path":"2016/10/17/page11/","link":"","permalink":"http://yoursite.com/2016/10/17/page11/","excerpt":"","text":"Introductionlinux下的c语言入门级别的3个小题，第一个是控制格式的打印和输出，第二题是对比表达式是否是相同的表达式，需要解析表达式，对运算符进行分析，第三题是分解一个数，获取质数的和。RequirementECE15: Homework 5In all homeworks, the dialogue boxes show the system prompt in ( ˜ )$, the user input in red, and thecomputer output in black. Unless otherwise indicated, assume that the user will always enter a validinput.Problem0. Read the following Zybooks sections and solve the problems there in.Sections 7.1 to 7.4 by 8pm Tuesday October 25th.Sections 7.5 to 7.8 by 8pm Thursday October 27th.Problem1. A histogram represents a sequence of values as vertical rectangles of proportionalheights. Write a program histogram.c that asks the user for a sequence of space-separated positiveintegers followed by zero, and draws a “sideways” histogram representing each positive integer n asn spaces followed by a vertical bar, and separating these lines by a line of “-” whose width is themaximum width of its adjacent rectangles.( ˜ )$ a.outPositive widths followed by 0: 6 2 1 3 4 0——|——|–|—|—-|—-( ˜ )$ a.outPositive widths followed by 0: 3 2 1 0—|—|–|-( ˜ )$ a.outPositive widths followed by 0: 3 0—|—( ˜ )$ a.outPositive widths followed by 0: 0( ˜ )$Problem2. Lines in the plane are often represented by linear equations, for example 2x+5y=3,or 10y+4x=6, that represents the same line. To standardize the representation one can express y as afunction of x, for the line above, y=-0.4x+0.6 where -0.4 is called the slope, and 0.6 is the intercept.Two lines are parallel if they have the same slope (with the same or different intercepts), and called thesame if they have the same slope and intercept.Write a program line.c that asks the user for equations of straight lines in the plane and printswhether the lines are all same, are all parallel but not all the same, or not all parallel. Note that for anyset of lines, only one of these description holds. If no equations are entered, a corresponding messagegets printed.The equations can be entered as ax ± by = c or ay ± bx = c, where a,b,c are doubles. The programasks the user for lines until the they decide to stop. Since floating-point numbers are stored withsmall rounding errors, consider two slopes, or two intercepts, to be equal if the absolute value of theirdifference is ≤ 10 − 10 .( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 6x+7.5y=1.5Enter another equation? [y/n]: yEquation: 6x+7.5y=1.5Enter another equation? [y/n]: yEquation: 9.1x+0.8y=2Enter another equation? [y/n]: nNot all lines parallel.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 2.5x+3.2y=4.1Enter another equation? [y/n]: yEquation: 3.2y+2.5x=1.6Enter another equation? [y/n]: nAll lines parallel but not all same.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: 2x-3y=4Enter another equation? [y/n]: yEquation: -3y+2x=4Enter another equation? [y/n]: nAll lines same.( ˜ )$ a.outEnter another equation? [y/n]: yEquation: -3y+2x=4Enter another equation? [y/n]: nAll lines same.( ˜ )$ a.outEnter another equation? [y/n]: nNo equations!( ˜ )$2Problem3. Write a program prime.c that asks the user for an integer n ≥ 2 and prints n as asum of prime numbers: p 1 + p 2 + … + p k .Typically, there may be several ways to write n as a sum of primes. Print the sum where p 1 is thelargest prime ≤ n that is not n − 1; p 2 is the largest prime ≤ n − p 1 that is not n − p 1 − 1, and so on.( ˜ )$ a.outInteger: 4Prime sum: 2 + 2( ˜ )$ a.outInteger: 9Prime sum: 7 + 2( ˜ )$ a.outInteger: 148Prime sum: 139 + 7 + 2( ˜ )$ a.outInteger: 2Prime sum: 2( ˜ )$3","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C CS37 Programming Assignment 3","slug":"page10","date":"2016-10-16T14:52:53.000Z","updated":"2016-10-16T16:24:52.098Z","comments":true,"path":"2016/10/16/page10/","link":"","permalink":"http://yoursite.com/2016/10/16/page10/","excerpt":"","text":"Introductionlinux下的c语言os方面课程，多线程归并排序统计加速比测试，测试1,2,4,8,16,32个线程的情况下加速比。代码不算难，但是要进行大量测试和统计操作。并且需要对linux下的多线程原理足够清楚RequirementProject 3Due date: Oct 17, 2016 (No late submissions)The goal of this project is to evaluate Amdahl’s law in the context of the sorting problem. The details of your implementation are as follows:1.Implementation detailsa.Your executable should be called PROG4b.You will invoke PROG4 asi.PROG4 ii.Assume that is a multiple of 32iii.Assume that the number of threads is 1, 2, 4, 8, 16 or 32iv.Example invocation:PROG4 3200 162.When you execute the program, the following should happena.First, you will fill the array with strictly decreasing numbers. For example, if the array is of size 320, you can initialize it to 320, 319, 318 etc.b.You will partition the array into 32 parts. You will sort each part using BUBBLESORT so that they are in increasing order. Finally, all 32 sorted parts will be merged to obtain the final sorted array. To achieve this with K threads, you will proceed as follows:i.When you have K threads, each thread will handle 32/K parts and sort them. Now, you have 32 sorted parts of original array A.ii.You will merge the sorted parts to generate array B that will represent the sorted array A.c.You will verify that the array is actually sorted and contains the correct data. For example, in the above scenario, you should see numbers from 1..320.3.Important observations:a.You are partitioning the array into 32 parts independent of the number of threads you have. This is critical. This ensures that the actual work done is independent of the number of threads.b.Normally, when you use multiple threads, this can increase the total work done. But we are trying to avoid the problemc.We initialize the array to be in a decreasing order and use bubblesort to get it into increasing order.d.The number 32 is chosen because cse410.cse.msu.edu has 32 processors.4.As an illustration of this, for sake of discussion, assume that array A has 3200 elements. We partition array A into 32 parts, from [0..99], [100..199], … [3100..3199].a.Consider the case where number of threads=1. In this case, you have only one thread. Hence, it will sort all 32 parts separately one after another. Then, it will merge it. This will correspond to the time required to sort the array with just one thread. This time will be split into two parts: the part that can be parallelized (namely the sorting of individual parts) and the part that cannot be parallelized (namely the merging part). Use this time to evaluate the value of f, the part that is sequential. As an illustration, if the time required for sorting individual parts was 200 and the time required for merging was 25 then f = 25/(200+25).i.Some smart people will realize that the merging itself could be parallielized. But we will not do that in this project. The merging will always be sequential.ii.Note that Amdahl’s law only considers the case where some part can be parallelized by n threads and the remaining part must be run on only one thread. It does not consider the case where you have some part where you can utilize more than one thread but cannot utilize all n.iii.In fact, the merging part will be independent of the number of threads you have.b.Consider the case where K=2. In this case, each thread will sort 16 parts. Each thread will sort the parts assigned to it independently (in parallel). Then, you will merge it to get the sorted array. Recall that the merging must be done sequentially. It is expected that the merging time will remain unchanged in this process.5.What to turn ina.Your .cpp files, .h files and makefile that will generate PROG4b.A report (pdf) describing your experience with Amdahl’s lawi.You should consider five different array sizes from 320 to 32,000,000.ii.The sizes you choose should be such that total time to run with 1 thread is at least 1 second and no more than 10 minutes.iii.For chosen sizes, run your program with 1, 2, 4, 8, 16 and 32 threads.iv.Run each experiment 3 times and use the average.v.Identify the sequential fraction based on your experiment with 1 thread. Observe that sorting 32 parts can be parallelized. Merging cannot be.vi.Compare the results you have with that predicated by Amdahl’s law.vii.Explain the difference, if any.viii.(Note that the verification time should not be included in the time you report.)6. A few things that will helpa.You saw that you can provide each thread with a threadIDb.You can make assignments of the parts to be sorted based on threadIDc.For example, if you have 4 threads, thread 0 is responsible for first 8 parts and so on.d.You can create partitions in-place7.Some more thingsa.Your sorting or merging should not assume that the array is provided in a sorted fashion. It should work for arbitrary array. The reason I have specified the initial array in the given fashion is so that you can validate correctness of your program. For example, merging cannot be simply put the parts in reverse order.b.Merging would essentially occur in the main() after all threads are joined.c.You are provided with 2 files pth.cpp – that does things somewhat incorrectly (discussed in class) and pth.cpp that does things in the right fashion.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C++ CS37 Programming Assignment 1","slug":"page9","date":"2016-10-15T13:42:55.000Z","updated":"2016-10-15T17:34:05.800Z","comments":true,"path":"2016/10/15/page9/","link":"","permalink":"http://yoursite.com/2016/10/15/page9/","excerpt":"","text":"Introduction一个简单的c++程序，计算BMI指数，重点在于注意细节，c++的标准I/O的输入输出格式输出RequirementTotal Point: 12 Due Date: 09/12/2016, MondayAssignment Description:Write a program that calculate the Body Mass Index (BMI). Your program shouldperform the following tasks:1. Prompt the user to enter the following data for each person: ID (four digit integer), Name 20 character string, Weight in pounds (floating-point with 1 digit after decimal point), Height in inches (floating-point with 1 digit after decimal point).2. Compute the BMI using the following formula:BMI = (weightInPounds 703) / (heightInInches heightInInches)3. Save (Write) the input data (id, name, weight, height) and the calculated BMI(floating-point with 2 digits after decimal point) into a text file (e.g. bmifile.txt).4. Repeat steps 1-3 to compute the BMIs for three persons, then close the text file.5. Now, read all the BMI records from the text file, one person each time, and print outa summary like the following:Program Requirements:1. The program must use streams, cout and cin objects to perform the IOs withconsole, printer, and file, and use IO manipulators to format the output.2. The program should include the following information as comment on top of sourcecode: Programming assignment number Author of the program Date of programming (or due date) Brief description on what the program will doGrading:Create and run your program using IDE of your choice (CodeBlock or Visual C++).Print the source code, program output and a snapshot of the text file (to show thefile content) and turn in all three items for grading. The turn in documents must belegible. Extremely tiny font or light/blur inks used in printing make it impossibleto read and grade your assignments.Also save the source code and output in your computer or portable storage device (USBdevice for example) so that they can be turned in for validation if asked to do so.","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"代写JAVA COSC1290","slug":"page8","date":"2016-10-14T13:12:35.000Z","updated":"2016-10-15T16:38:24.713Z","comments":true,"path":"2016/10/14/page8/","link":"","permalink":"http://yoursite.com/2016/10/14/page8/","excerpt":"","text":"Introduction写基于JavaFX的GUI界面，在assignment1的command功能基础上加上sqlite数据库和文件存储操作，同时把command的功能用JavaFX实现。实现的时候通过参数的形式区分文件存储和数据库存储。由于assignment1的逻辑比较复杂，实现JavaFX界面的时候，工作量略大。JavaFX还有内置的WebView，能通过其调Javascript，功能更强大，界面更好看，如果熟练之后，开发起来比swing更方便Requirement IntroductionYou are required to implement a basic Java program using Java SE 8.0 and JavaFX.This assignment is designed to help you:1. Enhance your ability to build a Graphical User Interface using JavaFX;2. Practise implementation of various GUI event handlers;3. Practise application of using file input and output processing;4. Practise the use of command-line arguments.This is an individual assignment and worth 10% towards your final grade. Academic Integrity (more)The submitted assignment must be your own work. No marks will be awarded for any partswhich are not created by you—this includes use of 3 rd -party GUI components.Plagiarism is treated very seriously at RMIT. Plagiarism includes copying code directly fromother students, internet or other resources without proper reference. Sometimes, studentsstudy and work on assignments together and submit similar files; this may be regarded asplagiarism. You should always create your own assignment even if you have similar ideas.Plagiarism-detection tools will be used for all submissions. Severe penalties may be appliedin cases of plagiarism, including loss of all marks or, in repeat cases, expulsion from thecourse. General Implementation Details• Initial data should be read from an input text file. A Save option should beimplemented that writes out to a text file.• All menu/interactive input should be via a graphical user interface, implemented inJavaFX. All information displayed to the user should be via the same GUI.• Sample GUI layouts will be put on Blackboard: you are free to have differentlayouts as long as your GUI layouts are clear (marks may be deducted for verypoor design).• Any incorrectly formatted input should be checked by the GUI implementation.• You are to use packages: all your new code should be in packages called:o guio fileioCode not in either of these packages will not be considered for marking.• You must not use 3 rd -party GUI components (i.e., not built by you).• Marks will be allocated to proper documentation and coding layout and style. Yourcoding style should be consistent with standard coding conventions (as in Assignment1).• Your programs will be marked on CSIT machines using Java SE 8.0. You should testyour program on these machines before you submit. Task SpecificationYou are to build a Graphical User Interface (GUI) for the MyTi system of Assignment 1. Youwill also make running of the MyTi system more configurable by reading initial Card, Userand TravelPass information from input files and write updated information to an output file.You do not need to add any other new functionality to the MyTi system of Assignment 1. What if my Assignment 1 did not work properly?• If you did not get TravelPass purchasing and Journey-taking working fully in Assignment1 then you are allowed to just purchase a TravelPass (as in the first Sample Run). Part A: Packages and Organisation of Code (0.5 marks)You should organise your code into 3 packages. A package called myti should be used forcode from Assignment 1. Packages called gui and fileio should contain all new code forAssignment 2 (you can put some of your existing code into these packages, if necessary). Part B: Command-Line Arguments (0.5 mark)You are to use command-line arguments to provide the name of your input and output files.For example, if your main() program is in the class Assign3 and you read input frominput.txt and your output is output.txt, then you would run your program as followsfrom the command-line on a unix machine:&gt; java Assign2 input.txt output.txtIf you use eclipse, then you specify the arguments under Run &gt; Run Configurations;however, as always, your program will be marked by running it from the command-line. Part C: File Input and Output (1.5 marks)Put initial TravelPass prices and Card andUser information in a text file (the name of this fileis the first command-line argument); your program should read this file at start-up andinitialise prices and create Users with the appropriate values. A sample input file will beprovided on Blackboard: you must follow that format precisely, though you are welcome toinclude more information than in that sample.Your program will be tested with different values (but with the same format) so makesure you can handle reading the file properly.When the SAVE option is selected on the GUI, you should write an output (text) file. Theoutput file must use the identical format to input file format below. You should write out thesame information as you read in with the updated values. Part D: Graphical User Interface (6 marks)Add a GUI for at least the following functionalities from Assignment 1. (You can implementa GUI that covers your complete Assignment 1 functionality but there’s no extra marks in it.)• The GUI should begin with a single window for purchasing Travel Passes and takingJourneys. Buttons for “Managing Cards and Users” and for “Display Reports” may openup new windows. See the sample GUI on Blackboard;• The Take a Journey window should include:o a list for selecting a Card id (i.e., Take a Journey on this Card);o lists to select 2 stations;o a list to select the day of travel, and an input box to enter the time;o a message box where error messages or other output is displayed;o CANCEL and PURCHASE buttons;• The Manage Passes and Users screen should include:o a list of Card IDs and associated User names;o when a Card is selected, User details and remaining credit is displayed;o an input box and an ADD CREDIT button for adding credit for the selected Card:when this is performed, credit for that Card is displayed / updated;o a message box where error messages or other output is displayed;o an Add a User panel that obtains the required information for a new user and addsthem. When a User is created, there should be an option to register a Card to thatUser;• The Display Reports screen should include:o a single Display All Journeys button;o a scrollable text box that contains the list of Journeys.o Note, if in Assignment 1 your function just displayed the Journeys for a Card, thenyou can do this here: you’ll need a drop-down box to select the Card to display;• SAVE and QUIT (without saving) buttons should always be available (ideally, outsidethe JTabbedPane).• Each window will need buttons to open the other window options: for full marks, if awindow is already open then it just shows it on top of the others, not generate a new one.Obvious GUI errors should be checked—for example, if the user tries to ADD CREDITwithout first selecting a Card from the menu.Sample screens will be added to Blackboard. You do NOT have to follow these designs; theyare simply a suggestion and you are free to design your own screens, as long as your GUIfunctionality is completely clear.• GUI Demo: 1 / 0.5 marks of the GUI functionality will be for a demo in Week 10 / 11;this can be of “click” functionality that isn’t fully connected to the MyTi system. Part E: Other (1.5 marks)As always, marks will be awarded for coding style, documentation/comments, code layoutand clarity, meaningful error and other messages, proper error handling, choice of datastructures and other design decisions. You are encouraged to discuss such issues with yourtutors and lab assistants, or with the coding mentors. Bonus Task (1 mark)Instead of reading/writing from files, read/write from a database using JDBC.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"sqlite","slug":"sqlite","permalink":"http://yoursite.com/tags/sqlite/"}]},{"title":"代写C   IP1  lab1","slug":"page7","date":"2016-10-13T14:13:33.000Z","updated":"2016-10-13T14:19:47.064Z","comments":true,"path":"2016/10/13/page7/","link":"","permalink":"http://yoursite.com/2016/10/13/page7/","excerpt":"","text":"Introduction实现一个Wumpus的teriminal端的游戏（println），输出一个44的表格，有玩家、恶魔、陷阱、金币，玩家遇到恶魔或者陷阱就游戏Lose，捡完所有的金币就游戏Win，同时玩家可以感知恶魔 陷阱 金币的提示。这个作业 时间是12小时，然后比较麻烦的是需求给的不太清楚，需要结合网上的Wumpus游戏和作业需求综合理解，设计一个简易的Wumpus游戏，画出UML图，然后code。RequirementWumpus!Wumpus is a text-based game, where a player moves through a cave system searchingfor gold and trying to avoid bottomless pits and a feared Wumpus. The cave system isa 4 x 4 grid. Each grid element can hold one GameItem. A GameItem is one of: Gold,Pit, Wumpus or ClearGround.The player can move forward, backward, left or right one grid element at a time. Thecave system wraps around so, for example, moving left from position [3][0] causesthe player to appear in position [3][3].The player can sense, but not see, what is in the immediate grid elements around theplayer. A pit will be sensed as a breeze, gold as a faint glitter and the Wumpus as avile smell. In this assignment, the grid will be displayed, but in a real game thisfeature would be disabled.If the player moves onto a pit or the Wumpus, the player dies and the game ends.If the player moves onto gold, the game score increases by one and the gold isreplaced by ClearGround.Implementation:You should write a Game class, which has a 2D array of size 4 x 4 of GameItem calledboard for implementing the Wumpus game described above.Classes Gold, Pit, Wumpus and ClearGround are extensions of class GameItem.GameItem should provide a public method, display(), for use when displaying theboard and a private instance variable for specifying the displayed character. Gold isdisplayed as ‘g’, a Pit as ‘p’, the Wumpus as ‘W’, clear ground as ‘.’ . GameItemprovides a constructor GameItem(char c) for specifying the displayed character.It should not be possible to instantiate an object of GameItem. The player is notimplemented as an object, instead just being represented by Game as private row &amp;column coordinates. The position of the player is displayed by a ‘‘.The items should be positioned randomly over board. There is exactly one Wumpus,at least one, and up to three pieces of gold (chosen randomly) and exactly three pits.The player is positioned over a ClearGround position.Game should provide:? a private method setBoard(), which instantiates objects on the board? a private method display() which will display the board.? a private method senseNearby(), which displays text about what theplayer can sense from the board elements immediately surroundingthe player.? a private method menu() which will provide a menu asking the user tomake a choice from the following and obtain the user input:=====Wumpus====1. Move player left2. Move player right3. Move player up4. Move player down 5Quit? a public method runGame() that will display the board, print out whatthe player can sense, present the menu and process the user’s decisionaccording to the game play described above.The World class only instantiates an object myGame of class Game, and callsmyGame.runGame()You need to show the Pit , Wumpus and Gold when the game is being played and alsoshow the SenseNearby() field as this is testing your ability to utilize polymorphism to callmethod of different classes.GameItem display() method is used to display each game item.Game display() method is used to loop through GameItem array to display the board.You may find the class Random, available in java.util.* useful.For example the following will assign integer variable guess a value from 0..4inclusive.Random randomGenerator = new Random();guess = randomGenerator.nextInt(5);.Submission:? Due date: 9am 10th Oct 2016. Representing 30% of course assessment? This is a group assignment of maximum 3 students (prefer not solo)? You will need to submit 7 electronic files, (Game.java, GameItem.java, Gold.java, Pit.java,Wumpus.java, ClearGround.java and World. Please note these must be Java source files (e.g.World.java), not class files (i.e not World.class). We will not mark a class file.? This assignment needs to be well designed. Please draw the Class diagram of your finalcoding design Please screenshot a full set of successful executions. Save the class diagramand screenshots of executions in a PDF file called Design.pdf.? Weblearn is used for submission. Please zip all source files and Design.pdf into one forsubmission (7z, rar, zipx or other compression format will be penalized).? Remember to include all team members’ names, student IDs and contribution % of eachperson in you submission of Design.pdf in the first page. One submission one group andmultiple submission will be penalized or at your own risk of getting wrong marks.Standard warning:This assignment must be your own work. Any submission found in whole or in part tobe plagiarized will be given zero marks and will not count towards your assessment. Ifan award of zero marks means that you do not pass the assignment hurdle then you willfail the course.Frequent Asked QuestionsQuestion: I was just wondering if the Wumpus will be moving around the board aswell? Or will it be stationary like the position of the pits?Answer: The Wumpus position is randomly generated. In each session, it will not bemove around. It will be stationary like the position of the pits.Question: Is there only 1 pit, 1 gold and 1 Wumpus in the game?Answer: There is exactly one Wumpus, at least one, and up to three pieces of gold(chosen randomly) and exactly three pits. The player is positioned over a ClearGroundpositionQuestion: Hey I’m hoping to submit and wanted to know if the tutor name isimportant, I’m not sure who my tutor is.Answer: The tutor’s name is not important. You can just submit to the default one.Yes, all files need to be zipped into one file. The zip file name is not important asweblearn will auto rename it.Question: Is it like after generate Wumpus, pit and gold, the position of these objectsare settled, no matter where the player moves on the board, these objects are notmoving? Or, each time player moves a step, the position of W,P and G changesrandomly? If player is surrounded by more than one objects, senseNearby() shouldoutput all information of themAnswer: After randomly generate W, P, G in the beginning of the game, these objectsare settled in position. Only replaced by “.” if player walks into it, like gold.Yes, senseNearby() should output all information of up, down, left and right.Question: At starting do I need to display 4X4 Grid along with GameItems like ( 1Wumpus, 3 Pit and 3 Gold).I meant player basically see all gameItems position in thegrid (not like real game) at the beginning of the game.Answer: Yes, you do need to display 4x4 grid along with GameItems at the startingpoint.Question: After each user selection from Menu do I need to display grid along withgameItems position again.Answer: Yes that is why you call display() method in the Game class.Marking Guide:OO Components 12 marksFunctional correct 12 marksDocumentation, Coding Style, Submission requirement, Error checking 8 marks","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"C代写  CMPUT 201","slug":"page5","date":"2016-10-09T06:23:32.000Z","updated":"2016-10-11T02:49:06.314Z","comments":true,"path":"2016/10/09/page5/","link":"","permalink":"http://yoursite.com/2016/10/09/page5/","excerpt":"","text":"Introduction主要是对文件操作、命令行操作等，输入参数错误处理，细节较多，难度的话不大。用到的知识点主要是：argc、fscanf/fprintf、loop、printf、array.RequirementThe following content is from a file named “instance10 001.txt”:#instance10_001.txt#area [0, MAX_X] x [0, MAX_Y]100 100#number of points NUM_PT10#coordinates0 00 9070 100100 5030 3030 7070 7070 3050 5045 0#end of instanceThis file describes 10 points in the two-dimensional plane, within the rectangular area [0,MAX X] ×[0,MAX Y]. Every line starting with a symbol # is a comment; the first non-comment line contains the integer values for MAX X and MAX Y, which are 100 and 100 in this file; the second non-comment line contains the number of points NUM PT, which is 10 in this file; the other non-comment lines present the integer x- and y-coordinates for the points, one in a line (in a non-specific order).In all three assignments, the input files all follow such a file format, except that the values of thevariables can be different and the comment lines can be missing. Each file is called an instance, and the file name convention is to start with “instance”, followed by the number of points in the instance, then an underscore, the index of instance having the same number of points, and lastly the file suffix “.txt”.That is, “instanceXXX YYY.txt” is the YYY-th (may or may not be left-patched with 0’s) instance having XXX points; for example, the above “instance10 001.txt” is the first instance having 10 points.The following list contains the specifications for Assignment #1 (10 marks in total):1. Write a single program with multiple functions, using the command-line options. Suppose yourprogram name is “myprogram”. If a command-line is incorrect, your program prints out the followingand then quits (function #1):&gt;myprogram [-i inputfile [-o outputfile]]2. One function (function #2) of your program is to read in the content of an instance file. To read inthe file “instance10 001.txt” you will execute the command:&gt;myprogram -i instance10 001.txtHere “-i” is the command-line option that indicates the succeeding argument is the input filename.3. Your program will check the correctness of the file content (function #3) during reading. That is, to check that the first non-comment line contains two integer values for MAX X and MAX Y, the second non-comment line contains an integer value for the number of points NUM PT (this number also appears in the filename; your program does not need to validate this, but to always use the number read in from the file), and there are exactly NUM PT more lines, each contains two integer values for the x-and y-coordinates of a point. Your program also makes sure that no coordinate is out of the specified rectangular area, neither there can be duplicate points in the instance.If your program encounters an error, then reports what the error is and quits; otherwise, continue to the next item.4. With the correctness been checked, your program will print (function #4) out the non-comment lines of the input file to the screen, when using the command:&gt;myprogram -i instance10 001.txtIf an output filename is specified, using either of the following commands:&gt;myprogram -i instance10 001.txt -o output.txt&gt;myprogram -o output.txt -i instance10 001.txtwhere “-o” is the command-line option that indicates the succeeding argument is the output filename,then instead of printing to the screen all the non-comment lines of the input file are written into the file “output.txt”.5. If your program is not fed with an input file, that is, by executing the following command:&gt;myprogramthen your program will generate several instances (function #5) through a user interface as follows:Generating random instances …Enter the circuit board size MAX_X MAX_Y:Enter the number of points NUM_PT:Enter the number of random instances to be generated:Assume the user inputs areGenerating random instances …Enter the circuit board size MAX_X MAX_Y: 100 200Enter the number of points NUM_PT: 10Enter the number of random instances to be generated: 7your program will generate in total 7 instances, written into 7 separate files “instance10 j.txt”,for j = 1, 2, …, 7. Each instance has the rectangular area [0,100] × [0,200], and has 10 points.The coordinates of a point is generated uniformly randomly within the rectangular area. And yourprogram makes sure there are no duplicate points within each instance. If it is impossible for yourprogram to generate these files, prints out what an error is and quits. All these files are saved in thecurrent directory executing the command, and your program prints to the screen:instance10_1.txt generatedinstance10_2.txt generatedinstance10_3.txt generatedinstance10_4.txt generatedinstance10_5.txt generatedinstance10_6.txt generatedinstance10_7.txt generated … done!","categories":[],"tags":[{"name":"Autotest","slug":"Autotest","permalink":"http://yoursite.com/tags/Autotest/"},{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"代写C   IP1  lab1","slug":"page6","date":"2016-10-09T06:23:32.000Z","updated":"2016-10-11T15:47:45.631Z","comments":true,"path":"2016/10/09/page6/","link":"","permalink":"http://yoursite.com/2016/10/09/page6/","excerpt":"","text":"Introduction是电路和C语言的结合，电阻串联并联，然后用欧姆定律求总的电流。 实现了三个function，一个欧姆定律function，一个串联function，一个并联function。RequirementAs electrical engineering students, you are familiar with Ohm’s Law (V = IR) and calculating the value of resistors in series (R = R1+R2) and parallel (1/R = 1/R1 + 1/R2). Consider the following circuit:Write a program to calculate the overall current in this circuit.You must use 3 functions: ohm_law(…), series(…), and parallel(…). A 4th function parallel_three(…) is optional. Do not write functions like sum_r1_r2(…).Calculate the current for:int r1=100, r2=200, r3=300, r4=400, r5=500, r6=600, r7=700;(you may copy&amp;paste this into your .c file)The answer should be 124.6 mA.Calculate the current for:int r1=123, r2=234, r3=345, r4=456, r5=567, r6=678, r7=789;The answer should be 107.6 mA.You may find it helpful to use intermediate variables, and to print debugging information.(optional: you can call functions as inputs to other functions, i.e.z = f( g(x,y), h(x,y) );Using this, calculate the current from voltage and Rx values in a single line.)","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Java代写  Intermediate & Object-Oriented Application Development","slug":"page4","date":"2016-10-05T04:21:31.000Z","updated":"2016-10-05T15:40:09.795Z","comments":true,"path":"2016/10/05/page4/","link":"","permalink":"http://yoursite.com/2016/10/05/page4/","excerpt":"","text":"IntroductionJava的基础题目，根据输入分数数据处理统计，格式化输出RequirementThis project is designed to help you practice File Input/Output using Java. It is to be completed and handed in by Thursday, October 6, 2016.Design and write an application to provide a report on student exam scores. The input is provided in the file scores.txt. This file can be found at the course Angel web site. Do not modify the input file in any way.The data layout is a follows:ScoreLast NameFirst NameThe data on the file is comma delimited.The report output should appear as:To receive full credit, you must do the following:1. Use proper File Input/Output techniques.2. Generate a properly formatted report containing a report header with date. The detail lines must include the student name, letter grade, and score. The summary should include the total number of exams, a breakdown of grade distribution, and the average exam score. The output report file name should be report.txt.3. When assigning letter grades, use the following scale: 90 to 100 – A, 80 to 89 – B, 70 to 79 – C, 60 to 69 – D, below 60 - F.Hand in:1. A printed copy of your report.2. A printed copy of your java code3. a written algorithm4. Either email your .java files in a compressed file (.zip)","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Python代写  Assignment 2 COMP9021, Session 2, 2016","slug":"page3","date":"2016-10-01T19:51:31.000Z","updated":"2016-10-02T15:56:56.291Z","comments":true,"path":"2016/10/02/page3/","link":"","permalink":"http://yoursite.com/2016/10/02/page3/","excerpt":"","text":"Introductionpython的比较有难度的作业，需要实现题目的要求的迷宫算法，然后将迷宫算法图形化，生成图像，最后转为PDF格式Requirement1 AimsThe main purpose of the assignment is to let you practice the following programming techniques:• work with command line arguments, read from and write to files;• perform operations on lists of lists, execute tests and repetitions;• organise a program into well defined functions;• design recursive procedures;• gain a first acquaintance with backtracking.2 General presentationYou will design and implement a program that will• analyse the various characteristics of a maze, represented by a particular coding of its basic con-stituents into numbers stored in a file whose contents is read, and• – either display those characteristics– or output some Latex code, to be saved in a file, from which a pictorial representation of themaze can be produced.The representation of the maze is based on a coding with the four digits 0, 1, 2 and 3 such that• 0 codes points that are connected to neither their right nor below neighbours• 1 codes points that are connected to their right neighbours but not to their below ones:• 2 codes points that are connected to their below neighbours but not to their right ones:• 3 codes points that are connected to both their right and below neighbours:A point that is connected to none of their left, right, above and below neighbours represents a pillar:Analysing the maze will allow you to also represent:• cul-de-sacs:• certain kinds of paths:13 Examples3.1 First exampleGiven a file named maze1.txt whose contents is1 0 2 2 1 2 3 03 2 2 1 2 0 2 23 0 1 1 3 1 0 02 0 3 0 0 1 2 03 2 2 0 1 2 3 21 0 0 1 1 0 0 0your program when run as python3 maze.py –file maze1.txt should outputThe maze has 12 gates.The maze has 8 sets of walls that are all connected.The maze has 2 inaccessible inner points.The maze has 4 accessible areas.The maze has 3 sets of accessible cul-de-sacs that areall connected.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.and when run as python3 maze.py -print –file maze1.txt should produce some output saved in afile named maze1.tex, which can be given as argument to pdflatex to produce a file named maze1.pdfthat views as follows.23.2 Second exampleGiven a file named maze2.txt whose contents is022302120222222223111032301322130302312322232330001000100000your program when run as python3 maze.py –file maze2.txt should outputThe maze has 20 gates.The maze has 4 sets of walls that are all connected.The maze has 4 inaccessible inner points.The maze has 13 accessible areas.The maze has 11 sets of accessible cul-de-sacs that are all connected.The maze has 5 entry-exit paths with no intersections not to cul-de-sacs.and when run as python3 maze.py -print –file maze2.txt should produce some output saved in afile named maze2.tex, which can be given as argument to pdflatex to produce a file named maze2.pdfthat views as follows.33.3 Third exampleGiven a file named labyrinth1.txt whose contents is3111111113221122131202330230221122031021312231011120202212302301123022303130203122121212222031103222211031100211111101110your program when run as python3 maze.py –file labyrinth1.txt should outputThe maze has 2 gates.The maze has 2 sets of walls that are all connected.The maze has no inaccessible inner point.The maze has a unique accessible area.The maze has 8 sets of accessible cul-de-sacs that are all connected.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.and when run as python3 maze.py -print –file labyrinth1.txt should produce some output savedin a file named labyrinth1.tex, which can be given as argument to pdflatex to produce a file namedlabyrinth1.pdf that views as follows.4 Detailed description4.1 InputThe input is expected to consist of y dim lines of x dim members of {0,1,2,3}, where x dim and y dim are atleast equal to 2 and at most equal to 31 and 41, respectively, with possibly lines consisting of spaces onlythat will be ignored and with possibly spaces anywhere on the lines with digits. If n is the x th digit ofthe y th line with digits, with 0 ≤ x &lt; x dim and 0 ≤ y &lt; y dim , then• n is to be associated with a point situated x × 0.5 cm to the right and y × 0.5 cm below an origin,• n is to be connected to the point 0.5 cm to its right just in case n = 1 or n = 3, and• n is to be connected to the point 0.5 cm below itself just in case n = 2 or n = 3.The last digit on every line with digits cannot be equal to 1 or 3, and the digits on the last line withdigits cannot be equal to 2 or 3, which ensures that the input encodes a maze, that is, a grid of width(x dim −1)×0.5 cm and of height (y dim −1)×0.5 cm (hence of maximum width 15 cm and of maximumheight 20 cm), with possibly gaps on the sides and inside. A point not connected to any of its neighboursis thought of as a pillar; a point connected to at least one of its neighbours is thought of as part of a wall.We talk about inner point to refer to a point that lies (x+0.5)×0.5 cm to the right of and (y+0.5)×0.5cm below the origin with 0 ≤ x &lt; x dim − 1 and 0 ≤ y &lt; y dim − 1.4.2 OutputIf not run as either python3 maze.py –file filename.txt or as python3 maze.py -print –filefilename.txt (where filename.txt is the name of a file that stores the input) then the program shouldprint out a single line that readsI expect –file followed by filename and possibly -print as command line arguments.and immediately exit. Otherwise, if the input is incorrect, that is, does not satisfy the conditions spelledout in the previous section, then the program should print out a single line that readsIncorrect input.and immediately exit.4.2.1 When the program is run without -print as command-line argumentIf the input is correct and the program is run as python3 maze.py –file filename.txt (wherefilename.txt is the name of a file that stores the input) then the program should output a first linethat reads one ofThe maze has no gate.The maze has a single gate.The maze has N gates.5with N an appropriate integer at least equal to 2, a second line that reads one ofThe maze has no wall.The maze has a single wall that are all connected.The maze has N sets of walls that are all connected.with N an appropriate integer at least equal to 2, a third line that reads one ofThe maze has no inaccessible inner point.The maze has a unique inaccessible inner point.The maze has N inaccessible inner points.with N an appropriate integer at least equal to 2, a fourth line that reads one ofThe maze has no accessible area.The maze has a unique accessible area.The maze has N accessible areas.with N an appropriate integer at least equal to 2, a fifth line that reads one ofThe maze has no accessible cul-de-sac.The maze has accessible cul-de-sacs that are all connected.The maze has N sets of accessible cul-de-sacs that are all connected.with N an appropriate integer at least equal to 2, and a sixth line that reads one ofThe maze has no entry-exit path with no intersection not to cul-de-sacs.The maze has a unique entry-exit path with no intersection not to cul-de-sacs.The maze has N entry-exit paths with no intersections not to cul-de-sacs.with N an appropriate integer at least equal to 2.• A gate is any pair of consecutive points on one of the four sides of the maze that are not connected.• An inaccessible inner point is an inner point that cannot be reached from any gate.• An accessible area is a maximal set of inner points that can all be accessed from the same gate (sothe number of accessible inner points is at most equal to the number of gates).• A set of accessible cul-de-sacs that are all connected is a maximal set S of connected inner pointsthat can all be accessed from the same gate g and such that for all points p in S, if p has beenaccessed from g for the first time, then either p is in a dead end or moving on without ever gettingback leads into a dead end.• An entry-exit path with no intersections not to cul-de-sacs is a maximal set S of connected innerpoints that go from a gate to another (necessarily different) gate and such that for all points p inS, there is only one way to move on from p without getting back and without entering a cul-de-sac.6Pay attention to the expected format, including spaces. Note that your program should output no blankline. For a given test, the output of your program will be compared with the expected output; yourprogram will pass the test if and only if both outputs are absolutely identical, character for character,including spaces. For the provided examples, the expected outputs are available in files that end in_output.txt. To check that the output of your program on those examples is correct, you can redirectit to a file and compare the contents of that file with the contents of the appropriate _output.txt fileusing the diff command. If diff silently exits then your program passes the test; otherwise it fails it.For instance, runpython3 maze.py –file maze1.txt &gt;maze1_my_output.txtand thendiff maze1_my_output.txt maze1_output.txtto check whether your program succeeds on the first provided example.4.3 When the program is run with -print as command-line argumentIf the input is correct and the program is run as If the input is correct and the program is run aspython3 maze.py -print –file filename.txt (where filename.txt is the name of a file that storesthe input) then the program should output some lines saved in a file named filename.tex, that can begiven as an argument to pdflatex to produce a file named filename.pdf that depicts the maze. Theprovided examples will show you what filename.tex should contain.• Walls are drawn in blue. There is a command for every longest segment that is part of a wall.Horizontal segments are drawn starting with the topmost leftmost segment and finishing withthe bottommost rightmost segment. Then vertical segments are drawn starting with the topmostleftmost segment and finishing with the bottommost rightmost segment.• Pillars are drawn as green circles.• Inner points in accessible cul-de-sacs are drawn as red crosses.• The paths with no intersection not to cul-de-sacs are drawn as dashed yellow lines. There is acommand for every longest segment on such a path. Horizontal segments are drawn starting withthe topmost leftmost segment and finishing with the bottommost rightmost segment, with thosesegments that end at a gate sticking out by 0.25 cm. Then vertical segments are drawn startingwith the topmost leftmost segment and finishing with the bottommost rightmost segment, withthose segments that end at a gate sticking out by 0.25 cm.Pay attention to the expected format, including spaces and blank lines. Lines that start with % arecomments; there are 4 such lines, that have to be present even when there is no item to be displayed ofthe kind described by the comment. The output of your program redirected to a file will be comparedwith the expected output saved in a file (of a different name of course) using the diff command. Foryour program to pass the associated test, diff should silently exit, which requires that the contents ofboth files be absolutely identical, character for character, including spaces and blank lines. Check yourprogram on the provided examples using the associated .tex files. For instance, run7python3 maze.py -print –file maze1.txtand thendiff maze1.tex maze1_expected.texto check whether your program succeeds on the first provided example.5 Submission and assessment5.1 SubmissionYour program will be stored in a file named maze.py. After you have developed and tested your program,upload your files using WebCMS. Assignments can be submitted more than once: the last version ismarked. Your assignment is due by October 2, 11:59pm.5.2 AssessmentUp to 8 marks will reward correctness of solutions by automatically testing your program on some tests,all different to the provided examples. Read carefully the part on program output to maximise yourchances of not failing some tests for stupid reasons. For each test, the automarking script will let yourprogram run for 30 seconds. Still you should not take advantage of this and strive for a solution thatgives an immediate output for any input.Up to 2 marks will reward good comments, good choice of names for identifiers and functions, readabilityof code, simplicity of statements, compactness of functions. This will be determined manually.Late assignments will be penalised: the mark for a late submission will be the minimum of the awardedmark and 10 minus the number of full and partial days that have elapsed from the due date.The outputs of your programs should be exactly as indicated.5.3 Reminder on plagiarism policyYou are permitted, indeed encouraged, to discuss ways to solve the assignment with other people. Suchdiscussions must be in terms of algorithms, not code. But you must implement the solution on yourown. Submissions are routinely scanned for similarities that occur when students copy and modify otherpeople’s work, or work very closely together on a single implementation. Severe penalties apply to asubmission that is not the original work of the person submitting it.","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"代写java COSE60507  Algorithmics","slug":"page2","date":"2016-09-30T17:52:31.000Z","updated":"2016-10-02T15:51:22.652Z","comments":true,"path":"2016/10/01/page2/","link":"","permalink":"http://yoursite.com/2016/10/01/page2/","excerpt":"","text":"Introduction实现binary sequence search tree（BSST）以及实现其升级版本AVL Tree，评分点比较详细，需要做对比分析以及实现，代码实现不能使用library，最终提交code和report，应客户要求，分别用Java、C#、C、C++四种语言进行了实现。RequirementScenario: GlobalQuiz is a popular mobile multiplayer quiz game. Each registered player has a unique numerical id. The GlobalQuiz server maintains a list in memory of the players currently playing the game. This list can be considered a data dictionary, where the numerical id is the key, and the player details is the data.The data dictionary adt implements the following operations: proc insert ( int key) ;pointer fun find( int key ) ;proc delete( int key );Currently the player list is stored as list in an array, ordered by key. When a player logs on to the game, their details are added to the back of the list and sifted to the correct position using one pass of an insertion sort. When the server needs to access a player’s details, it conducts a binary search. When a player leaves the game, their details are deleted from the list, and the remaining entries are moved down to fill the gap.GlobalQuiz has become very popular, with thousands of players connected at once. Its makers would like to explore whether there is a more efficient way of storing the player details. They would like to use a tree-like structure, and are considering a binary sequence search tree (BSST).Task: Original List Implementation: Write a program implementing the list, as described above, in a language of your choice from Java, C#, C++ or C. Your program should contain one class implementing the ADT, and a main method or GUI which allows each method to be tested. Your implementation simply needs to store a list of integers – the keys. [15 marks]State and justify the big-O efficiency of each method in the original list implementation. [5 marks]BSST proposal Describe and discuss, using diagrams, high-level pseudocode and a big-O analysis of each method, the advantages and disadvantages of using a Binary Sequence Search Tree (BSST) to implement the ADT. [15 marks]A better tree implementation Choose either the Order 2 B-Tree or an AVL Tree, and explain, using diagrams, high-level pseudocode, and big-O analysis, how it could be implemented and its advantages and disadvantages compared to the BSST proposal. [15 marks] Write a program implementing your chosen data structure in the language of your choice. [20 marks]Conclusion Summarise your analysis in a table, showing the big-O efficiencies of each of the three operations (insert, find and delete) for each of the 3 implementations. Which implementation do you recommend for the GlobalQuiz scenario and why? Would the recommendation be different for different usage scenarios? [10 marks]Further Discussion Research and describe further implementations (such as other types of tree) that GlobalQuiz could consider. What are their advantages and disadvantages? [15 marks]Referencing and readability of report [5 marks]","categories":[],"tags":[{"name":"Algorithmics","slug":"Algorithmics","permalink":"http://yoursite.com/tags/Algorithmics/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"JAVA代写 CS302 program 1","slug":"page1","date":"2016-09-30T07:55:30.000Z","updated":"2016-10-02T15:51:01.939Z","comments":true,"path":"2016/09/30/page1/","link":"","permalink":"http://yoursite.com/2016/09/30/page1/","excerpt":"","text":"Introduction 此java项目是在week1和2的基础上完成week3，功能不难，不过内容很繁琐时间急，包括了详细的测试，最后提交到网站服务器测试，比较麻烦的是每次提交后得一个小时之后才能继续提交，客户要求时间为6小时，最后开发时间为5小时，其中coding了2小时、服务器测试提交了3次，满分。RequirementP1: Review QuizFor this assignment, you will create a program that will ultimately allow its users to submit and answer multiple choice review questions in preparation for the CS302 Exams. This assignment is organized into three weekly milestones (Week1, Week2, and Week3). At the end of each milestone, you will submit code and receive feedback on your progress through zyLabs. Your learning goals for this assignment include:Incrementally develop a complete Java application from a high-level specification.Design algorithms that account for basic computer input, output, memory, and processing.Iteratively test and debug code throughout the development process.Document code with comments and appropriate styling according to the guides.Build expressions using basic operators: logical, arithmetic, and string-based.Distinguish different types of data, and identify the most appropriate types for all variables.Utilize conditional and looping flow control, both in isolation and in nested structures.Utilize the print and println methods in System.out, to display formatted output.Utilize a single Scanner object to read input from the console.Perform input validation on the user’s input.Your grade for this program includes:Weekly Milestone Progress36% Program compiles and passes the weekly automated tests in zyLabs. Each weekly milestone is includes three automated tests, and each of these tests are each worth 4% of your total program grade.Final Program Functionality44% Program compiles and passes additional automated tests for both functionality and conformance to the program specification. For example, your program should avoid using features that have not yet been covered in previous zyBooks chapters including: Arrays, User-Defined Methods, Additional Classes, Exception Handling, Packages (outside the default), Etc.Style and Structure10% Program uses appropriate variable names, spacing, and control structures in conformance with the CS302 Style Guide, and to make code easier to read.Documentation10% Program is appropriately commented in a way that is meaningful for readers who understand Java, but are not familiar with the logic or purpose of your code. These comments should conform to the CS302 Commenting Guide.Each CS302 student is expected to individually complete this assignment (this is NOT a team assignment). While you are encouraged to discuss general algorithms, and the behavior or syntax for specific java programming constructs, you are NOT allowed to share code for this assignment in any form. All of the code that you submit with this assignment should either be conceived-of and manually typed into the computer by you, or it should be provided for you through this website. AVOID leaving any code in widely accessible places, like: on an unsecured computer or on a widely accessible (non-password protected) website. Remember, all piazza posts that include assignment code or fragments must be marked as private so they are only visible to the poster and the course’s instructional staff.Week1 – Ask Me One QuestionCreate a new Java Project in Eclipse. You can name this project whatever you want, but Program1 is a sensible name. Next download theReviewQuiz.java and P1.jar files (try right-clicking to “Save Link As…” these files). Copy this .java file into the src folder within your new Java project’s folder, and copy this .jar file into your project folder itself (outside of the src folder). You may need to select Refresh from the File menu (or press F5), if you cannot immediately see these files in the Package Explorer within Eclipse. In order to use the provided P1.jar file, you’ll need to right-click on this file within the Package Explorer and select “Add to Build Path…” from the “Build Path” sub menu. Your entire program for this assignment should be implemented within the main method of this ReviewQuiz.java file. Remember to follow the course Style Guide and Commenting Guide as you develop this program. Also remember to regularly test (compile and run) your program as you develop it.As soon as your program begins, it should display the following welcome message:Welcome to the CS302 Review Quiz!And just before your program ends, it should display the following closing message (both of these messages should include the demonstrated row of equals symbols):Thank you for using the CS302 Review Quiz!After displaying the welcome message, your program should ask the user to enter their email address to identify them as a particular user:Please enter your email address: jane.doe@wisc.eduNote that the orange text above indicate text that was entered by the user. Although your program will not use this information until the next milestone, your program should read in this email address and store it for later use.Before asking the user a question, you will solicit advice on which sections the user is interested in reviewing. The P1.getSections() method evaluates to a String that includes a list of numbered section names. For example:1 String sectionText P1.getSections();After printing out this list, your code should prompt the user for their choice, read in their integer response, and store it for later use. Note that if adding this P1.getSections() instruction to your code produces an error stating that P1 cannot be resolved, it is likely that the P1.jar file was not correctly added to your project, and you should double check that you correctly followed the instructions in step 0. If all is well, this part of your program should look like the following when it is run:SECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1Note: Your program should only use a single Scanner object to read all user input. Creating and using multiple “new Scanner(System.in)” objects produces behavior that is not defined in the Java specification, could cause trouble for some auto grading tools, and is likely to lose you points on this assignment. So don’t do it :).Next we’ll present the user with their first question. The P1.getQuestion() method should evaluate to a String containing a question for the user. But if you try to retrieve this string before choosing a section that there are questions within, you will see the following error message. Try this out now!Exception in thread “main” java.lang.RuntimeException: No questions were available for the selected sections.This P1.getQuestion() method is stateful, which means that it may evaluate to different String values depending on what code ran before it. In order to get a question from the user’s chosen section, we must first call P1.toggleSection( 1 ); This will cause P1.getQuestion() to resolve as a String containing a question from section 1. You should replace this 1, with an expression that evaluates to the section that was chosen by the user, so they instead see a question from the section that they have chosen. When the user chooses a section that there are no questions for, your program will crash showing the above message (this will be fixed in the last milestone). Otherwise, they should see a question from the section that they previously selected. Note that the provided questions (you will eventually be able to add more questions of your own) are within sections 1 and 2.Update 9/13: The P1.toggleSection method should be called immedaitely after reading in the user’s section choice. If you print anything out to the screen between reading in the user’s choice and calling P1.toggleSection, your code will run into problems with one of the automated milestone1 tests.Now it is time to read in the user’s answer to the previous multiple choice question. This question should always be a letter: usually A, B, C, … but T, F and other single letter answers are possible. After they answer this question, they should see the correct answer displayed on the screen. You can retrieve the correct answer by using the method P1.getAnswer() which returns this answer as a single char. Here is what a complete run of this program might look like at this point (note the expected vertical whitespace in this example):Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1[T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: TThe correct answer is: TThank you for using the CS302 Review Quiz!Review the code that you have written so far, and after you are satisfied that it conforms to the above specifications, submit a copy of your working ReviewQuiz.java code along with this P1.java placeholder file (since we cannot updload jar files) to zyBooks. Note that there should not be any need to add this P1.java to your Eclipse project, and that doing so is likely to create name conflicts with the P1.jar file that you are already using. If the automated tests detect any errors with your code, you can fix your code and resubmit it as many times as you’d like (however, you’ll have to wait 60 minutes between submissions). You will be awarded points based on your submission that earns the most points prior to the due date: 8:00am on Thursday, September 15th.Week2 – As You WishStart by extending your program from Milestone1 to ask the user to enter a new review problem after they answer the question and before the program’s closing message is displayed. Here’s an example of what these new prompts and user-input should look like:Enter a multiple choice question (in one line of text):[T]rue or [F]alse, statements in Java end with a semicolon.Enter the correct answer for this question (one letter): TSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 1There are just a couple more steps before this question that the user has answered is added to their local database. First, your code should give the user a chance to proof read their question and either confirm or deny that it should be added.Please proofread your problem and confirm you would like to submit it (Y/N): YThank you for submitting this new problem.A response of Y should result in the feedback demonstrated above, and a call to the method P1.submitProblem() which takes four arguments between the parentheses:1 P1.submitProblem( q, a, s, e );The “q” above should be replaced with the String question entered by the use, the “a” with their char answer as an upper-case letter, the “s” with their int section number, and the “e” with their String email address. After this method is called, the final step required to commit this new question to the local database is to call the method P1.done(). You can call this method once at the end of your program, after the closing message is displayed. It may be helpful to leave this line commented out as you work, to avoid adding extra questions to the database. Otherwise you may find it helpful to occasionally delete the file within your project folder that is named “db” to refresh your local question database to contain only the default provided questions.When the user enters anything other than the letter ‘Y’ (either upper-case or lower-case) in response to the confirmation prompt above, your program should NOT call P1.submitProblem() and instead of displaying the “Thank you for submitting this new problem” response demonstrated above, it should display the following:Problem was NOT submitted.Update 9/16: Note that the zyBooks tests will expect that you have converted the answer letter that was entered by the user into upper-case (if it was entered in lower-case) before calling the P1.submitProblem() method.Next we’ll revisit our question and answer code to provide different feedback based on whether the user’s answer is correct. When they enter the correct answer, your program should print out the following response:That’s correct!!!and when the enter an incorrect answer your program should display the correct answer:The correct answer is: TNote that this is only what the prompt should look like when the correct answer is T, and the user has answered something other than T. Both lower-case and upper-case letter T inputs should be treated as correct.Now let’s give the user a chance to rate the difficulty of the question that they just answered, and to see how difficult others have found this questions. The prompts and user-input for this should look as follows (and should be presented to the user after they have seen whether their answer was correct or not):Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.25Of course the specific values entered and displayed here may vary. And as you may have guessed by now, there are a couple of provided methods that you can use to submit and check these user ratings: P1.submitRating(2) to submit a rating of 2 (or change this 2 to match the user’s input) and P1.getRating() to retrieve the current question’s average rating (which was 2.25 in the example above).As the final step in this milestone, we’ll add some menu options for the user to choose whether they would like to 1) Answer a Question, 2) Submit a Problem, or 3) Quit the program. The user will enter A, S, or Q to choose between these options, and then only answer a question or submit a new question before seeing the final closing message. When the user chooses to Quit, they should immediately see the closing message. And when the user enters anything other than an A, S, or Q (or a, s, or q), they should see a message stating the following before the program’s closing message and end:Sorry, but that menu choice was not recognized.Here are a couple of sample runs of the program at this point to see everything working together, and also to demonstrate the required spacing (notice that each main menu option is indented by four spaces):Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: aSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a problem from: 1[T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: FThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.2Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: SEnter a multiple choice question (in one line of text):This is a pretty silly example: A) wrong, B) incorrect, C) correct, D) bad answerEnter the correct answer for this question (one letter): CSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 2Please proofread your problem and confirm you would like to submit it (Y/N): yThank you for submitting this new problem.Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: WSorry, but that menu choice was not recognized.Thank you for using the CS302 Review Quiz!Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [A]nswer a Question [S]ubmit a Problem [Q]uitEnter your choice: qThank you for using the CS302 Review Quiz!After reviewing your code and convincing yourself that it conforms to the above specifications, submit your ReviewQuiz.java file along with this placeholder P1.java file to zyBooks P1 Milestone2. If the automated tests report any errors, attempt to debug your code and submit it again. You are allowed one feedback submission per hour. Your results on these tests will be recorded for points at 8:00am on Thursday, September 22nd.Notice that we have not added very much code to handle unexpected user input. Giving the user another chance to enter a number instead of crashing when the user types in two to select section 2 would be nice. It might also be nice to ensure that they only select section numbers that are within the correct range. Another possibility would be ensure that the email address entered by the user actually conforms to the format of a proper email address. For this programming assignment, we will not be testing your program against these kinds of erroneous inputs. However we certainly encourage you to think about how you could change you code to better deal with these kinds of potential problems. If you would like to try implementing some of these types of changes, please make a separate copy of your work to experiment with. This should help us avoid unanticipated problems that our automated grading tools might encounter with these kinds of customizations.Week3 – More, More, MoreOur Milestone2 ReviewQuiz.java program currently only presents the user with one question when it is run, so we’ll start this section by extending that functionality to present the user with multiple questions. Replace the “[A]nswer a Question” option in your program’s main menu with these two new options: [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers)After selecting either of these options, the user will be asked to choose a section to be asked questions from, and will then be repeatedly: presented with a question, given feedback on it’s correct answer, and then prompted to rate that question and be shown it’s current rating (based on the code you wrote in milestone2).The “[R]andom Sample Quiz” option will ask the user a fixed number of questions. This number is specified by the user in response to the following prompt, which should be displayed after the section selection, and before the first question is asked:Enter the number of problems to review: 3The “[P]roficiency Quiz” option will instead ask the user as many questions as it takes for them to answer a specific number of those questions correctly. The number of correct answers that will end the program will be input using the following prompt (again, between the section selection and first question):Enter the number of correct answers needed to stop: 2Note that every time you call the P1.getQuestion(), P1.getAnswer(), and P1.getRating() methods, you retrieve the current question, answer, and rating. Each time you call the method P1.gotoNextProblem(), these other methods will retrieve the question, answer, and rating for a different problem, so it will be helpful to call this between questions.You should also display an increasing problem number in front of each question, so that the output of your program matches the following:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: rSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose a section to answer a question from: 1Enter the number of problems to review: 31. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: fThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 2The average rating for this question has been: 2.16666666666666652. What characters sequence denotes the start of a comment: A) # B) // C) ; D) Enter your answer: bThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 3.53. What value does the following expression evaluate to: 3 / 2. A) 1 B) 1.5 C) 2Enter your answer: CThe correct answer is: APlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 4The average rating for this question has been: 3.75Thank you for using the CS302 Review Quiz!Now that our user is answering multiple questions, we’d like to allow them to select multiple sections to draw those questions from. Update the section selection code to present the user with multiple prompts until they enter -1 and have selected sections with at least one question in the database. There is a method called P1.questionsAvailable() that evaluates to true when the selected sections contain at least one question. Only call this method when the user enters -1 to determine whether that input should end the section selection loop. Also notice that the P1.getSections() methods already displays selected sections with square brackets around them. Here’s an example of the prompts and inputs:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: pSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 1SECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 2SECTIONS: [1.The Basics], [2.Conditionals], 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 3SECTIONS: [1.The Basics], [2.Conditionals], [3.Loops], 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): -1Enter the number of correct answers needed to stop: 11. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: TThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 2.142857142857143Thank you for using the CS302 Review Quiz!Update 9/22: Note that this ability to select multiple sections should be availabe through both the Random Sample Quiz and Proficiency Quiz options.Next we’ll allow the user to enter multi-line questions when they submit a new question. We’ll rely on the convention that the user enters the word END on a line by itself to indicate that the previous lines contain their entire question. Here is an example of this functionality with prompts:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: sEnter a multiple choice question (including the answer options):Type END on a line by itself to finish question.What does the following code print out to the screen when it is run? if( false || true ) System.out.println(“A”); else System.out.println(“B”); System.out.println(“C”); A) A B) B C) C D) AB E) AC F) BC G) ABCENDEnter the correct answer for this question (one letter): ESECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 2Please proofread your problem and confirm you would like to submit it (Y/N): yThank you for submitting this new problem.Thank you for using the CS302 Review Quiz!As the final step in this milestone you will change this program to present the user with a new menu after processing any menu choice except [Q]uit. This will allow the user to take as many quizzes and submit as many problems as they’d like within a single execution of the program. Note that when multiple quizzes are taken in a single execution, the default section selection from one quiz will persist as the default selection for the next quiz. Thisis the expected behavior for your program, so you don’t need to worry about tracking or clearing these old selections. Here is a final example to demonstrate this functionality with prompts and user input:Welcome to the CS302 Review Quiz!Please enter your email address: jane.doe@wisc.eduMAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: GSorry, but that menu choice was not recognized.MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: PSECTIONS: 1.The Basics, 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): 1SECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsChoose another section to answer problems from (or -1 to stop): -1Enter the number of correct answers needed to stop: 11. [T]rue or [F]alse: Every variable in java has both a type and a value.Enter your answer: FThe correct answer is: TPlease rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 1The average rating for this question has been: 2.02. What characters sequence denotes the start of a comment: A) # B) // C) ; D) Enter your answer: bThat’s correct!!!Please rate the difficulty of this problem (1-easy to 5-hard, or 0-report): 4The average rating for this question has been: 2.6666666666666665MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: sEnter a multiple choice question (including the answer options):Type END on a line by itself to finish question.Oops, I don’t really want to submit this…ENDEnter the correct answer for this question (one letter): NSECTIONS: [1.The Basics], 2.Conditionals, 3.Loops, 4.Arrays, 5.User-Defined Methods, 6.More Methods / Arrays, 7.Multi-D Arrays, 8.Using Objects, 9.Creating Classes, 10.OO Design, 11.Inheritance, 12.Exceptions, 13.File IO, 14.AbstractsEnter the section for this problem: 1Please proofread your problem and confirm you would like to submit it (Y/N): nProblem was NOT submitted.MAIN MENU [R]andom Sample Quiz (fixed number of problems) [P]roficiency Quiz (fixed number of correct answers) [S]ubmit a Problem [Q]uitEnter your choice: qThank you for using the CS302 Review Quiz!Congratulations on completing Program 1 for CS302! As with the previous milestones, you should submit your final ReviewQuiz.java file along with this placeholder P1.java file via zyBooks for feedback on the Week3 Milestone features. If the automated tests report any errors, attempt to debug your code and submit it again.After this program has been completed, we’ll release a replacement for the P1.jar file that you have been using up to this point. Instead of storing and retrieving problems locally from your computer, it will store and retrieve problems from the cloud so that you can share these review materials with your classmates.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Autotest","slug":"Autotest","permalink":"http://yoursite.com/tags/Autotest/"}]}]}